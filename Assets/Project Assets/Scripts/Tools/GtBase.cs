// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gt_base.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Protobuf.Gt {

  /// <summary>Holder for reflection information generated from gt_base.proto</summary>
  public static partial class GtBaseReflection {

    #region Descriptor
    /// <summary>File descriptor for gt_base.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GtBaseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1ndF9iYXNlLnByb3RvEgZndF9tc2ci/AEKBFVzZXISDgoGdXNlcmlkGAEg",
            "ASgJEhEKCWxvZ2lubmFtZRgCIAEoCRIQCghuaWNrbmFtZRgDIAEoCRIbCgNz",
            "ZXgYBCABKA4yDi5ndF9tc2cuR2VuZGVyEhAKCHVzZXJmbGFnGAUgASgFEg8K",
            "B2ZhY2VVcmwYBiABKAkSDwoHY2hhbm5lbBgHIAEoBRISCgpjcmVhdGV0aW1l",
            "GAggASgFEg4KBmlkY2FyZBgJIAEoCRINCgVlbWFpbBgKIAEoCRIOCgZtb2Jp",
            "bGUYCyABKAkSFAoIaXRlbXNfaWQYDCADKAVCAhABEhUKCWl0ZW1zX251bRgN",
            "IAMoA0ICEAEiuQEKC0NvbW1vbkVycm9yEjEKBGNvZGUYASABKA4yIy5ndF9t",
            "c2cuQ29tbW9uRXJyb3IuQ29tbW9uRXJyb3JDb2RlIncKD0NvbW1vbkVycm9y",
            "Q29kZRIICgROb25lEAASDwoLU2Vzc2lvbkxvc3QQARIQCgxVbmtub3duRXJy",
            "b3IQAhIVChFTZXJ2ZXJNYWludGVuYW5jZRADEg4KClNlcnZlckJ1c3kQBBIQ",
            "CgxFcnJDb21tb25SZXEQBSILCglISFJlcXVlc3QiIwoKSEhSZXNwb25zZRIV",
            "Cg1zZXJ2ZXJUaW1lTm93GAEgASgFIk4KDExvZ2luUmVxdWVzdBIMCgRuYW1l",
            "GAEgASgJEhAKCHBhc3N3b3JkGAIgASgJEhEKCXNlc3Npb25pZBgDIAEoCRIL",
            "CgN1aWQYBCABKAki9wIKDUxvZ2luUmVzcG9uc2USNQoEY29kZRgBIAEoDjIn",
            "Lmd0X21zZy5Mb2dpblJlc3BvbnNlLkxvZ2luUmVzcG9uc2VDb2RlEhoKBHVz",
            "ZXIYAiABKAsyDC5ndF9tc2cuVXNlchIOCgZzaWduZWQYAyABKAUSEAoIZ2Ft",
            "ZU5hbWUYBCADKAkSEAoIaG9ybml0ZW0YBSABKAUSEwoLaG9ybml0ZW1udW0Y",
            "BiABKAUSDgoGaG9ybmx2GAcgASgFEhEKCWxvZ2luZGF5cxgIIAEoBRIVCg1s",
            "b2dpbml0ZW10eXBlGAkgAygFEhQKDGxvZ2luaXRlbW51bRgKIAMoBRIWCg5s",
            "b2dpbnByaXplcmF0ZRgLIAMoBSJiChFMb2dpblJlc3BvbnNlQ29kZRIGCgJP",
            "SxAAEg0KCUZvcmJpZGRlbhABEhIKDk5vU3VjaFVzZXJQYXNzEAISEwoPT2xk",
            "UGxheWVyS2lja2VkEAMSDQoJQ29va2llQmFkEAQiHAoNTG9nb3V0UmVxdWVz",
            "dBILCgN1aWQYASABKAkiqwEKDkxvZ291dFJlc3BvbnNlEjcKBGNvZGUYASAB",
            "KA4yKS5ndF9tc2cuTG9nb3V0UmVzcG9uc2UuTG9nb3V0UmVzcG9uc2VDb2Rl",
            "ImAKEkxvZ291dFJlc3BvbnNlQ29kZRIGCgJPaxAAEg0KCUZvcmJpZGRlbhAB",
            "EggKBEZhaWwQAhIOCgpPdGhlckxvZ2luEAMSGQoVV2lsbEV4aXRGb3JPdGhl",
            "ckxvZ2luEAQiOwoQSXRlbUNoYW5nZWRFdmVudBIRCglJdGVtVHlwZXMYASAD",
            "KAUSFAoISXRlbU51bXMYAiADKANCAhABIjcKFE9uTGluZU1lbWJlcnNSZXF1",
            "ZXN0EhAKCGdhbWVOYW1lGAEgASgJEg0KBWxldmVsGAIgASgFIkcKFU9uTGlu",
            "ZU1lbWJlcnNSZXNwb25zZRIQCghnYW1lTmFtZRgBIAEoCRINCgVsZXZlbBgC",
            "IAEoBRINCgVjb3VudBgDIAEoBSIuCg1CWFhTZXRSZXF1ZXN0Eg4KBmluSGFu",
            "ZBgBIAEoAxINCgVpbkJYWBgCIAEoAyJ2Cg5CWFhTZXRSZXNwb25zZRIpCgRj",
            "b2RlGAEgASgOMhsuZ3RfbXNnLkJYWFNldFJlc3BvbnNlLkNvZGUSDgoGaW5I",
            "YW5kGAIgASgDEg0KBWluQlhYGAMgASgDIhoKBENvZGUSBgoCT2sQABIKCgZG",
            "YWlsZWQQASJKChJVc2VyQ2hhdE1zZ1JlcXVlc3QSCwoDdWlkGAEgASgJEgsK",
            "A21zZxgCIAEoCRIMCgR0eXBlGAMgASgFEgwKBHZtc2cYBCABKAwiSwoTVXNl",
            "ckNoYXRNc2dSZXNwb25zZRILCgN1aWQYASABKAkSCwoDbXNnGAIgASgJEgwK",
            "BHR5cGUYAyABKAUSDAoEdm1zZxgEIAEoDCIVChNVc2VyQ2FuY2xlVEdSZXF1",
            "ZXN0IhYKFFVzZXJNZXNzYWdlSWRSZXF1ZXN0IiAKEVVzZXJNZXNzYWdlSWRM",
            "aXN0EgsKA2lkcxgBIAMoBSIhChJVc2VyTWVzc2FnZVJlcXVlc3QSCwoDaWRz",
            "GAEgAygFIuABChNVc2VyTWVzc2FnZVJlc3BvbnNlEj0KCG1zZ190eXBlGAEg",
            "ASgOMisuZ3RfbXNnLlVzZXJNZXNzYWdlUmVzcG9uc2UuVXNlck1lc3NhZ2VU",
            "eXBlEg4KBm1zZ19pZBgCIAEoBRIQCghoYXNfcmVhZBgDIAEoCBITCgtzZW5k",
            "ZXJfbmljaxgEIAEoCRITCgtqc29uX3BhcmFtcxgFIAEoCRIQCghtc2dfdGlt",
            "ZRgGIAEoCSIsCg9Vc2VyTWVzc2FnZVR5cGUSCAoEVGV4dBAAEg8KC1RleHRB",
            "bmRJdGVtEAEitQEKGFVzZXJNZXNzYWdlQWN0aW9uUmVxdWVzdBJGCgZhY3Rp",
            "b24YASABKA4yNi5ndF9tc2cuVXNlck1lc3NhZ2VBY3Rpb25SZXF1ZXN0LlVz",
            "ZXJNZXNzYWdlQWN0aW9uQ29kZRIOCgZtc2dfaWQYAiABKAUiQQoVVXNlck1l",
            "c3NhZ2VBY3Rpb25Db2RlEgoKBkRlbGV0ZRAAEg4KCk1hcmtBc1JlYWQQARIM",
            "CghQaWNrSXRlbRACIsgCChlVc2VyTWVzc2FnZUFjdGlvblJlc3BvbnNlEkYK",
            "BGNvZGUYASABKA4yOC5ndF9tc2cuVXNlck1lc3NhZ2VBY3Rpb25SZXNwb25z",
            "ZS5Vc2VyTWVzc2FnZUFjdFJlc3BDb2RlEg4KBm1zZ19pZBgCIAEoBRIWCgpp",
            "dGVtX3R5cGVzGAMgAygFQgIQARIYCgxpdGVtX2Ftb3VudHMYBCADKAVCAhAB",
            "EkYKBmFjdGlvbhgFIAEoDjI2Lmd0X21zZy5Vc2VyTWVzc2FnZUFjdGlvblJl",
            "cXVlc3QuVXNlck1lc3NhZ2VBY3Rpb25Db2RlIlkKFlVzZXJNZXNzYWdlQWN0",
            "UmVzcENvZGUSBgoCT2sQABIOCgpOb1N1Y2hEYXRhEAESFQoRSXRlbUFscmVh",
            "ZHlQaWNrZWQQAhIQCgxJdGVtTm90RXhpc3QQAyI3ChVFbnRlclRhYmxlSW5m",
            "b1JlcXVlc3QSEAoIZ2FtZU5hbWUYASABKAkSDAoEdHlwZRgCIAEoBSKqAQoJ",
            "RW50ZXJJbmZvEhEKCWJhc2VQb2ludBgBIAMoBRIUCgxtaW5FbnRlclR5cGUY",
            "AiABKAUSFAoIbWluRW50ZXIYAyADKAVCAhABEhYKDm1pbktpY2tPdXRUeXBl",
            "GAQgASgFEhIKCm1pbktpY2tPdXQYBSADKAUSEAoIbWF4Um91bmQYBiABKAUS",
            "DQoFbGV2ZWwYByABKAUSEQoJT25saW5lTnVtGAggASgFIksKFkVudGVyVGFi",
            "bGVJbmZvUmVzcG9uc2USEAoIZ2FtZU5hbWUYASABKAkSHwoEaW5mbxgCIAMo",
            "CzIRLmd0X21zZy5FbnRlckluZm8iKAoUQWx0ZXJOaWNrbmFtZVJlcXVlc3QS",
            "EAoIbmlja25hbWUYASABKAkiyQEKFUFsdGVyTmlja25hbWVSZXNwb25zZRIw",
            "CgRjb2RlGAEgASgOMiIuZ3RfbXNnLkFsdGVyTmlja25hbWVSZXNwb25zZS5D",
            "b2RlEhAKCG5pY2tuYW1lGAIgASgJImwKBENvZGUSBgoCT2sQABIKCgZGYWls",
            "ZWQQARIPCgtJbnZhbGlkQ2hhchACEhEKDUludmFsaWRMZW5ndGgQAxINCglE",
            "dXBsaWNhdGUQBBILCgdCYWRXb3JkEAUSEAoMQ291bnRFeGhhdXN0EAYiMgoV",
            "RW50ZXJHYW1lTm90aWZpY2F0aW9uEgsKA3VpZBgBIAEoCRIMCgRhZGRyGAIg",
            "ASgJIhEKD1VzZXJJbmZvUmVxdWVzdCIuChBVc2VySW5mb1Jlc3BvbnNlEhoK",
            "BHVzZXIYASABKAsyDC5ndF9tc2cuVXNlciIwChFVc2VyRG9Ib3JuUmVxdWVz",
            "dBIPCgdDb250ZXh0GAEgASgJEgoKAmx2GAIgASgFIqgBChJVc2VyRG9Ib3Ju",
            "UmVzcG9uc2USOwoEY29kZRgBIAEoDjItLmd0X21zZy5Vc2VyRG9Ib3JuUmVz",
            "cG9uc2UuVXNlckRvSG9yblJlc3BDb2RlEg4KBml0ZW1ObxgCIAEoBRIPCgdp",
            "dGVtTnVtGAMgASgFIjQKElVzZXJEb0hvcm5SZXNwQ29kZRIGCgJPaxAAEgsK",
            "B05vTW9uZXkQARIJCgVPdGhlchACIpsBChNQdXNoTWVzc2FnZVJlc3BvbnNl",
            "EhMKC1RpdGxlX2NvbG9yGAEgASgJEg0KBVRpdGxlGAIgASgJEhUKDUNvbnRl",
            "eHRfY29sb3IYAyABKAkSDwoHQ29udGV4dBgEIAEoCRIQCghNc2dfdHlwZRgF",
            "IAEoBRISCgpEZWxheV90aW1lGAYgASgFEhIKCk1zZ19zZW5kZXIYByABKAki",
            "EwoRTG9naW5Qcml6ZVJlcXVlc3Qi0wEKEkxvZ2luUHJpemVSZXNwb25zZRI7",
            "CgRjb2RlGAEgASgOMi0uZ3RfbXNnLkxvZ2luUHJpemVSZXNwb25zZS5Mb2dp",
            "blByaXplUmVzcENvZGUSEgoKcHJpemVpbmRleBgCIAEoBRIRCglwcml6ZXR5",
            "cGUYAyABKAUSEAoIcHJpemVudW0YBCABKAUSEQoJcHJpemVyYXRlGAUgASgF",
            "IjQKEkxvZ2luUHJpemVSZXNwQ29kZRIGCgJPSxAAEgsKB05vVGltZXMQARIJ",
            "CgVPdGhlchACIr8BCg5SZWdVc2VyUmVxdWVzdBIRCglsb2dpbm5hbWUYASAB",
            "KAkSEAoIbmlja25hbWUYAiABKAkSCgoCcHcYAyABKAkSDgoGY2FyZGlkGAQg",
            "ASgJEg4KBm1vYmlsZRgFIAEoCRIPCgdjaGFubmVsGAYgASgFEhAKCHBsYXRm",
            "b3JtGAcgASgFEgsKA3NleBgIIAEoBRIPCgdmYWNldXJsGAkgASgJEgwKBHB1",
            "aWQYCiABKAkSDQoFZGV2aWQYCyABKAki7wEKD1JlZ1VzZXJSZXNwb25zZRI1",
            "CgRjb2RlGAEgASgOMicuZ3RfbXNnLlJlZ1VzZXJSZXNwb25zZS5SZWdVc2Vy",
            "UmVzcENvZGUipAEKD1JlZ1VzZXJSZXNwQ29kZRIGCgJPSxAAEhIKDkxvZ2lu",
            "bmFtZWV4aXN0EAESEQoNbmlja25hbWVleGlzdBACEgwKCHB3bGVuZXJyEAMS",
            "DQoJY2FyZGlkZXJyEAQSDQoJbW9iaWxlZXJyEAUSEgoOY2FyZGlkdGltZXNl",
            "cnIQBhISCg5tb2JpbGV0aW1lc2VychAHEg4KCmNoYW5uZWxlcnIQCCorCgZH",
            "ZW5kZXISCAoETWFsZRAAEgoKBkZlbWFsZRABEgsKB1Vua25vd24QAioWCgRS",
            "dWxlEg4KClJ1bGVOb3JtYWwQACpgCgRSYW5rEgcKA0xWMBAAEgcKA0xWMRAB",
            "EgcKA0xWMhACEgcKA0xWMxADEgcKA0xWNBAEEgcKA0xWNRAFEgcKA0xWNhAG",
            "EgcKA0xWNxAHEgcKA0xWOBAIEgcKA0xWORAJQhWqAhJHb29nbGUuUHJvdG9i",
            "dWYuR3RiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Protobuf.Gt.Gender), typeof(global::Google.Protobuf.Gt.Rule), typeof(global::Google.Protobuf.Gt.Rank), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.User), global::Google.Protobuf.Gt.User.Parser, new[]{ "Userid", "Loginname", "Nickname", "Sex", "Userflag", "FaceUrl", "Channel", "Createtime", "Idcard", "Email", "Mobile", "ItemsId", "ItemsNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.CommonError), global::Google.Protobuf.Gt.CommonError.Parser, new[]{ "Code" }, null, new[]{ typeof(global::Google.Protobuf.Gt.CommonError.Types.CommonErrorCode) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.HHRequest), global::Google.Protobuf.Gt.HHRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.HHResponse), global::Google.Protobuf.Gt.HHResponse.Parser, new[]{ "ServerTimeNow" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.LoginRequest), global::Google.Protobuf.Gt.LoginRequest.Parser, new[]{ "Name", "Password", "Sessionid", "Uid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.LoginResponse), global::Google.Protobuf.Gt.LoginResponse.Parser, new[]{ "Code", "User", "Signed", "GameName", "Hornitem", "Hornitemnum", "Hornlv", "Logindays", "Loginitemtype", "Loginitemnum", "Loginprizerate" }, null, new[]{ typeof(global::Google.Protobuf.Gt.LoginResponse.Types.LoginResponseCode) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.LogoutRequest), global::Google.Protobuf.Gt.LogoutRequest.Parser, new[]{ "Uid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.LogoutResponse), global::Google.Protobuf.Gt.LogoutResponse.Parser, new[]{ "Code" }, null, new[]{ typeof(global::Google.Protobuf.Gt.LogoutResponse.Types.LogoutResponseCode) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.ItemChangedEvent), global::Google.Protobuf.Gt.ItemChangedEvent.Parser, new[]{ "ItemTypes", "ItemNums" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.OnLineMembersRequest), global::Google.Protobuf.Gt.OnLineMembersRequest.Parser, new[]{ "GameName", "Level" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.OnLineMembersResponse), global::Google.Protobuf.Gt.OnLineMembersResponse.Parser, new[]{ "GameName", "Level", "Count" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.BXXSetRequest), global::Google.Protobuf.Gt.BXXSetRequest.Parser, new[]{ "InHand", "InBXX" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.BXXSetResponse), global::Google.Protobuf.Gt.BXXSetResponse.Parser, new[]{ "Code", "InHand", "InBXX" }, null, new[]{ typeof(global::Google.Protobuf.Gt.BXXSetResponse.Types.Code) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.UserChatMsgRequest), global::Google.Protobuf.Gt.UserChatMsgRequest.Parser, new[]{ "Uid", "Msg", "Type", "Vmsg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.UserChatMsgResponse), global::Google.Protobuf.Gt.UserChatMsgResponse.Parser, new[]{ "Uid", "Msg", "Type", "Vmsg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.UserCancleTGRequest), global::Google.Protobuf.Gt.UserCancleTGRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.UserMessageIdRequest), global::Google.Protobuf.Gt.UserMessageIdRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.UserMessageIdList), global::Google.Protobuf.Gt.UserMessageIdList.Parser, new[]{ "Ids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.UserMessageRequest), global::Google.Protobuf.Gt.UserMessageRequest.Parser, new[]{ "Ids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.UserMessageResponse), global::Google.Protobuf.Gt.UserMessageResponse.Parser, new[]{ "MsgType", "MsgId", "HasRead", "SenderNick", "JsonParams", "MsgTime" }, null, new[]{ typeof(global::Google.Protobuf.Gt.UserMessageResponse.Types.UserMessageType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.UserMessageActionRequest), global::Google.Protobuf.Gt.UserMessageActionRequest.Parser, new[]{ "Action", "MsgId" }, null, new[]{ typeof(global::Google.Protobuf.Gt.UserMessageActionRequest.Types.UserMessageActionCode) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.UserMessageActionResponse), global::Google.Protobuf.Gt.UserMessageActionResponse.Parser, new[]{ "Code", "MsgId", "ItemTypes", "ItemAmounts", "Action" }, null, new[]{ typeof(global::Google.Protobuf.Gt.UserMessageActionResponse.Types.UserMessageActRespCode) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.EnterTableInfoRequest), global::Google.Protobuf.Gt.EnterTableInfoRequest.Parser, new[]{ "GameName", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.EnterInfo), global::Google.Protobuf.Gt.EnterInfo.Parser, new[]{ "BasePoint", "MinEnterType", "MinEnter", "MinKickOutType", "MinKickOut", "MaxRound", "Level", "OnlineNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.EnterTableInfoResponse), global::Google.Protobuf.Gt.EnterTableInfoResponse.Parser, new[]{ "GameName", "Info" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.AlterNicknameRequest), global::Google.Protobuf.Gt.AlterNicknameRequest.Parser, new[]{ "Nickname" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.AlterNicknameResponse), global::Google.Protobuf.Gt.AlterNicknameResponse.Parser, new[]{ "Code", "Nickname" }, null, new[]{ typeof(global::Google.Protobuf.Gt.AlterNicknameResponse.Types.Code) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.EnterGameNotification), global::Google.Protobuf.Gt.EnterGameNotification.Parser, new[]{ "Uid", "Addr" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.UserInfoRequest), global::Google.Protobuf.Gt.UserInfoRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.UserInfoResponse), global::Google.Protobuf.Gt.UserInfoResponse.Parser, new[]{ "User" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.UserDoHornRequest), global::Google.Protobuf.Gt.UserDoHornRequest.Parser, new[]{ "Context", "Lv" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.UserDoHornResponse), global::Google.Protobuf.Gt.UserDoHornResponse.Parser, new[]{ "Code", "ItemNo", "ItemNum" }, null, new[]{ typeof(global::Google.Protobuf.Gt.UserDoHornResponse.Types.UserDoHornRespCode) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.PushMessageResponse), global::Google.Protobuf.Gt.PushMessageResponse.Parser, new[]{ "TitleColor", "Title", "ContextColor", "Context", "MsgType", "DelayTime", "MsgSender" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.LoginPrizeRequest), global::Google.Protobuf.Gt.LoginPrizeRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.LoginPrizeResponse), global::Google.Protobuf.Gt.LoginPrizeResponse.Parser, new[]{ "Code", "Prizeindex", "Prizetype", "Prizenum", "Prizerate" }, null, new[]{ typeof(global::Google.Protobuf.Gt.LoginPrizeResponse.Types.LoginPrizeRespCode) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.RegUserRequest), global::Google.Protobuf.Gt.RegUserRequest.Parser, new[]{ "Loginname", "Nickname", "Pw", "Cardid", "Mobile", "Channel", "Platform", "Sex", "Faceurl", "Puid", "Devid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Gt.RegUserResponse), global::Google.Protobuf.Gt.RegUserResponse.Parser, new[]{ "Code" }, null, new[]{ typeof(global::Google.Protobuf.Gt.RegUserResponse.Types.RegUserRespCode) }, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// 性别
  /// </summary>
  public enum Gender {
    [pbr::OriginalName("Male")] Male = 0,
    [pbr::OriginalName("Female")] Female = 1,
    [pbr::OriginalName("Unknown")] Unknown = 2,
  }

  /// <summary>
  /// 牌桌规则
  /// </summary>
  public enum Rule {
    [pbr::OriginalName("RuleNormal")] Normal = 0,
  }

  /// <summary>
  /// 牌桌级别
  /// </summary>
  public enum Rank {
    [pbr::OriginalName("LV0")] Lv0 = 0,
    [pbr::OriginalName("LV1")] Lv1 = 1,
    [pbr::OriginalName("LV2")] Lv2 = 2,
    [pbr::OriginalName("LV3")] Lv3 = 3,
    [pbr::OriginalName("LV4")] Lv4 = 4,
    [pbr::OriginalName("LV5")] Lv5 = 5,
    [pbr::OriginalName("LV6")] Lv6 = 6,
    [pbr::OriginalName("LV7")] Lv7 = 7,
    [pbr::OriginalName("LV8")] Lv8 = 8,
    [pbr::OriginalName("LV9")] Lv9 = 9,
  }

  #endregion

  #region Messages
  /// <summary>
  /// 用户
  /// </summary>
  public sealed partial class User : pb::IMessage<User> {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User(User other) : this() {
      userid_ = other.userid_;
      loginname_ = other.loginname_;
      nickname_ = other.nickname_;
      sex_ = other.sex_;
      userflag_ = other.userflag_;
      faceUrl_ = other.faceUrl_;
      channel_ = other.channel_;
      createtime_ = other.createtime_;
      idcard_ = other.idcard_;
      email_ = other.email_;
      mobile_ = other.mobile_;
      itemsId_ = other.itemsId_.Clone();
      itemsNum_ = other.itemsNum_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "userid" field.</summary>
    public const int UseridFieldNumber = 1;
    private string userid_ = "";
    /// <summary>
    /// 用户userid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Userid {
      get { return userid_; }
      set {
        userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "loginname" field.</summary>
    public const int LoginnameFieldNumber = 2;
    private string loginname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Loginname {
      get { return loginname_; }
      set {
        loginname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 3;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sex" field.</summary>
    public const int SexFieldNumber = 4;
    private global::Google.Protobuf.Gt.Gender sex_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Gt.Gender Sex {
      get { return sex_; }
      set {
        sex_ = value;
      }
    }

    /// <summary>Field number for the "userflag" field.</summary>
    public const int UserflagFieldNumber = 5;
    private int userflag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Userflag {
      get { return userflag_; }
      set {
        userflag_ = value;
      }
    }

    /// <summary>Field number for the "faceUrl" field.</summary>
    public const int FaceUrlFieldNumber = 6;
    private string faceUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FaceUrl {
      get { return faceUrl_; }
      set {
        faceUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 7;
    private int channel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Channel {
      get { return channel_; }
      set {
        channel_ = value;
      }
    }

    /// <summary>Field number for the "createtime" field.</summary>
    public const int CreatetimeFieldNumber = 8;
    private int createtime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Createtime {
      get { return createtime_; }
      set {
        createtime_ = value;
      }
    }

    /// <summary>Field number for the "idcard" field.</summary>
    public const int IdcardFieldNumber = 9;
    private string idcard_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Idcard {
      get { return idcard_; }
      set {
        idcard_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 10;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mobile" field.</summary>
    public const int MobileFieldNumber = 11;
    private string mobile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mobile {
      get { return mobile_; }
      set {
        mobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "items_id" field.</summary>
    public const int ItemsIdFieldNumber = 12;
    private static readonly pb::FieldCodec<int> _repeated_itemsId_codec
        = pb::FieldCodec.ForInt32(98);
    private readonly pbc::RepeatedField<int> itemsId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 用户拥有的道具 ，都在这个里面，包括得到的鲜花鸡蛋
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ItemsId {
      get { return itemsId_; }
    }

    /// <summary>Field number for the "items_num" field.</summary>
    public const int ItemsNumFieldNumber = 13;
    private static readonly pb::FieldCodec<long> _repeated_itemsNum_codec
        = pb::FieldCodec.ForInt64(106);
    private readonly pbc::RepeatedField<long> itemsNum_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 对应道具的数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> ItemsNum {
      get { return itemsNum_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Userid != other.Userid) return false;
      if (Loginname != other.Loginname) return false;
      if (Nickname != other.Nickname) return false;
      if (Sex != other.Sex) return false;
      if (Userflag != other.Userflag) return false;
      if (FaceUrl != other.FaceUrl) return false;
      if (Channel != other.Channel) return false;
      if (Createtime != other.Createtime) return false;
      if (Idcard != other.Idcard) return false;
      if (Email != other.Email) return false;
      if (Mobile != other.Mobile) return false;
      if(!itemsId_.Equals(other.itemsId_)) return false;
      if(!itemsNum_.Equals(other.itemsNum_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Userid.Length != 0) hash ^= Userid.GetHashCode();
      if (Loginname.Length != 0) hash ^= Loginname.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (Sex != 0) hash ^= Sex.GetHashCode();
      if (Userflag != 0) hash ^= Userflag.GetHashCode();
      if (FaceUrl.Length != 0) hash ^= FaceUrl.GetHashCode();
      if (Channel != 0) hash ^= Channel.GetHashCode();
      if (Createtime != 0) hash ^= Createtime.GetHashCode();
      if (Idcard.Length != 0) hash ^= Idcard.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Mobile.Length != 0) hash ^= Mobile.GetHashCode();
      hash ^= itemsId_.GetHashCode();
      hash ^= itemsNum_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Userid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Userid);
      }
      if (Loginname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Loginname);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Nickname);
      }
      if (Sex != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Sex);
      }
      if (Userflag != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Userflag);
      }
      if (FaceUrl.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(FaceUrl);
      }
      if (Channel != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Channel);
      }
      if (Createtime != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Createtime);
      }
      if (Idcard.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Idcard);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Email);
      }
      if (Mobile.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Mobile);
      }
      itemsId_.WriteTo(output, _repeated_itemsId_codec);
      itemsNum_.WriteTo(output, _repeated_itemsNum_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Userid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
      }
      if (Loginname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Loginname);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (Sex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Sex);
      }
      if (Userflag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Userflag);
      }
      if (FaceUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FaceUrl);
      }
      if (Channel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Channel);
      }
      if (Createtime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Createtime);
      }
      if (Idcard.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Idcard);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Mobile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mobile);
      }
      size += itemsId_.CalculateSize(_repeated_itemsId_codec);
      size += itemsNum_.CalculateSize(_repeated_itemsNum_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      if (other.Userid.Length != 0) {
        Userid = other.Userid;
      }
      if (other.Loginname.Length != 0) {
        Loginname = other.Loginname;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.Sex != 0) {
        Sex = other.Sex;
      }
      if (other.Userflag != 0) {
        Userflag = other.Userflag;
      }
      if (other.FaceUrl.Length != 0) {
        FaceUrl = other.FaceUrl;
      }
      if (other.Channel != 0) {
        Channel = other.Channel;
      }
      if (other.Createtime != 0) {
        Createtime = other.Createtime;
      }
      if (other.Idcard.Length != 0) {
        Idcard = other.Idcard;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Mobile.Length != 0) {
        Mobile = other.Mobile;
      }
      itemsId_.Add(other.itemsId_);
      itemsNum_.Add(other.itemsNum_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Userid = input.ReadString();
            break;
          }
          case 18: {
            Loginname = input.ReadString();
            break;
          }
          case 26: {
            Nickname = input.ReadString();
            break;
          }
          case 32: {
            sex_ = (global::Google.Protobuf.Gt.Gender) input.ReadEnum();
            break;
          }
          case 40: {
            Userflag = input.ReadInt32();
            break;
          }
          case 50: {
            FaceUrl = input.ReadString();
            break;
          }
          case 56: {
            Channel = input.ReadInt32();
            break;
          }
          case 64: {
            Createtime = input.ReadInt32();
            break;
          }
          case 74: {
            Idcard = input.ReadString();
            break;
          }
          case 82: {
            Email = input.ReadString();
            break;
          }
          case 90: {
            Mobile = input.ReadString();
            break;
          }
          case 98:
          case 96: {
            itemsId_.AddEntriesFrom(input, _repeated_itemsId_codec);
            break;
          }
          case 106:
          case 104: {
            itemsNum_.AddEntriesFrom(input, _repeated_itemsNum_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 0.通讯错误信息
  /// </summary>
  public sealed partial class CommonError : pb::IMessage<CommonError> {
    private static readonly pb::MessageParser<CommonError> _parser = new pb::MessageParser<CommonError>(() => new CommonError());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommonError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonError(CommonError other) : this() {
      code_ = other.code_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonError Clone() {
      return new CommonError(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Google.Protobuf.Gt.CommonError.Types.CommonErrorCode code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Gt.CommonError.Types.CommonErrorCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommonError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommonError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommonError other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            code_ = (global::Google.Protobuf.Gt.CommonError.Types.CommonErrorCode) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CommonError message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum CommonErrorCode {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("SessionLost")] SessionLost = 1,
        [pbr::OriginalName("UnknownError")] UnknownError = 2,
        [pbr::OriginalName("ServerMaintenance")] ServerMaintenance = 3,
        [pbr::OriginalName("ServerBusy")] ServerBusy = 4,
        /// <summary>
        /// 错误的通讯次序
        /// </summary>
        [pbr::OriginalName("ErrCommonReq")] ErrCommonReq = 5,
      }

    }
    #endregion

  }

  /// <summary>
  /// ------------------------------------------------------------------------------
  /// 1.心跳请求
  /// </summary>
  public sealed partial class HHRequest : pb::IMessage<HHRequest> {
    private static readonly pb::MessageParser<HHRequest> _parser = new pb::MessageParser<HHRequest>(() => new HHRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HHRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HHRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HHRequest(HHRequest other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HHRequest Clone() {
      return new HHRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HHRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HHRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HHRequest other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  /// <summary>
  /// 2.心跳回复
  /// </summary>
  public sealed partial class HHResponse : pb::IMessage<HHResponse> {
    private static readonly pb::MessageParser<HHResponse> _parser = new pb::MessageParser<HHResponse>(() => new HHResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HHResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HHResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HHResponse(HHResponse other) : this() {
      serverTimeNow_ = other.serverTimeNow_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HHResponse Clone() {
      return new HHResponse(this);
    }

    /// <summary>Field number for the "serverTimeNow" field.</summary>
    public const int ServerTimeNowFieldNumber = 1;
    private int serverTimeNow_;
    /// <summary>
    /// time.now.unix()
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServerTimeNow {
      get { return serverTimeNow_; }
      set {
        serverTimeNow_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HHResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HHResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerTimeNow != other.ServerTimeNow) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServerTimeNow != 0) hash ^= ServerTimeNow.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServerTimeNow != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ServerTimeNow);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServerTimeNow != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerTimeNow);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HHResponse other) {
      if (other == null) {
        return;
      }
      if (other.ServerTimeNow != 0) {
        ServerTimeNow = other.ServerTimeNow;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ServerTimeNow = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 3.登陆请求
  /// </summary>
  public sealed partial class LoginRequest : pb::IMessage<LoginRequest> {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest(LoginRequest other) : this() {
      name_ = other.name_;
      password_ = other.password_;
      sessionid_ = other.sessionid_;
      uid_ = other.uid_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// 可能是电话号，loginName，昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sessionid" field.</summary>
    public const int SessionidFieldNumber = 3;
    private string sessionid_ = "";
    /// <summary>
    /// 当cookie不为空，name/password失效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sessionid {
      get { return sessionid_; }
      set {
        sessionid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 4;
    private string uid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Password != other.Password) return false;
      if (Sessionid != other.Sessionid) return false;
      if (Uid != other.Uid) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (Sessionid.Length != 0) hash ^= Sessionid.GetHashCode();
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (Sessionid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Sessionid);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Uid);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (Sessionid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sessionid);
      }
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.Sessionid.Length != 0) {
        Sessionid = other.Sessionid;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 26: {
            Sessionid = input.ReadString();
            break;
          }
          case 34: {
            Uid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 4.登陆回复
  /// </summary>
  public sealed partial class LoginResponse : pb::IMessage<LoginResponse> {
    private static readonly pb::MessageParser<LoginResponse> _parser = new pb::MessageParser<LoginResponse>(() => new LoginResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse(LoginResponse other) : this() {
      code_ = other.code_;
      User = other.user_ != null ? other.User.Clone() : null;
      signed_ = other.signed_;
      gameName_ = other.gameName_.Clone();
      hornitem_ = other.hornitem_;
      hornitemnum_ = other.hornitemnum_;
      hornlv_ = other.hornlv_;
      logindays_ = other.logindays_;
      loginitemtype_ = other.loginitemtype_.Clone();
      loginitemnum_ = other.loginitemnum_.Clone();
      loginprizerate_ = other.loginprizerate_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse Clone() {
      return new LoginResponse(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Google.Protobuf.Gt.LoginResponse.Types.LoginResponseCode code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Gt.LoginResponse.Types.LoginResponseCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 2;
    private global::Google.Protobuf.Gt.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Gt.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "signed" field.</summary>
    public const int SignedFieldNumber = 3;
    private int signed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Signed {
      get { return signed_; }
      set {
        signed_ = value;
      }
    }

    /// <summary>Field number for the "gameName" field.</summary>
    public const int GameNameFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_gameName_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> gameName_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> GameName {
      get { return gameName_; }
    }

    /// <summary>Field number for the "hornitem" field.</summary>
    public const int HornitemFieldNumber = 5;
    private int hornitem_;
    /// <summary>
    /// 喇叭消耗货币类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hornitem {
      get { return hornitem_; }
      set {
        hornitem_ = value;
      }
    }

    /// <summary>Field number for the "hornitemnum" field.</summary>
    public const int HornitemnumFieldNumber = 6;
    private int hornitemnum_;
    /// <summary>
    /// 喇叭消耗的货币数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hornitemnum {
      get { return hornitemnum_; }
      set {
        hornitemnum_ = value;
      }
    }

    /// <summary>Field number for the "hornlv" field.</summary>
    public const int HornlvFieldNumber = 7;
    private int hornlv_;
    /// <summary>
    /// 喇叭需要的lv 保留
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hornlv {
      get { return hornlv_; }
      set {
        hornlv_ = value;
      }
    }

    /// <summary>Field number for the "logindays" field.</summary>
    public const int LogindaysFieldNumber = 8;
    private int logindays_;
    /// <summary>
    /// 0啥都没有1第一天登录2第二天登录3第三天登录4第四天登录5第五天登录
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Logindays {
      get { return logindays_; }
      set {
        logindays_ = value;
      }
    }

    /// <summary>Field number for the "loginitemtype" field.</summary>
    public const int LoginitemtypeFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_loginitemtype_codec
        = pb::FieldCodec.ForInt32(74);
    private readonly pbc::RepeatedField<int> loginitemtype_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 轮盘奖品类型15个
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Loginitemtype {
      get { return loginitemtype_; }
    }

    /// <summary>Field number for the "loginitemnum" field.</summary>
    public const int LoginitemnumFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_loginitemnum_codec
        = pb::FieldCodec.ForInt32(82);
    private readonly pbc::RepeatedField<int> loginitemnum_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 轮盘奖品数量15个
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Loginitemnum {
      get { return loginitemnum_; }
    }

    /// <summary>Field number for the "loginprizerate" field.</summary>
    public const int LoginprizerateFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_loginprizerate_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> loginprizerate_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 连续登录奖励倍数7个
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Loginprizerate {
      get { return loginprizerate_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(User, other.User)) return false;
      if (Signed != other.Signed) return false;
      if(!gameName_.Equals(other.gameName_)) return false;
      if (Hornitem != other.Hornitem) return false;
      if (Hornitemnum != other.Hornitemnum) return false;
      if (Hornlv != other.Hornlv) return false;
      if (Logindays != other.Logindays) return false;
      if(!loginitemtype_.Equals(other.loginitemtype_)) return false;
      if(!loginitemnum_.Equals(other.loginitemnum_)) return false;
      if(!loginprizerate_.Equals(other.loginprizerate_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (Signed != 0) hash ^= Signed.GetHashCode();
      hash ^= gameName_.GetHashCode();
      if (Hornitem != 0) hash ^= Hornitem.GetHashCode();
      if (Hornitemnum != 0) hash ^= Hornitemnum.GetHashCode();
      if (Hornlv != 0) hash ^= Hornlv.GetHashCode();
      if (Logindays != 0) hash ^= Logindays.GetHashCode();
      hash ^= loginitemtype_.GetHashCode();
      hash ^= loginitemnum_.GetHashCode();
      hash ^= loginprizerate_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
      if (Signed != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Signed);
      }
      gameName_.WriteTo(output, _repeated_gameName_codec);
      if (Hornitem != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Hornitem);
      }
      if (Hornitemnum != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Hornitemnum);
      }
      if (Hornlv != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Hornlv);
      }
      if (Logindays != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Logindays);
      }
      loginitemtype_.WriteTo(output, _repeated_loginitemtype_codec);
      loginitemnum_.WriteTo(output, _repeated_loginitemnum_codec);
      loginprizerate_.WriteTo(output, _repeated_loginprizerate_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (Signed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Signed);
      }
      size += gameName_.CalculateSize(_repeated_gameName_codec);
      if (Hornitem != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hornitem);
      }
      if (Hornitemnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hornitemnum);
      }
      if (Hornlv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hornlv);
      }
      if (Logindays != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Logindays);
      }
      size += loginitemtype_.CalculateSize(_repeated_loginitemtype_codec);
      size += loginitemnum_.CalculateSize(_repeated_loginitemnum_codec);
      size += loginprizerate_.CalculateSize(_repeated_loginprizerate_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::Google.Protobuf.Gt.User();
        }
        User.MergeFrom(other.User);
      }
      if (other.Signed != 0) {
        Signed = other.Signed;
      }
      gameName_.Add(other.gameName_);
      if (other.Hornitem != 0) {
        Hornitem = other.Hornitem;
      }
      if (other.Hornitemnum != 0) {
        Hornitemnum = other.Hornitemnum;
      }
      if (other.Hornlv != 0) {
        Hornlv = other.Hornlv;
      }
      if (other.Logindays != 0) {
        Logindays = other.Logindays;
      }
      loginitemtype_.Add(other.loginitemtype_);
      loginitemnum_.Add(other.loginitemnum_);
      loginprizerate_.Add(other.loginprizerate_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            code_ = (global::Google.Protobuf.Gt.LoginResponse.Types.LoginResponseCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (user_ == null) {
              user_ = new global::Google.Protobuf.Gt.User();
            }
            input.ReadMessage(user_);
            break;
          }
          case 24: {
            Signed = input.ReadInt32();
            break;
          }
          case 34: {
            gameName_.AddEntriesFrom(input, _repeated_gameName_codec);
            break;
          }
          case 40: {
            Hornitem = input.ReadInt32();
            break;
          }
          case 48: {
            Hornitemnum = input.ReadInt32();
            break;
          }
          case 56: {
            Hornlv = input.ReadInt32();
            break;
          }
          case 64: {
            Logindays = input.ReadInt32();
            break;
          }
          case 74:
          case 72: {
            loginitemtype_.AddEntriesFrom(input, _repeated_loginitemtype_codec);
            break;
          }
          case 82:
          case 80: {
            loginitemnum_.AddEntriesFrom(input, _repeated_loginitemnum_codec);
            break;
          }
          case 90:
          case 88: {
            loginprizerate_.AddEntriesFrom(input, _repeated_loginprizerate_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the LoginResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum LoginResponseCode {
        [pbr::OriginalName("OK")] Ok = 0,
        [pbr::OriginalName("Forbidden")] Forbidden = 1,
        [pbr::OriginalName("NoSuchUserPass")] NoSuchUserPass = 2,
        [pbr::OriginalName("OldPlayerKicked")] OldPlayerKicked = 3,
        [pbr::OriginalName("CookieBad")] CookieBad = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// 5.请求下线
  /// </summary>
  public sealed partial class LogoutRequest : pb::IMessage<LogoutRequest> {
    private static readonly pb::MessageParser<LogoutRequest> _parser = new pb::MessageParser<LogoutRequest>(() => new LogoutRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogoutRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutRequest(LogoutRequest other) : this() {
      uid_ = other.uid_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutRequest Clone() {
      return new LogoutRequest(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private string uid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogoutRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogoutRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogoutRequest other) {
      if (other == null) {
        return;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 6.下线答复
  /// </summary>
  public sealed partial class LogoutResponse : pb::IMessage<LogoutResponse> {
    private static readonly pb::MessageParser<LogoutResponse> _parser = new pb::MessageParser<LogoutResponse>(() => new LogoutResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogoutResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutResponse(LogoutResponse other) : this() {
      code_ = other.code_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutResponse Clone() {
      return new LogoutResponse(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Google.Protobuf.Gt.LogoutResponse.Types.LogoutResponseCode code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Gt.LogoutResponse.Types.LogoutResponseCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogoutResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogoutResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogoutResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            code_ = (global::Google.Protobuf.Gt.LogoutResponse.Types.LogoutResponseCode) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the LogoutResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum LogoutResponseCode {
        [pbr::OriginalName("Ok")] Ok = 0,
        [pbr::OriginalName("Forbidden")] Forbidden = 1,
        [pbr::OriginalName("Fail")] Fail = 2,
        /// <summary>
        /// 账号从其他地方登陆
        /// </summary>
        [pbr::OriginalName("OtherLogin")] OtherLogin = 3,
        /// <summary>
        /// 该局游戏结束，就退出
        /// </summary>
        [pbr::OriginalName("WillExitForOtherLogin")] WillExitForOtherLogin = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// 7.用户项变化
  /// </summary>
  public sealed partial class ItemChangedEvent : pb::IMessage<ItemChangedEvent> {
    private static readonly pb::MessageParser<ItemChangedEvent> _parser = new pb::MessageParser<ItemChangedEvent>(() => new ItemChangedEvent());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemChangedEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemChangedEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemChangedEvent(ItemChangedEvent other) : this() {
      itemTypes_ = other.itemTypes_.Clone();
      itemNums_ = other.itemNums_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemChangedEvent Clone() {
      return new ItemChangedEvent(this);
    }

    /// <summary>Field number for the "ItemTypes" field.</summary>
    public const int ItemTypesFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_itemTypes_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> itemTypes_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ItemTypes {
      get { return itemTypes_; }
    }

    /// <summary>Field number for the "ItemNums" field.</summary>
    public const int ItemNumsFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_itemNums_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> itemNums_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> ItemNums {
      get { return itemNums_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemChangedEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemChangedEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!itemTypes_.Equals(other.itemTypes_)) return false;
      if(!itemNums_.Equals(other.itemNums_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= itemTypes_.GetHashCode();
      hash ^= itemNums_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      itemTypes_.WriteTo(output, _repeated_itemTypes_codec);
      itemNums_.WriteTo(output, _repeated_itemNums_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += itemTypes_.CalculateSize(_repeated_itemTypes_codec);
      size += itemNums_.CalculateSize(_repeated_itemNums_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemChangedEvent other) {
      if (other == null) {
        return;
      }
      itemTypes_.Add(other.itemTypes_);
      itemNums_.Add(other.itemNums_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            itemTypes_.AddEntriesFrom(input, _repeated_itemTypes_codec);
            break;
          }
          case 18:
          case 16: {
            itemNums_.AddEntriesFrom(input, _repeated_itemNums_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 8.请求在线人数 默认当前游戏
  /// </summary>
  public sealed partial class OnLineMembersRequest : pb::IMessage<OnLineMembersRequest> {
    private static readonly pb::MessageParser<OnLineMembersRequest> _parser = new pb::MessageParser<OnLineMembersRequest>(() => new OnLineMembersRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnLineMembersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnLineMembersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnLineMembersRequest(OnLineMembersRequest other) : this() {
      gameName_ = other.gameName_;
      level_ = other.level_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnLineMembersRequest Clone() {
      return new OnLineMembersRequest(this);
    }

    /// <summary>Field number for the "gameName" field.</summary>
    public const int GameNameFieldNumber = 1;
    private string gameName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameName {
      get { return gameName_; }
      set {
        gameName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 2;
    private int level_;
    /// <summary>
    /// 请求级别：0全局，1初级场，2中级场，3高级场
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnLineMembersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnLineMembersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameName != other.GameName) return false;
      if (Level != other.Level) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameName.Length != 0) hash ^= GameName.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GameName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameName);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameName);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnLineMembersRequest other) {
      if (other == null) {
        return;
      }
      if (other.GameName.Length != 0) {
        GameName = other.GameName;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            GameName = input.ReadString();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 9.返回在线人数
  /// </summary>
  public sealed partial class OnLineMembersResponse : pb::IMessage<OnLineMembersResponse> {
    private static readonly pb::MessageParser<OnLineMembersResponse> _parser = new pb::MessageParser<OnLineMembersResponse>(() => new OnLineMembersResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnLineMembersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnLineMembersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnLineMembersResponse(OnLineMembersResponse other) : this() {
      gameName_ = other.gameName_;
      level_ = other.level_;
      count_ = other.count_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnLineMembersResponse Clone() {
      return new OnLineMembersResponse(this);
    }

    /// <summary>Field number for the "gameName" field.</summary>
    public const int GameNameFieldNumber = 1;
    private string gameName_ = "";
    /// <summary>
    /// 游戏name 如xzdd
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameName {
      get { return gameName_; }
      set {
        gameName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 2;
    private int level_;
    /// <summary>
    /// 请求级别：0全局，1初级场，2中级场，3高级场
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 3;
    private int count_;
    /// <summary>
    /// 人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnLineMembersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnLineMembersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameName != other.GameName) return false;
      if (Level != other.Level) return false;
      if (Count != other.Count) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameName.Length != 0) hash ^= GameName.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GameName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameName);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (Count != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Count);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameName);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnLineMembersResponse other) {
      if (other == null) {
        return;
      }
      if (other.GameName.Length != 0) {
        GameName = other.GameName;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            GameName = input.ReadString();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
          case 24: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 10.保险箱设置请求
  /// </summary>
  public sealed partial class BXXSetRequest : pb::IMessage<BXXSetRequest> {
    private static readonly pb::MessageParser<BXXSetRequest> _parser = new pb::MessageParser<BXXSetRequest>(() => new BXXSetRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BXXSetRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BXXSetRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BXXSetRequest(BXXSetRequest other) : this() {
      inHand_ = other.inHand_;
      inBXX_ = other.inBXX_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BXXSetRequest Clone() {
      return new BXXSetRequest(this);
    }

    /// <summary>Field number for the "inHand" field.</summary>
    public const int InHandFieldNumber = 1;
    private long inHand_;
    /// <summary>
    /// 手上筹码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InHand {
      get { return inHand_; }
      set {
        inHand_ = value;
      }
    }

    /// <summary>Field number for the "inBXX" field.</summary>
    public const int InBXXFieldNumber = 2;
    private long inBXX_;
    /// <summary>
    /// 保险箱筹码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InBXX {
      get { return inBXX_; }
      set {
        inBXX_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BXXSetRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BXXSetRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InHand != other.InHand) return false;
      if (InBXX != other.InBXX) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InHand != 0L) hash ^= InHand.GetHashCode();
      if (InBXX != 0L) hash ^= InBXX.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InHand != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(InHand);
      }
      if (InBXX != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(InBXX);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InHand != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InHand);
      }
      if (InBXX != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InBXX);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BXXSetRequest other) {
      if (other == null) {
        return;
      }
      if (other.InHand != 0L) {
        InHand = other.InHand;
      }
      if (other.InBXX != 0L) {
        InBXX = other.InBXX;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            InHand = input.ReadInt64();
            break;
          }
          case 16: {
            InBXX = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 11.保险箱设置回复 + ItemChangedEvent
  /// </summary>
  public sealed partial class BXXSetResponse : pb::IMessage<BXXSetResponse> {
    private static readonly pb::MessageParser<BXXSetResponse> _parser = new pb::MessageParser<BXXSetResponse>(() => new BXXSetResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BXXSetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BXXSetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BXXSetResponse(BXXSetResponse other) : this() {
      code_ = other.code_;
      inHand_ = other.inHand_;
      inBXX_ = other.inBXX_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BXXSetResponse Clone() {
      return new BXXSetResponse(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Google.Protobuf.Gt.BXXSetResponse.Types.Code code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Gt.BXXSetResponse.Types.Code Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "inHand" field.</summary>
    public const int InHandFieldNumber = 2;
    private long inHand_;
    /// <summary>
    /// 手上筹码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InHand {
      get { return inHand_; }
      set {
        inHand_ = value;
      }
    }

    /// <summary>Field number for the "inBXX" field.</summary>
    public const int InBXXFieldNumber = 3;
    private long inBXX_;
    /// <summary>
    /// 保险箱筹码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InBXX {
      get { return inBXX_; }
      set {
        inBXX_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BXXSetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BXXSetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (InHand != other.InHand) return false;
      if (InBXX != other.InBXX) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (InHand != 0L) hash ^= InHand.GetHashCode();
      if (InBXX != 0L) hash ^= InBXX.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (InHand != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(InHand);
      }
      if (InBXX != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(InBXX);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (InHand != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InHand);
      }
      if (InBXX != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InBXX);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BXXSetResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.InHand != 0L) {
        InHand = other.InHand;
      }
      if (other.InBXX != 0L) {
        InBXX = other.InBXX;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            code_ = (global::Google.Protobuf.Gt.BXXSetResponse.Types.Code) input.ReadEnum();
            break;
          }
          case 16: {
            InHand = input.ReadInt64();
            break;
          }
          case 24: {
            InBXX = input.ReadInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the BXXSetResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Code {
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Ok")] Ok = 0,
        /// <summary>
        /// 其他失败
        /// </summary>
        [pbr::OriginalName("Failed")] Failed = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 12.chat 发送
  /// </summary>
  public sealed partial class UserChatMsgRequest : pb::IMessage<UserChatMsgRequest> {
    private static readonly pb::MessageParser<UserChatMsgRequest> _parser = new pb::MessageParser<UserChatMsgRequest>(() => new UserChatMsgRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserChatMsgRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserChatMsgRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserChatMsgRequest(UserChatMsgRequest other) : this() {
      uid_ = other.uid_;
      msg_ = other.msg_;
      type_ = other.type_;
      vmsg_ = other.vmsg_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserChatMsgRequest Clone() {
      return new UserChatMsgRequest(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private string uid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 2;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private int type_;
    /// <summary>
    /// 1: text 2: voice
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "vmsg" field.</summary>
    public const int VmsgFieldNumber = 4;
    private pb::ByteString vmsg_ = pb::ByteString.Empty;
    /// <summary>
    /// voice
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Vmsg {
      get { return vmsg_; }
      set {
        vmsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserChatMsgRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserChatMsgRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Msg != other.Msg) return false;
      if (Type != other.Type) return false;
      if (Vmsg != other.Vmsg) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Vmsg.Length != 0) hash ^= Vmsg.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (Vmsg.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Vmsg);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Vmsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Vmsg);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserChatMsgRequest other) {
      if (other == null) {
        return;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Vmsg.Length != 0) {
        Vmsg = other.Vmsg;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 34: {
            Vmsg = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 13.chat 播放
  /// </summary>
  public sealed partial class UserChatMsgResponse : pb::IMessage<UserChatMsgResponse> {
    private static readonly pb::MessageParser<UserChatMsgResponse> _parser = new pb::MessageParser<UserChatMsgResponse>(() => new UserChatMsgResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserChatMsgResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserChatMsgResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserChatMsgResponse(UserChatMsgResponse other) : this() {
      uid_ = other.uid_;
      msg_ = other.msg_;
      type_ = other.type_;
      vmsg_ = other.vmsg_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserChatMsgResponse Clone() {
      return new UserChatMsgResponse(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private string uid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 2;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private int type_;
    /// <summary>
    /// 1: text 2: voice
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "vmsg" field.</summary>
    public const int VmsgFieldNumber = 4;
    private pb::ByteString vmsg_ = pb::ByteString.Empty;
    /// <summary>
    /// voice
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Vmsg {
      get { return vmsg_; }
      set {
        vmsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserChatMsgResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserChatMsgResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Msg != other.Msg) return false;
      if (Type != other.Type) return false;
      if (Vmsg != other.Vmsg) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Vmsg.Length != 0) hash ^= Vmsg.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (Vmsg.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Vmsg);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Vmsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Vmsg);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserChatMsgResponse other) {
      if (other == null) {
        return;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Vmsg.Length != 0) {
        Vmsg = other.Vmsg;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 34: {
            Vmsg = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 14.用户申请取消托管
  /// </summary>
  public sealed partial class UserCancleTGRequest : pb::IMessage<UserCancleTGRequest> {
    private static readonly pb::MessageParser<UserCancleTGRequest> _parser = new pb::MessageParser<UserCancleTGRequest>(() => new UserCancleTGRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserCancleTGRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserCancleTGRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserCancleTGRequest(UserCancleTGRequest other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserCancleTGRequest Clone() {
      return new UserCancleTGRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserCancleTGRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserCancleTGRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserCancleTGRequest other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  /// <summary>
  /// 15.用户请求所有消息id
  /// </summary>
  public sealed partial class UserMessageIdRequest : pb::IMessage<UserMessageIdRequest> {
    private static readonly pb::MessageParser<UserMessageIdRequest> _parser = new pb::MessageParser<UserMessageIdRequest>(() => new UserMessageIdRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserMessageIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMessageIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMessageIdRequest(UserMessageIdRequest other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMessageIdRequest Clone() {
      return new UserMessageIdRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserMessageIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserMessageIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserMessageIdRequest other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  /// <summary>
  /// 16.推送用户信箱消息id列表 服务器定时推送
  /// </summary>
  public sealed partial class UserMessageIdList : pb::IMessage<UserMessageIdList> {
    private static readonly pb::MessageParser<UserMessageIdList> _parser = new pb::MessageParser<UserMessageIdList>(() => new UserMessageIdList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserMessageIdList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMessageIdList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMessageIdList(UserMessageIdList other) : this() {
      ids_ = other.ids_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMessageIdList Clone() {
      return new UserMessageIdList(this);
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_ids_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> ids_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// msg_id列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Ids {
      get { return ids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserMessageIdList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserMessageIdList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ids_.Equals(other.ids_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ids_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ids_.WriteTo(output, _repeated_ids_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ids_.CalculateSize(_repeated_ids_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserMessageIdList other) {
      if (other == null) {
        return;
      }
      ids_.Add(other.ids_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 17.用户请求消息
  /// </summary>
  public sealed partial class UserMessageRequest : pb::IMessage<UserMessageRequest> {
    private static readonly pb::MessageParser<UserMessageRequest> _parser = new pb::MessageParser<UserMessageRequest>(() => new UserMessageRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMessageRequest(UserMessageRequest other) : this() {
      ids_ = other.ids_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMessageRequest Clone() {
      return new UserMessageRequest(this);
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_ids_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> ids_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Ids {
      get { return ids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ids_.Equals(other.ids_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ids_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ids_.WriteTo(output, _repeated_ids_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ids_.CalculateSize(_repeated_ids_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserMessageRequest other) {
      if (other == null) {
        return;
      }
      ids_.Add(other.ids_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 18.返回用户信箱消息1条
  /// </summary>
  public sealed partial class UserMessageResponse : pb::IMessage<UserMessageResponse> {
    private static readonly pb::MessageParser<UserMessageResponse> _parser = new pb::MessageParser<UserMessageResponse>(() => new UserMessageResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMessageResponse(UserMessageResponse other) : this() {
      msgType_ = other.msgType_;
      msgId_ = other.msgId_;
      hasRead_ = other.hasRead_;
      senderNick_ = other.senderNick_;
      jsonParams_ = other.jsonParams_;
      msgTime_ = other.msgTime_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMessageResponse Clone() {
      return new UserMessageResponse(this);
    }

    /// <summary>Field number for the "msg_type" field.</summary>
    public const int MsgTypeFieldNumber = 1;
    private global::Google.Protobuf.Gt.UserMessageResponse.Types.UserMessageType msgType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Gt.UserMessageResponse.Types.UserMessageType MsgType {
      get { return msgType_; }
      set {
        msgType_ = value;
      }
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 2;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "has_read" field.</summary>
    public const int HasReadFieldNumber = 3;
    private bool hasRead_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRead {
      get { return hasRead_; }
      set {
        hasRead_ = value;
      }
    }

    /// <summary>Field number for the "sender_nick" field.</summary>
    public const int SenderNickFieldNumber = 4;
    private string senderNick_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SenderNick {
      get { return senderNick_; }
      set {
        senderNick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "json_params" field.</summary>
    public const int JsonParamsFieldNumber = 5;
    private string jsonParams_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonParams {
      get { return jsonParams_; }
      set {
        jsonParams_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "msg_time" field.</summary>
    public const int MsgTimeFieldNumber = 6;
    private string msgTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MsgTime {
      get { return msgTime_; }
      set {
        msgTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgType != other.MsgType) return false;
      if (MsgId != other.MsgId) return false;
      if (HasRead != other.HasRead) return false;
      if (SenderNick != other.SenderNick) return false;
      if (JsonParams != other.JsonParams) return false;
      if (MsgTime != other.MsgTime) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgType != 0) hash ^= MsgType.GetHashCode();
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (HasRead != false) hash ^= HasRead.GetHashCode();
      if (SenderNick.Length != 0) hash ^= SenderNick.GetHashCode();
      if (JsonParams.Length != 0) hash ^= JsonParams.GetHashCode();
      if (MsgTime.Length != 0) hash ^= MsgTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MsgType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MsgType);
      }
      if (MsgId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MsgId);
      }
      if (HasRead != false) {
        output.WriteRawTag(24);
        output.WriteBool(HasRead);
      }
      if (SenderNick.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SenderNick);
      }
      if (JsonParams.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(JsonParams);
      }
      if (MsgTime.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MsgTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MsgType);
      }
      if (MsgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (HasRead != false) {
        size += 1 + 1;
      }
      if (SenderNick.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SenderNick);
      }
      if (JsonParams.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonParams);
      }
      if (MsgTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MsgTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.MsgType != 0) {
        MsgType = other.MsgType;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.HasRead != false) {
        HasRead = other.HasRead;
      }
      if (other.SenderNick.Length != 0) {
        SenderNick = other.SenderNick;
      }
      if (other.JsonParams.Length != 0) {
        JsonParams = other.JsonParams;
      }
      if (other.MsgTime.Length != 0) {
        MsgTime = other.MsgTime;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            msgType_ = (global::Google.Protobuf.Gt.UserMessageResponse.Types.UserMessageType) input.ReadEnum();
            break;
          }
          case 16: {
            MsgId = input.ReadInt32();
            break;
          }
          case 24: {
            HasRead = input.ReadBool();
            break;
          }
          case 34: {
            SenderNick = input.ReadString();
            break;
          }
          case 42: {
            JsonParams = input.ReadString();
            break;
          }
          case 50: {
            MsgTime = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UserMessageResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum UserMessageType {
        [pbr::OriginalName("Text")] Text = 0,
        [pbr::OriginalName("TextAndItem")] TextAndItem = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// 19.用户信箱操作请求
  /// </summary>
  public sealed partial class UserMessageActionRequest : pb::IMessage<UserMessageActionRequest> {
    private static readonly pb::MessageParser<UserMessageActionRequest> _parser = new pb::MessageParser<UserMessageActionRequest>(() => new UserMessageActionRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserMessageActionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMessageActionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMessageActionRequest(UserMessageActionRequest other) : this() {
      action_ = other.action_;
      msgId_ = other.msgId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMessageActionRequest Clone() {
      return new UserMessageActionRequest(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private global::Google.Protobuf.Gt.UserMessageActionRequest.Types.UserMessageActionCode action_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Gt.UserMessageActionRequest.Types.UserMessageActionCode Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 2;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserMessageActionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserMessageActionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (MsgId != other.MsgId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Action != 0) hash ^= Action.GetHashCode();
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Action != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Action);
      }
      if (MsgId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MsgId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Action != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      if (MsgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserMessageActionRequest other) {
      if (other == null) {
        return;
      }
      if (other.Action != 0) {
        Action = other.Action;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            action_ = (global::Google.Protobuf.Gt.UserMessageActionRequest.Types.UserMessageActionCode) input.ReadEnum();
            break;
          }
          case 16: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UserMessageActionRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum UserMessageActionCode {
        [pbr::OriginalName("Delete")] Delete = 0,
        /// <summary>
        /// 暂时不用
        /// </summary>
        [pbr::OriginalName("MarkAsRead")] MarkAsRead = 1,
        [pbr::OriginalName("PickItem")] PickItem = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// 20.用户信箱操作回复 + ItemChangedEvent
  /// </summary>
  public sealed partial class UserMessageActionResponse : pb::IMessage<UserMessageActionResponse> {
    private static readonly pb::MessageParser<UserMessageActionResponse> _parser = new pb::MessageParser<UserMessageActionResponse>(() => new UserMessageActionResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserMessageActionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMessageActionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMessageActionResponse(UserMessageActionResponse other) : this() {
      code_ = other.code_;
      msgId_ = other.msgId_;
      itemTypes_ = other.itemTypes_.Clone();
      itemAmounts_ = other.itemAmounts_.Clone();
      action_ = other.action_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMessageActionResponse Clone() {
      return new UserMessageActionResponse(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Google.Protobuf.Gt.UserMessageActionResponse.Types.UserMessageActRespCode code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Gt.UserMessageActionResponse.Types.UserMessageActRespCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 2;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "item_types" field.</summary>
    public const int ItemTypesFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_itemTypes_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> itemTypes_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ItemTypes {
      get { return itemTypes_; }
    }

    /// <summary>Field number for the "item_amounts" field.</summary>
    public const int ItemAmountsFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_itemAmounts_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> itemAmounts_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ItemAmounts {
      get { return itemAmounts_; }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 5;
    private global::Google.Protobuf.Gt.UserMessageActionRequest.Types.UserMessageActionCode action_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Gt.UserMessageActionRequest.Types.UserMessageActionCode Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserMessageActionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserMessageActionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (MsgId != other.MsgId) return false;
      if(!itemTypes_.Equals(other.itemTypes_)) return false;
      if(!itemAmounts_.Equals(other.itemAmounts_)) return false;
      if (Action != other.Action) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      hash ^= itemTypes_.GetHashCode();
      hash ^= itemAmounts_.GetHashCode();
      if (Action != 0) hash ^= Action.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (MsgId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MsgId);
      }
      itemTypes_.WriteTo(output, _repeated_itemTypes_codec);
      itemAmounts_.WriteTo(output, _repeated_itemAmounts_codec);
      if (Action != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Action);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (MsgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      size += itemTypes_.CalculateSize(_repeated_itemTypes_codec);
      size += itemAmounts_.CalculateSize(_repeated_itemAmounts_codec);
      if (Action != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserMessageActionResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      itemTypes_.Add(other.itemTypes_);
      itemAmounts_.Add(other.itemAmounts_);
      if (other.Action != 0) {
        Action = other.Action;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            code_ = (global::Google.Protobuf.Gt.UserMessageActionResponse.Types.UserMessageActRespCode) input.ReadEnum();
            break;
          }
          case 16: {
            MsgId = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            itemTypes_.AddEntriesFrom(input, _repeated_itemTypes_codec);
            break;
          }
          case 34:
          case 32: {
            itemAmounts_.AddEntriesFrom(input, _repeated_itemAmounts_codec);
            break;
          }
          case 40: {
            action_ = (global::Google.Protobuf.Gt.UserMessageActionRequest.Types.UserMessageActionCode) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UserMessageActionResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum UserMessageActRespCode {
        [pbr::OriginalName("Ok")] Ok = 0,
        [pbr::OriginalName("NoSuchData")] NoSuchData = 1,
        [pbr::OriginalName("ItemAlreadyPicked")] ItemAlreadyPicked = 2,
        [pbr::OriginalName("ItemNotExist")] ItemNotExist = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// 21.入场需求请求
  /// </summary>
  public sealed partial class EnterTableInfoRequest : pb::IMessage<EnterTableInfoRequest> {
    private static readonly pb::MessageParser<EnterTableInfoRequest> _parser = new pb::MessageParser<EnterTableInfoRequest>(() => new EnterTableInfoRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnterTableInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterTableInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterTableInfoRequest(EnterTableInfoRequest other) : this() {
      gameName_ = other.gameName_;
      type_ = other.type_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterTableInfoRequest Clone() {
      return new EnterTableInfoRequest(this);
    }

    /// <summary>Field number for the "gameName" field.</summary>
    public const int GameNameFieldNumber = 1;
    private string gameName_ = "";
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameName {
      get { return gameName_; }
      set {
        gameName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnterTableInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnterTableInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameName != other.GameName) return false;
      if (Type != other.Type) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameName.Length != 0) hash ^= GameName.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GameName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameName);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameName);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnterTableInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.GameName.Length != 0) {
        GameName = other.GameName;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            GameName = input.ReadString();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EnterInfo : pb::IMessage<EnterInfo> {
    private static readonly pb::MessageParser<EnterInfo> _parser = new pb::MessageParser<EnterInfo>(() => new EnterInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnterInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterInfo(EnterInfo other) : this() {
      basePoint_ = other.basePoint_.Clone();
      minEnterType_ = other.minEnterType_;
      minEnter_ = other.minEnter_.Clone();
      minKickOutType_ = other.minKickOutType_;
      minKickOut_ = other.minKickOut_.Clone();
      maxRound_ = other.maxRound_;
      level_ = other.level_;
      onlineNum_ = other.onlineNum_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterInfo Clone() {
      return new EnterInfo(this);
    }

    /// <summary>Field number for the "basePoint" field.</summary>
    public const int BasePointFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_basePoint_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> basePoint_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 底 lv1,lv2:基本底 lv3:无效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> BasePoint {
      get { return basePoint_; }
    }

    /// <summary>Field number for the "minEnterType" field.</summary>
    public const int MinEnterTypeFieldNumber = 2;
    private int minEnterType_;
    /// <summary>
    /// 进入门槛类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinEnterType {
      get { return minEnterType_; }
      set {
        minEnterType_ = value;
      }
    }

    /// <summary>Field number for the "minEnter" field.</summary>
    public const int MinEnterFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_minEnter_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> minEnter_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// lv1,lv2:进入门槛数量 lv3:可选的basePoint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> MinEnter {
      get { return minEnter_; }
    }

    /// <summary>Field number for the "minKickOutType" field.</summary>
    public const int MinKickOutTypeFieldNumber = 4;
    private int minKickOutType_;
    /// <summary>
    /// 踢人门槛类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinKickOutType {
      get { return minKickOutType_; }
      set {
        minKickOutType_ = value;
      }
    }

    /// <summary>Field number for the "minKickOut" field.</summary>
    public const int MinKickOutFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_minKickOut_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> minKickOut_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 踢人门槛数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> MinKickOut {
      get { return minKickOut_; }
    }

    /// <summary>Field number for the "maxRound" field.</summary>
    public const int MaxRoundFieldNumber = 6;
    private int maxRound_;
    /// <summary>
    /// 最大圈数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxRound {
      get { return maxRound_; }
      set {
        maxRound_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 7;
    private int level_;
    /// <summary>
    /// 请求级别1初级场，2中级场，3高级场
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "OnlineNum" field.</summary>
    public const int OnlineNumFieldNumber = 8;
    private int onlineNum_;
    /// <summary>
    /// 在线人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OnlineNum {
      get { return onlineNum_; }
      set {
        onlineNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnterInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnterInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!basePoint_.Equals(other.basePoint_)) return false;
      if (MinEnterType != other.MinEnterType) return false;
      if(!minEnter_.Equals(other.minEnter_)) return false;
      if (MinKickOutType != other.MinKickOutType) return false;
      if(!minKickOut_.Equals(other.minKickOut_)) return false;
      if (MaxRound != other.MaxRound) return false;
      if (Level != other.Level) return false;
      if (OnlineNum != other.OnlineNum) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= basePoint_.GetHashCode();
      if (MinEnterType != 0) hash ^= MinEnterType.GetHashCode();
      hash ^= minEnter_.GetHashCode();
      if (MinKickOutType != 0) hash ^= MinKickOutType.GetHashCode();
      hash ^= minKickOut_.GetHashCode();
      if (MaxRound != 0) hash ^= MaxRound.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (OnlineNum != 0) hash ^= OnlineNum.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      basePoint_.WriteTo(output, _repeated_basePoint_codec);
      if (MinEnterType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MinEnterType);
      }
      minEnter_.WriteTo(output, _repeated_minEnter_codec);
      if (MinKickOutType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MinKickOutType);
      }
      minKickOut_.WriteTo(output, _repeated_minKickOut_codec);
      if (MaxRound != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MaxRound);
      }
      if (Level != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Level);
      }
      if (OnlineNum != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(OnlineNum);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += basePoint_.CalculateSize(_repeated_basePoint_codec);
      if (MinEnterType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinEnterType);
      }
      size += minEnter_.CalculateSize(_repeated_minEnter_codec);
      if (MinKickOutType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinKickOutType);
      }
      size += minKickOut_.CalculateSize(_repeated_minKickOut_codec);
      if (MaxRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxRound);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (OnlineNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OnlineNum);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnterInfo other) {
      if (other == null) {
        return;
      }
      basePoint_.Add(other.basePoint_);
      if (other.MinEnterType != 0) {
        MinEnterType = other.MinEnterType;
      }
      minEnter_.Add(other.minEnter_);
      if (other.MinKickOutType != 0) {
        MinKickOutType = other.MinKickOutType;
      }
      minKickOut_.Add(other.minKickOut_);
      if (other.MaxRound != 0) {
        MaxRound = other.MaxRound;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.OnlineNum != 0) {
        OnlineNum = other.OnlineNum;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            basePoint_.AddEntriesFrom(input, _repeated_basePoint_codec);
            break;
          }
          case 16: {
            MinEnterType = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            minEnter_.AddEntriesFrom(input, _repeated_minEnter_codec);
            break;
          }
          case 32: {
            MinKickOutType = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            minKickOut_.AddEntriesFrom(input, _repeated_minKickOut_codec);
            break;
          }
          case 48: {
            MaxRound = input.ReadInt32();
            break;
          }
          case 56: {
            Level = input.ReadInt32();
            break;
          }
          case 64: {
            OnlineNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 22.入场需求返回
  /// </summary>
  public sealed partial class EnterTableInfoResponse : pb::IMessage<EnterTableInfoResponse> {
    private static readonly pb::MessageParser<EnterTableInfoResponse> _parser = new pb::MessageParser<EnterTableInfoResponse>(() => new EnterTableInfoResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnterTableInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterTableInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterTableInfoResponse(EnterTableInfoResponse other) : this() {
      gameName_ = other.gameName_;
      info_ = other.info_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterTableInfoResponse Clone() {
      return new EnterTableInfoResponse(this);
    }

    /// <summary>Field number for the "gameName" field.</summary>
    public const int GameNameFieldNumber = 1;
    private string gameName_ = "";
    /// <summary>
    /// 游戏名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameName {
      get { return gameName_; }
      set {
        gameName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Protobuf.Gt.EnterInfo> _repeated_info_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Protobuf.Gt.EnterInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.Gt.EnterInfo> info_ = new pbc::RepeatedField<global::Google.Protobuf.Gt.EnterInfo>();
    /// <summary>
    /// 入场信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.Gt.EnterInfo> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnterTableInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnterTableInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameName != other.GameName) return false;
      if(!info_.Equals(other.info_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameName.Length != 0) hash ^= GameName.GetHashCode();
      hash ^= info_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GameName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameName);
      }
      info_.WriteTo(output, _repeated_info_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameName);
      }
      size += info_.CalculateSize(_repeated_info_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnterTableInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.GameName.Length != 0) {
        GameName = other.GameName;
      }
      info_.Add(other.info_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            GameName = input.ReadString();
            break;
          }
          case 18: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 23.修改昵称
  /// </summary>
  public sealed partial class AlterNicknameRequest : pb::IMessage<AlterNicknameRequest> {
    private static readonly pb::MessageParser<AlterNicknameRequest> _parser = new pb::MessageParser<AlterNicknameRequest>(() => new AlterNicknameRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AlterNicknameRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlterNicknameRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlterNicknameRequest(AlterNicknameRequest other) : this() {
      nickname_ = other.nickname_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlterNicknameRequest Clone() {
      return new AlterNicknameRequest(this);
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 1;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AlterNicknameRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AlterNicknameRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Nickname != other.Nickname) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Nickname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Nickname);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AlterNicknameRequest other) {
      if (other == null) {
        return;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Nickname = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 24.回复修改昵称
  /// </summary>
  public sealed partial class AlterNicknameResponse : pb::IMessage<AlterNicknameResponse> {
    private static readonly pb::MessageParser<AlterNicknameResponse> _parser = new pb::MessageParser<AlterNicknameResponse>(() => new AlterNicknameResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AlterNicknameResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlterNicknameResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlterNicknameResponse(AlterNicknameResponse other) : this() {
      code_ = other.code_;
      nickname_ = other.nickname_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlterNicknameResponse Clone() {
      return new AlterNicknameResponse(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Google.Protobuf.Gt.AlterNicknameResponse.Types.Code code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Gt.AlterNicknameResponse.Types.Code Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 2;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AlterNicknameResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AlterNicknameResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Nickname != other.Nickname) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Nickname);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AlterNicknameResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            code_ = (global::Google.Protobuf.Gt.AlterNicknameResponse.Types.Code) input.ReadEnum();
            break;
          }
          case 18: {
            Nickname = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AlterNicknameResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Code {
        /// <summary>
        ///  修改成功
        /// </summary>
        [pbr::OriginalName("Ok")] Ok = 0,
        /// <summary>
        ///  修改失败，其他位置原因
        /// </summary>
        [pbr::OriginalName("Failed")] Failed = 1,
        /// <summary>
        ///  无效字符，中文下划线数字字母
        /// </summary>
        [pbr::OriginalName("InvalidChar")] InvalidChar = 2,
        /// <summary>
        ///  无效长度，中文算作2个字符，其他字符算作一个，长度为3-12
        /// </summary>
        [pbr::OriginalName("InvalidLength")] InvalidLength = 3,
        /// <summary>
        ///  重复
        /// </summary>
        [pbr::OriginalName("Duplicate")] Duplicate = 4,
        /// <summary>
        ///  敏感词
        /// </summary>
        [pbr::OriginalName("BadWord")] BadWord = 5,
        /// <summary>
        ///  次数用尽
        /// </summary>
        [pbr::OriginalName("CountExhaust")] CountExhaust = 6,
      }

    }
    #endregion

  }

  /// <summary>
  /// 25.gw内部使用
  /// </summary>
  public sealed partial class EnterGameNotification : pb::IMessage<EnterGameNotification> {
    private static readonly pb::MessageParser<EnterGameNotification> _parser = new pb::MessageParser<EnterGameNotification>(() => new EnterGameNotification());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnterGameNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterGameNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterGameNotification(EnterGameNotification other) : this() {
      uid_ = other.uid_;
      addr_ = other.addr_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterGameNotification Clone() {
      return new EnterGameNotification(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private string uid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "addr" field.</summary>
    public const int AddrFieldNumber = 2;
    private string addr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Addr {
      get { return addr_; }
      set {
        addr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnterGameNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnterGameNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Addr != other.Addr) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (Addr.Length != 0) hash ^= Addr.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (Addr.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Addr);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (Addr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Addr);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnterGameNotification other) {
      if (other == null) {
        return;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.Addr.Length != 0) {
        Addr = other.Addr;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            Addr = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 26.请求用户信息
  /// </summary>
  public sealed partial class UserInfoRequest : pb::IMessage<UserInfoRequest> {
    private static readonly pb::MessageParser<UserInfoRequest> _parser = new pb::MessageParser<UserInfoRequest>(() => new UserInfoRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfoRequest(UserInfoRequest other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfoRequest Clone() {
      return new UserInfoRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserInfoRequest other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  /// <summary>
  /// 27.推动用户信息
  /// </summary>
  public sealed partial class UserInfoResponse : pb::IMessage<UserInfoResponse> {
    private static readonly pb::MessageParser<UserInfoResponse> _parser = new pb::MessageParser<UserInfoResponse>(() => new UserInfoResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfoResponse(UserInfoResponse other) : this() {
      User = other.user_ != null ? other.User.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfoResponse Clone() {
      return new UserInfoResponse(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private global::Google.Protobuf.Gt.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Gt.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(User, other.User)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (user_ != null) hash ^= User.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::Google.Protobuf.Gt.User();
        }
        User.MergeFrom(other.User);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (user_ == null) {
              user_ = new global::Google.Protobuf.Gt.User();
            }
            input.ReadMessage(user_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 28.平台喇叭
  /// </summary>
  public sealed partial class UserDoHornRequest : pb::IMessage<UserDoHornRequest> {
    private static readonly pb::MessageParser<UserDoHornRequest> _parser = new pb::MessageParser<UserDoHornRequest>(() => new UserDoHornRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserDoHornRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDoHornRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDoHornRequest(UserDoHornRequest other) : this() {
      context_ = other.context_;
      lv_ = other.lv_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDoHornRequest Clone() {
      return new UserDoHornRequest(this);
    }

    /// <summary>Field number for the "Context" field.</summary>
    public const int ContextFieldNumber = 1;
    private string context_ = "";
    /// <summary>
    /// 长度控制40
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Context {
      get { return context_; }
      set {
        context_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lv" field.</summary>
    public const int LvFieldNumber = 2;
    private int lv_;
    /// <summary>
    /// 保留
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Lv {
      get { return lv_; }
      set {
        lv_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserDoHornRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserDoHornRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Context != other.Context) return false;
      if (Lv != other.Lv) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Context.Length != 0) hash ^= Context.GetHashCode();
      if (Lv != 0) hash ^= Lv.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Context.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Context);
      }
      if (Lv != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Lv);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Context.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Context);
      }
      if (Lv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lv);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserDoHornRequest other) {
      if (other == null) {
        return;
      }
      if (other.Context.Length != 0) {
        Context = other.Context;
      }
      if (other.Lv != 0) {
        Lv = other.Lv;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Context = input.ReadString();
            break;
          }
          case 16: {
            Lv = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 29.平台喇叭
  /// </summary>
  public sealed partial class UserDoHornResponse : pb::IMessage<UserDoHornResponse> {
    private static readonly pb::MessageParser<UserDoHornResponse> _parser = new pb::MessageParser<UserDoHornResponse>(() => new UserDoHornResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserDoHornResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDoHornResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDoHornResponse(UserDoHornResponse other) : this() {
      code_ = other.code_;
      itemNo_ = other.itemNo_;
      itemNum_ = other.itemNum_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDoHornResponse Clone() {
      return new UserDoHornResponse(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Google.Protobuf.Gt.UserDoHornResponse.Types.UserDoHornRespCode code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Gt.UserDoHornResponse.Types.UserDoHornRespCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "itemNo" field.</summary>
    public const int ItemNoFieldNumber = 2;
    private int itemNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemNo {
      get { return itemNo_; }
      set {
        itemNo_ = value;
      }
    }

    /// <summary>Field number for the "itemNum" field.</summary>
    public const int ItemNumFieldNumber = 3;
    private int itemNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemNum {
      get { return itemNum_; }
      set {
        itemNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserDoHornResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserDoHornResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (ItemNo != other.ItemNo) return false;
      if (ItemNum != other.ItemNum) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (ItemNo != 0) hash ^= ItemNo.GetHashCode();
      if (ItemNum != 0) hash ^= ItemNum.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (ItemNo != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemNo);
      }
      if (ItemNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ItemNum);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (ItemNo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemNo);
      }
      if (ItemNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemNum);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserDoHornResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.ItemNo != 0) {
        ItemNo = other.ItemNo;
      }
      if (other.ItemNum != 0) {
        ItemNum = other.ItemNum;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            code_ = (global::Google.Protobuf.Gt.UserDoHornResponse.Types.UserDoHornRespCode) input.ReadEnum();
            break;
          }
          case 16: {
            ItemNo = input.ReadInt32();
            break;
          }
          case 24: {
            ItemNum = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UserDoHornResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum UserDoHornRespCode {
        [pbr::OriginalName("Ok")] Ok = 0,
        [pbr::OriginalName("NoMoney")] NoMoney = 1,
        [pbr::OriginalName("Other")] Other = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// 30.推送信息
  /// </summary>
  public sealed partial class PushMessageResponse : pb::IMessage<PushMessageResponse> {
    private static readonly pb::MessageParser<PushMessageResponse> _parser = new pb::MessageParser<PushMessageResponse>(() => new PushMessageResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PushMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushMessageResponse(PushMessageResponse other) : this() {
      titleColor_ = other.titleColor_;
      title_ = other.title_;
      contextColor_ = other.contextColor_;
      context_ = other.context_;
      msgType_ = other.msgType_;
      delayTime_ = other.delayTime_;
      msgSender_ = other.msgSender_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushMessageResponse Clone() {
      return new PushMessageResponse(this);
    }

    /// <summary>Field number for the "Title_color" field.</summary>
    public const int TitleColorFieldNumber = 1;
    private string titleColor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TitleColor {
      get { return titleColor_; }
      set {
        titleColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Context_color" field.</summary>
    public const int ContextColorFieldNumber = 3;
    private string contextColor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContextColor {
      get { return contextColor_; }
      set {
        contextColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Context" field.</summary>
    public const int ContextFieldNumber = 4;
    private string context_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Context {
      get { return context_; }
      set {
        context_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Msg_type" field.</summary>
    public const int MsgTypeFieldNumber = 5;
    private int msgType_;
    /// <summary>
    /// 【跑马灯类】：0:功能触发消息1:喇叭消息2:特殊的系统消息3:普通的系统消息 【弹窗类】：4:警告消息5:提示消息，Title为uid 未完待续
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgType {
      get { return msgType_; }
      set {
        msgType_ = value;
      }
    }

    /// <summary>Field number for the "Delay_time" field.</summary>
    public const int DelayTimeFieldNumber = 6;
    private int delayTime_;
    /// <summary>
    /// 延时
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DelayTime {
      get { return delayTime_; }
      set {
        delayTime_ = value;
      }
    }

    /// <summary>Field number for the "Msg_sender" field.</summary>
    public const int MsgSenderFieldNumber = 7;
    private string msgSender_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MsgSender {
      get { return msgSender_; }
      set {
        msgSender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PushMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PushMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TitleColor != other.TitleColor) return false;
      if (Title != other.Title) return false;
      if (ContextColor != other.ContextColor) return false;
      if (Context != other.Context) return false;
      if (MsgType != other.MsgType) return false;
      if (DelayTime != other.DelayTime) return false;
      if (MsgSender != other.MsgSender) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TitleColor.Length != 0) hash ^= TitleColor.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (ContextColor.Length != 0) hash ^= ContextColor.GetHashCode();
      if (Context.Length != 0) hash ^= Context.GetHashCode();
      if (MsgType != 0) hash ^= MsgType.GetHashCode();
      if (DelayTime != 0) hash ^= DelayTime.GetHashCode();
      if (MsgSender.Length != 0) hash ^= MsgSender.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TitleColor.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TitleColor);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (ContextColor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContextColor);
      }
      if (Context.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Context);
      }
      if (MsgType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MsgType);
      }
      if (DelayTime != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(DelayTime);
      }
      if (MsgSender.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MsgSender);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TitleColor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TitleColor);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (ContextColor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContextColor);
      }
      if (Context.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Context);
      }
      if (MsgType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgType);
      }
      if (DelayTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DelayTime);
      }
      if (MsgSender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MsgSender);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PushMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.TitleColor.Length != 0) {
        TitleColor = other.TitleColor;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.ContextColor.Length != 0) {
        ContextColor = other.ContextColor;
      }
      if (other.Context.Length != 0) {
        Context = other.Context;
      }
      if (other.MsgType != 0) {
        MsgType = other.MsgType;
      }
      if (other.DelayTime != 0) {
        DelayTime = other.DelayTime;
      }
      if (other.MsgSender.Length != 0) {
        MsgSender = other.MsgSender;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            TitleColor = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            ContextColor = input.ReadString();
            break;
          }
          case 34: {
            Context = input.ReadString();
            break;
          }
          case 40: {
            MsgType = input.ReadInt32();
            break;
          }
          case 48: {
            DelayTime = input.ReadInt32();
            break;
          }
          case 58: {
            MsgSender = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 31.轮盘大旋转请求
  /// </summary>
  public sealed partial class LoginPrizeRequest : pb::IMessage<LoginPrizeRequest> {
    private static readonly pb::MessageParser<LoginPrizeRequest> _parser = new pb::MessageParser<LoginPrizeRequest>(() => new LoginPrizeRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginPrizeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPrizeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPrizeRequest(LoginPrizeRequest other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPrizeRequest Clone() {
      return new LoginPrizeRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginPrizeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginPrizeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginPrizeRequest other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  /// <summary>
  /// 32.轮盘大旋转回复
  /// </summary>
  public sealed partial class LoginPrizeResponse : pb::IMessage<LoginPrizeResponse> {
    private static readonly pb::MessageParser<LoginPrizeResponse> _parser = new pb::MessageParser<LoginPrizeResponse>(() => new LoginPrizeResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginPrizeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPrizeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPrizeResponse(LoginPrizeResponse other) : this() {
      code_ = other.code_;
      prizeindex_ = other.prizeindex_;
      prizetype_ = other.prizetype_;
      prizenum_ = other.prizenum_;
      prizerate_ = other.prizerate_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPrizeResponse Clone() {
      return new LoginPrizeResponse(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Google.Protobuf.Gt.LoginPrizeResponse.Types.LoginPrizeRespCode code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Gt.LoginPrizeResponse.Types.LoginPrizeRespCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "prizeindex" field.</summary>
    public const int PrizeindexFieldNumber = 2;
    private int prizeindex_;
    /// <summary>
    /// 轮盘上奖品的序号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Prizeindex {
      get { return prizeindex_; }
      set {
        prizeindex_ = value;
      }
    }

    /// <summary>Field number for the "prizetype" field.</summary>
    public const int PrizetypeFieldNumber = 3;
    private int prizetype_;
    /// <summary>
    /// 奖品类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Prizetype {
      get { return prizetype_; }
      set {
        prizetype_ = value;
      }
    }

    /// <summary>Field number for the "prizenum" field.</summary>
    public const int PrizenumFieldNumber = 4;
    private int prizenum_;
    /// <summary>
    /// 奖品数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Prizenum {
      get { return prizenum_; }
      set {
        prizenum_ = value;
      }
    }

    /// <summary>Field number for the "prizerate" field.</summary>
    public const int PrizerateFieldNumber = 5;
    private int prizerate_;
    /// <summary>
    /// 登录奖励倍数 10代表1 15代表1.5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Prizerate {
      get { return prizerate_; }
      set {
        prizerate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginPrizeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginPrizeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Prizeindex != other.Prizeindex) return false;
      if (Prizetype != other.Prizetype) return false;
      if (Prizenum != other.Prizenum) return false;
      if (Prizerate != other.Prizerate) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Prizeindex != 0) hash ^= Prizeindex.GetHashCode();
      if (Prizetype != 0) hash ^= Prizetype.GetHashCode();
      if (Prizenum != 0) hash ^= Prizenum.GetHashCode();
      if (Prizerate != 0) hash ^= Prizerate.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Prizeindex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Prizeindex);
      }
      if (Prizetype != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Prizetype);
      }
      if (Prizenum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Prizenum);
      }
      if (Prizerate != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Prizerate);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Prizeindex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Prizeindex);
      }
      if (Prizetype != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Prizetype);
      }
      if (Prizenum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Prizenum);
      }
      if (Prizerate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Prizerate);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginPrizeResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Prizeindex != 0) {
        Prizeindex = other.Prizeindex;
      }
      if (other.Prizetype != 0) {
        Prizetype = other.Prizetype;
      }
      if (other.Prizenum != 0) {
        Prizenum = other.Prizenum;
      }
      if (other.Prizerate != 0) {
        Prizerate = other.Prizerate;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            code_ = (global::Google.Protobuf.Gt.LoginPrizeResponse.Types.LoginPrizeRespCode) input.ReadEnum();
            break;
          }
          case 16: {
            Prizeindex = input.ReadInt32();
            break;
          }
          case 24: {
            Prizetype = input.ReadInt32();
            break;
          }
          case 32: {
            Prizenum = input.ReadInt32();
            break;
          }
          case 40: {
            Prizerate = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the LoginPrizeResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum LoginPrizeRespCode {
        [pbr::OriginalName("OK")] Ok = 0,
        [pbr::OriginalName("NoTimes")] NoTimes = 1,
        [pbr::OriginalName("Other")] Other = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// 33.注册用户
  /// </summary>
  public sealed partial class RegUserRequest : pb::IMessage<RegUserRequest> {
    private static readonly pb::MessageParser<RegUserRequest> _parser = new pb::MessageParser<RegUserRequest>(() => new RegUserRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegUserRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegUserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegUserRequest(RegUserRequest other) : this() {
      loginname_ = other.loginname_;
      nickname_ = other.nickname_;
      pw_ = other.pw_;
      cardid_ = other.cardid_;
      mobile_ = other.mobile_;
      channel_ = other.channel_;
      platform_ = other.platform_;
      sex_ = other.sex_;
      faceurl_ = other.faceurl_;
      puid_ = other.puid_;
      devid_ = other.devid_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegUserRequest Clone() {
      return new RegUserRequest(this);
    }

    /// <summary>Field number for the "loginname" field.</summary>
    public const int LoginnameFieldNumber = 1;
    private string loginname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Loginname {
      get { return loginname_; }
      set {
        loginname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 2;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pw" field.</summary>
    public const int PwFieldNumber = 3;
    private string pw_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pw {
      get { return pw_; }
      set {
        pw_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cardid" field.</summary>
    public const int CardidFieldNumber = 4;
    private string cardid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cardid {
      get { return cardid_; }
      set {
        cardid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mobile" field.</summary>
    public const int MobileFieldNumber = 5;
    private string mobile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mobile {
      get { return mobile_; }
      set {
        mobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 6;
    private int channel_;
    /// <summary>
    /// 1:ios,2:andriod,3:pc,4:web,5:
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Channel {
      get { return channel_; }
      set {
        channel_ = value;
      }
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 7;
    private int platform_;
    /// <summary>
    /// 平台
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Platform {
      get { return platform_; }
      set {
        platform_ = value;
      }
    }

    /// <summary>Field number for the "sex" field.</summary>
    public const int SexFieldNumber = 8;
    private int sex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sex {
      get { return sex_; }
      set {
        sex_ = value;
      }
    }

    /// <summary>Field number for the "faceurl" field.</summary>
    public const int FaceurlFieldNumber = 9;
    private string faceurl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Faceurl {
      get { return faceurl_; }
      set {
        faceurl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "puid" field.</summary>
    public const int PuidFieldNumber = 10;
    private string puid_ = "";
    /// <summary>
    /// 推荐人id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Puid {
      get { return puid_; }
      set {
        puid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "devid" field.</summary>
    public const int DevidFieldNumber = 11;
    private string devid_ = "";
    /// <summary>
    /// 设备id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Devid {
      get { return devid_; }
      set {
        devid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegUserRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegUserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Loginname != other.Loginname) return false;
      if (Nickname != other.Nickname) return false;
      if (Pw != other.Pw) return false;
      if (Cardid != other.Cardid) return false;
      if (Mobile != other.Mobile) return false;
      if (Channel != other.Channel) return false;
      if (Platform != other.Platform) return false;
      if (Sex != other.Sex) return false;
      if (Faceurl != other.Faceurl) return false;
      if (Puid != other.Puid) return false;
      if (Devid != other.Devid) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Loginname.Length != 0) hash ^= Loginname.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (Pw.Length != 0) hash ^= Pw.GetHashCode();
      if (Cardid.Length != 0) hash ^= Cardid.GetHashCode();
      if (Mobile.Length != 0) hash ^= Mobile.GetHashCode();
      if (Channel != 0) hash ^= Channel.GetHashCode();
      if (Platform != 0) hash ^= Platform.GetHashCode();
      if (Sex != 0) hash ^= Sex.GetHashCode();
      if (Faceurl.Length != 0) hash ^= Faceurl.GetHashCode();
      if (Puid.Length != 0) hash ^= Puid.GetHashCode();
      if (Devid.Length != 0) hash ^= Devid.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Loginname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Loginname);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Nickname);
      }
      if (Pw.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Pw);
      }
      if (Cardid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Cardid);
      }
      if (Mobile.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Mobile);
      }
      if (Channel != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Channel);
      }
      if (Platform != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Platform);
      }
      if (Sex != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Sex);
      }
      if (Faceurl.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Faceurl);
      }
      if (Puid.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Puid);
      }
      if (Devid.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Devid);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Loginname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Loginname);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (Pw.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pw);
      }
      if (Cardid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cardid);
      }
      if (Mobile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mobile);
      }
      if (Channel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Channel);
      }
      if (Platform != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Platform);
      }
      if (Sex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sex);
      }
      if (Faceurl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Faceurl);
      }
      if (Puid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Puid);
      }
      if (Devid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Devid);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegUserRequest other) {
      if (other == null) {
        return;
      }
      if (other.Loginname.Length != 0) {
        Loginname = other.Loginname;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.Pw.Length != 0) {
        Pw = other.Pw;
      }
      if (other.Cardid.Length != 0) {
        Cardid = other.Cardid;
      }
      if (other.Mobile.Length != 0) {
        Mobile = other.Mobile;
      }
      if (other.Channel != 0) {
        Channel = other.Channel;
      }
      if (other.Platform != 0) {
        Platform = other.Platform;
      }
      if (other.Sex != 0) {
        Sex = other.Sex;
      }
      if (other.Faceurl.Length != 0) {
        Faceurl = other.Faceurl;
      }
      if (other.Puid.Length != 0) {
        Puid = other.Puid;
      }
      if (other.Devid.Length != 0) {
        Devid = other.Devid;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Loginname = input.ReadString();
            break;
          }
          case 18: {
            Nickname = input.ReadString();
            break;
          }
          case 26: {
            Pw = input.ReadString();
            break;
          }
          case 34: {
            Cardid = input.ReadString();
            break;
          }
          case 42: {
            Mobile = input.ReadString();
            break;
          }
          case 48: {
            Channel = input.ReadInt32();
            break;
          }
          case 56: {
            Platform = input.ReadInt32();
            break;
          }
          case 64: {
            Sex = input.ReadInt32();
            break;
          }
          case 74: {
            Faceurl = input.ReadString();
            break;
          }
          case 82: {
            Puid = input.ReadString();
            break;
          }
          case 90: {
            Devid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 34.注册回复
  /// </summary>
  public sealed partial class RegUserResponse : pb::IMessage<RegUserResponse> {
    private static readonly pb::MessageParser<RegUserResponse> _parser = new pb::MessageParser<RegUserResponse>(() => new RegUserResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegUserResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Gt.GtBaseReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegUserResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegUserResponse(RegUserResponse other) : this() {
      code_ = other.code_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegUserResponse Clone() {
      return new RegUserResponse(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Google.Protobuf.Gt.RegUserResponse.Types.RegUserRespCode code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Gt.RegUserResponse.Types.RegUserRespCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegUserResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegUserResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegUserResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            code_ = (global::Google.Protobuf.Gt.RegUserResponse.Types.RegUserRespCode) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the RegUserResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum RegUserRespCode {
        [pbr::OriginalName("OK")] Ok = 0,
        [pbr::OriginalName("Loginnameexist")] Loginnameexist = 1,
        [pbr::OriginalName("nicknameexist")] Nicknameexist = 2,
        [pbr::OriginalName("pwlenerr")] Pwlenerr = 3,
        [pbr::OriginalName("cardiderr")] Cardiderr = 4,
        [pbr::OriginalName("mobileerr")] Mobileerr = 5,
        [pbr::OriginalName("cardidtimeserr")] Cardidtimeserr = 6,
        [pbr::OriginalName("mobiletimeserr")] Mobiletimeserr = 7,
        [pbr::OriginalName("channelerr")] Channelerr = 8,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
