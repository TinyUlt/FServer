// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace gt_msg {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class GtZjh {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_gt_msg_JoinFreeRequestzjh__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.JoinFreeRequestzjh, global::gt_msg.JoinFreeRequestzjh.Builder> internal__static_gt_msg_JoinFreeRequestzjh__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_JoinFreeResponsezjh__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.JoinFreeResponsezjh, global::gt_msg.JoinFreeResponsezjh.Builder> internal__static_gt_msg_JoinFreeResponsezjh__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_ActionRequestzjh__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.ActionRequestzjh, global::gt_msg.ActionRequestzjh.Builder> internal__static_gt_msg_ActionRequestzjh__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_ActionResponsezjh__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.ActionResponsezjh, global::gt_msg.ActionResponsezjh.Builder> internal__static_gt_msg_ActionResponsezjh__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_TableUserStatszjh__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableUserStatszjh, global::gt_msg.TableUserStatszjh.Builder> internal__static_gt_msg_TableUserStatszjh__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_TableStatszjh__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableStatszjh, global::gt_msg.TableStatszjh.Builder> internal__static_gt_msg_TableStatszjh__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_TableUserResultzjh__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableUserResultzjh, global::gt_msg.TableUserResultzjh.Builder> internal__static_gt_msg_TableUserResultzjh__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_RoundEndedEventzjh__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.RoundEndedEventzjh, global::gt_msg.RoundEndedEventzjh.Builder> internal__static_gt_msg_RoundEndedEventzjh__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_ForceExitTableRequestzjh__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.ForceExitTableRequestzjh, global::gt_msg.ForceExitTableRequestzjh.Builder> internal__static_gt_msg_ForceExitTableRequestzjh__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_ForceExitTableResponsezjh__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.ForceExitTableResponsezjh, global::gt_msg.ForceExitTableResponsezjh.Builder> internal__static_gt_msg_ForceExitTableResponsezjh__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_GameLifeRequestzjh__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameLifeRequestzjh, global::gt_msg.GameLifeRequestzjh.Builder> internal__static_gt_msg_GameLifeRequestzjh__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_GameLifeResponsezjh__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameLifeResponsezjh, global::gt_msg.GameLifeResponsezjh.Builder> internal__static_gt_msg_GameLifeResponsezjh__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_GameRankListRequestzjh__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameRankListRequestzjh, global::gt_msg.GameRankListRequestzjh.Builder> internal__static_gt_msg_GameRankListRequestzjh__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_GameRankListResponsezjh__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameRankListResponsezjh, global::gt_msg.GameRankListResponsezjh.Builder> internal__static_gt_msg_GameRankListResponsezjh__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_GameReadyRequestzjh__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameReadyRequestzjh, global::gt_msg.GameReadyRequestzjh.Builder> internal__static_gt_msg_GameReadyRequestzjh__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_GameReadyResponsezjh__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameReadyResponsezjh, global::gt_msg.GameReadyResponsezjh.Builder> internal__static_gt_msg_GameReadyResponsezjh__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_GMInfozjh__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.GMInfozjh, global::gt_msg.GMInfozjh.Builder> internal__static_gt_msg_GMInfozjh__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static GtZjh() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxndF96amgucHJvdG8SBmd0X21zZxoNZ3RfYmFzZS5wcm90byKqAQoSSm9p", 
            "bkZyZWVSZXF1ZXN0empoEg8KB3VzZXJfaWQYASACKAkSJgoEcnVsZRgCIAIo", 
            "DjIMLmd0X21zZy5SdWxlOgpSdWxlTm9ybWFsEh8KBHJhbmsYAyACKA4yDC5n", 
            "dF9tc2cuUmFuazoDTFYwEhAKCHRhYmxlX2lkGAQgASgFEhUKDWpvaW5fcGFz", 
            "c3dvcmQYBSABKAkSEQoJYmFzZVBvaW50GAYgASgFIq8EChNKb2luRnJlZVJl", 
            "c3BvbnNlempoEj4KBGNvZGUYASACKA4yMC5ndF9tc2cuSm9pbkZyZWVSZXNw", 
            "b25zZXpqaC5Kb2luRnJlZVJlc3BvbnNlQ29kZRIYChByZWNvbm5lY3RlZF91", 
            "c2VyGAIgASgIEhEKCW1pbl9jb2lucxgDIAEoBRIYChBoYXNfYmFzaWNfbGl2", 
            "aW5nGAQgASgIEh4KFmJhc2ljX2xpdmluZ19hbGxfdGltZXMYBSABKAUSHgoW", 
            "YmFzaWNfbGl2aW5nX3VzZV90aW1lcxgGIAEoBRIaChJiYXNpY19saXZpbmdf", 
            "Y29pbnMYByABKAUSIgoMcmFua19yZXF1ZXN0GAggASgOMgwuZ3RfbXNnLlJh", 
            "bmsSGgoEcmFuaxgJIAEoDjIMLmd0X21zZy5SYW5rEikKCmdhbWVfc3RhdHMY", 
            "CiABKAsyFS5ndF9tc2cuVGFibGVTdGF0c3pqaBIVCg1UYWJsZVBhc3NXb3Jk", 
            "GAsgASgJEhAKCEl0ZW1UeXBlGAwgASgFIqABChRKb2luRnJlZVJlc3BvbnNl", 
            "Q29kZRIGCgJPaxAAEhgKFE1pbmltdW1Db2luc1JlcXVpcmVkEAESGgoWTWlu", 
            "aW11bURpYW1vbmRSZXF1aXJlZBACEhAKDE5vVGFibGVBdmFpbBADEg0KCUNy", 
            "ZWF0ZUVychAEEg0KCVJvb21JZEVychAFEg8KC1Bhc3NXb3JkRXJyEAYSCQoF", 
            "T3RoZXIQByLSAQoQQWN0aW9uUmVxdWVzdHpqaBIxCgRjb2RlGAEgAigOMiMu", 
            "Z3RfbXNnLkFjdGlvblJlcXVlc3R6amguQWN0aW9uQ29kZRIRCglQYXlOdW1N", 
            "aW4YAiABKAUSEQoJUGF5TnVtTWF4GAMgASgFImUKCkFjdGlvbkNvZGUSEAoM", 
            "U2VlSGFuZENhcmRzEAASDAoIRmlyc3RQYXkQARINCglGb2xsb3dQYXkQAhIK", 
            "CgZBZGRQYXkQAxIQCgxDb21wYXJlQ2FyZHMQBBIKCgZHaXZlVXAQBSKbAQoR", 
            "QWN0aW9uUmVzcG9uc2V6amgSOgoEY29kZRgBIAIoDjIsLmd0X21zZy5BY3Rp", 
            "b25SZXNwb25zZXpqaC5BY3Rpb25SZXNwb25zZUNvZGUiSgoSQWN0aW9uUmVz", 
            "cG9uc2VDb2RlEgYKAk9LEAASEAoMQ2Fubm90QWN0aW9uEAESCwoHRXJyVHlw", 
            "ZRACEg0KCU90aGVyVHlwZRADIqsCChFUYWJsZVVzZXJTdGF0c3pqaBIfCgl1", 
            "c2VyX2luZm8YASACKAsyDC5ndF9tc2cuVXNlchIPCgdOb3dTZWF0GAIgAigF", 
            "Eg0KBVN0YXRlGAMgAigFEhUKCUhhbmRDYXJkcxgEIAMoBUICEAESJgoIQ2Fy", 
            "ZHR5cGUYBSABKA4yFC5ndF9tc2cuQ2FyZHNUeXBlempoEhYKDklzU2VlSGFu", 
            "ZENhcmRzGAYgASgFEhAKCFBheU1vbmV5GAcgASgFEgoKAlRHGAggASgFEi8K", 
            "DU9sZEFjdGlvbkxpc3QYCSADKAsyGC5ndF9tc2cuQWN0aW9uUmVxdWVzdHpq", 
            "aBIvCg1OZXdBY3Rpb25MaXN0GAogAygLMhguZ3RfbXNnLkFjdGlvblJlcXVl", 
            "c3R6amgivAQKDVRhYmxlU3RhdHN6amgSDwoHVGFibGVJRBgBIAIoBRINCgVT", 
            "dGFnZRgCIAIoBRIaCgRSYW5rGAMgAigOMgwuZ3RfbXNnLlJhbmsSGgoEUnVs", 
            "ZRgEIAIoDjIMLmd0X21zZy5SdWxlEhkKEU5leHRBY3Rpb25UaW1lT3V0GAUg", 
            "AigFEg0KBXJvdW5kGAYgAigFEg4KBk15U2VhdBgHIAIoBRITCgdOb3dTZWF0", 
            "GAggAygFQgIQARIRCglCYXNlUG9pbnQYCSACKAUSFQoNTm93Um91bmRQb2lu", 
            "dBgKIAIoBRIUCgxNb25leU9uVGFibGUYCyACKAUSGAoQTGFzdEFkZE1vbmV5", 
            "U2VhdBgMIAIoBRIWCg5MYXN0QWN0aW9uU2VhdBgNIAIoBRIsCglTZWF0VXNl", 
            "cjEYDiABKAsyGS5ndF9tc2cuVGFibGVVc2VyU3RhdHN6amgSLAoJU2VhdFVz", 
            "ZXIyGA8gASgLMhkuZ3RfbXNnLlRhYmxlVXNlclN0YXRzempoEiwKCVNlYXRV", 
            "c2VyMxgQIAEoCzIZLmd0X21zZy5UYWJsZVVzZXJTdGF0c3pqaBIsCglTZWF0", 
            "VXNlcjQYESABKAsyGS5ndF9tc2cuVGFibGVVc2VyU3RhdHN6amgSLAoJU2Vh", 
            "dFVzZXI1GBIgASgLMhkuZ3RfbXNnLlRhYmxlVXNlclN0YXRzempoEiwKCVNl", 
            "YXRVc2VyNhgTIAEoCzIZLmd0X21zZy5UYWJsZVVzZXJTdGF0c3pqaCKGAgoS", 
            "VGFibGVVc2VyUmVzdWx0empoEh8KCXVzZXJfaW5mbxgBIAIoCzIMLmd0X21z", 
            "Zy5Vc2VyEg8KB05vd1NlYXQYAiACKAUSEQoJcGxheVN0YXRlGAMgAigIEhUK", 
            "CUhhbmRDYXJkcxgEIAMoBUICEAESJgoIQ2FyZHR5cGUYBSABKA4yFC5ndF9t", 
            "c2cuQ2FyZHNUeXBlempoEikKB0xvc3RXaW4YBiABKAsyGC5ndF9tc2cuSXRl", 
            "bUNoYW5nZWRFdmVudBIQCghSb3VuZFNlZRgHIAEoBRIQCghSb3VuZENtcBgI", 
            "IAEoBRIQCghSb3VuZEVuZBgJIAEoBRILCgNUYXgYCiABKAUi/gIKElJvdW5k", 
            "RW5kZWRFdmVudHpqaBIPCgdUYWJsZUlEGAEgAigFEg8KB1dpblNlYXQYAiAC", 
            "KAUSDgoGTXlTZWF0GAMgAigFEhwKFE5leHRTdGFydFRpbWVvdXRTZWNzGAQg", 
            "AigFEi0KCVNlYXRVc2VyMRgFIAEoCzIaLmd0X21zZy5UYWJsZVVzZXJSZXN1", 
            "bHR6amgSLQoJU2VhdFVzZXIyGAYgASgLMhouZ3RfbXNnLlRhYmxlVXNlclJl", 
            "c3VsdHpqaBItCglTZWF0VXNlcjMYByABKAsyGi5ndF9tc2cuVGFibGVVc2Vy", 
            "UmVzdWx0empoEi0KCVNlYXRVc2VyNBgIIAEoCzIaLmd0X21zZy5UYWJsZVVz", 
            "ZXJSZXN1bHR6amgSLQoJU2VhdFVzZXI1GAkgASgLMhouZ3RfbXNnLlRhYmxl", 
            "VXNlclJlc3VsdHpqaBItCglTZWF0VXNlcjYYCiABKAsyGi5ndF9tc2cuVGFi", 
            "bGVVc2VyUmVzdWx0empoIhoKGEZvcmNlRXhpdFRhYmxlUmVxdWVzdHpqaCKo", 
            "AQoZRm9yY2VFeGl0VGFibGVSZXNwb25zZXpqaBI0CgRjb2RlGAEgAigOMiYu", 
            "Z3RfbXNnLkZvcmNlRXhpdFRhYmxlUmVzcG9uc2V6amguQ29kZSJVCgRDb2Rl", 
            "EgoKBk5vcm1hbBAAEgoKBkdpdmVVcBABEhEKDU5vRW5vdWdoTW9uZXkQAhIP", 
            "CgtDaGFuZ2VUYWJsZRADEhEKDVBsYXlpbmdOb0V4aXQQBCIhChJHYW1lTGlm", 
            "ZVJlcXVlc3R6amgSCwoDdWlkGAEgAigJItgDChNHYW1lTGlmZVJlc3BvbnNl", 
            "empoEi4KBGNvZGUYASACKA4yIC5ndF9tc2cuR2FtZUxpZmVSZXNwb25zZXpq", 
            "aC5Db2RlEh8KCXVzZXJfaW5mbxgCIAIoCzIMLmd0X21zZy5Vc2VyEhAKCHdp", 
            "blRpbWVzGAMgASgFEhEKCWxvc3RUaW1lcxgEIAEoBRITCgtjb250aW51ZVdp", 
            "bhgFIAEoBRIWCg5sZXZlbDFXaW5DaGlwcxgGIAEoAxIaChJsZXZlbDFXaW5D", 
            "aGlwc1JhbmsYByABKAUSFgoObGV2ZWwyV2luQ2hpcHMYCCABKAMSGgoSbGV2", 
            "ZWwyV2luQ2hpcHNSYW5rGAkgASgFEhYKDmxldmVsM1dpbkNoaXBzGAogASgD", 
            "EhoKEmxldmVsM1dpbkNoaXBzUmFuaxgLIAEoBRIWCg5sZXZlbDRXaW5DaGlw", 
            "cxgMIAEoAxIaChJsZXZlbDRXaW5DaGlwc1JhbmsYDSABKAUSFgoObGV2ZWw1", 
            "V2luQ2hpcHMYDiABKAMSGgoSbGV2ZWw1V2luQ2hpcHNSYW5rGA8gASgFEhYK", 
            "DmdhbWVBbGxVc2VyTnVtGBAgASgFIhoKBENvZGUSBgoCT2sQABIKCgZGYWls", 
            "ZWQQASIYChZHYW1lUmFua0xpc3RSZXF1ZXN0empoIrMBChdHYW1lUmFua0xp", 
            "c3RSZXNwb25zZXpqaBIyCgRjb2RlGAEgAigOMiQuZ3RfbXNnLkdhbWVSYW5r", 
            "TGlzdFJlc3BvbnNlempoLkNvZGUSCwoDdWlkGAIgAigJEhUKDWRheV93aW5f", 
            "Y2hpcHMYAyADKAkSEQoJYWxsX3RpbWVzGAQgAygJEhEKCWFsbF9jaGlwcxgF", 
            "IAMoCSIaCgRDb2RlEgYKAk9rEAASCgoGRmFpbGVkEAEiFQoTR2FtZVJlYWR5", 
            "UmVxdWVzdHpqaCJ4ChRHYW1lUmVhZHlSZXNwb25zZXpqaBIvCgRjb2RlGAEg", 
            "AigOMiEuZ3RfbXNnLkdhbWVSZWFkeVJlc3BvbnNlempoLkNvZGUSEwoLcGxh", 
            "eWVyUmVhZHkYAiADKAUiGgoEQ29kZRIGCgJPSxAAEgoKBkZhaWxlZBABIpsB", 
            "CglHTUluZm96amgSFgoKSGFuZENhcmRzMRgBIAMoBUICEAESFgoKSGFuZENh", 
            "cmRzMhgCIAMoBUICEAESFgoKSGFuZENhcmRzMxgDIAMoBUICEAESFgoKSGFu", 
            "ZENhcmRzNBgEIAMoBUICEAESFgoKSGFuZENhcmRzNRgFIAMoBUICEAESFgoK", 
            "SGFuZENhcmRzNhgGIAMoBUICEAEqngEKDENhcmRzVHlwZXpqaBIWChJUaHJl", 
            "ZVByaW5jaXBsZXN6amgQABITCg9TdHJhaWdodEtpbmd6amgQARIRCg1Gb2xs", 
            "b3dLaW5nempoEAISDwoLU3RyYWlnaHR6amgQAxILCgdQYWlyempoEAQSDQoJ", 
            "U2luZ2xlempoEAUSDwoLRXhwQ2FyZHN6amgQBhIQCgxBbm9ueW1vdXN6amgQ", 
          "Bw=="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_gt_msg_JoinFreeRequestzjh__Descriptor = Descriptor.MessageTypes[0];
        internal__static_gt_msg_JoinFreeRequestzjh__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.JoinFreeRequestzjh, global::gt_msg.JoinFreeRequestzjh.Builder>(internal__static_gt_msg_JoinFreeRequestzjh__Descriptor,
                new string[] { "UserId", "Rule", "Rank", "TableId", "JoinPassword", "BasePoint", });
        internal__static_gt_msg_JoinFreeResponsezjh__Descriptor = Descriptor.MessageTypes[1];
        internal__static_gt_msg_JoinFreeResponsezjh__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.JoinFreeResponsezjh, global::gt_msg.JoinFreeResponsezjh.Builder>(internal__static_gt_msg_JoinFreeResponsezjh__Descriptor,
                new string[] { "Code", "ReconnectedUser", "MinCoins", "HasBasicLiving", "BasicLivingAllTimes", "BasicLivingUseTimes", "BasicLivingCoins", "RankRequest", "Rank", "GameStats", "TablePassWord", "ItemType", });
        internal__static_gt_msg_ActionRequestzjh__Descriptor = Descriptor.MessageTypes[2];
        internal__static_gt_msg_ActionRequestzjh__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.ActionRequestzjh, global::gt_msg.ActionRequestzjh.Builder>(internal__static_gt_msg_ActionRequestzjh__Descriptor,
                new string[] { "Code", "PayNumMin", "PayNumMax", });
        internal__static_gt_msg_ActionResponsezjh__Descriptor = Descriptor.MessageTypes[3];
        internal__static_gt_msg_ActionResponsezjh__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.ActionResponsezjh, global::gt_msg.ActionResponsezjh.Builder>(internal__static_gt_msg_ActionResponsezjh__Descriptor,
                new string[] { "Code", });
        internal__static_gt_msg_TableUserStatszjh__Descriptor = Descriptor.MessageTypes[4];
        internal__static_gt_msg_TableUserStatszjh__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableUserStatszjh, global::gt_msg.TableUserStatszjh.Builder>(internal__static_gt_msg_TableUserStatszjh__Descriptor,
                new string[] { "UserInfo", "NowSeat", "State", "HandCards", "Cardtype", "IsSeeHandCards", "PayMoney", "TG", "OldActionList", "NewActionList", });
        internal__static_gt_msg_TableStatszjh__Descriptor = Descriptor.MessageTypes[5];
        internal__static_gt_msg_TableStatszjh__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableStatszjh, global::gt_msg.TableStatszjh.Builder>(internal__static_gt_msg_TableStatszjh__Descriptor,
                new string[] { "TableID", "Stage", "Rank", "Rule", "NextActionTimeOut", "Round", "MySeat", "NowSeat", "BasePoint", "NowRoundPoint", "MoneyOnTable", "LastAddMoneySeat", "LastActionSeat", "SeatUser1", "SeatUser2", "SeatUser3", "SeatUser4", "SeatUser5", "SeatUser6", });
        internal__static_gt_msg_TableUserResultzjh__Descriptor = Descriptor.MessageTypes[6];
        internal__static_gt_msg_TableUserResultzjh__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableUserResultzjh, global::gt_msg.TableUserResultzjh.Builder>(internal__static_gt_msg_TableUserResultzjh__Descriptor,
                new string[] { "UserInfo", "NowSeat", "PlayState", "HandCards", "Cardtype", "LostWin", "RoundSee", "RoundCmp", "RoundEnd", "Tax", });
        internal__static_gt_msg_RoundEndedEventzjh__Descriptor = Descriptor.MessageTypes[7];
        internal__static_gt_msg_RoundEndedEventzjh__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.RoundEndedEventzjh, global::gt_msg.RoundEndedEventzjh.Builder>(internal__static_gt_msg_RoundEndedEventzjh__Descriptor,
                new string[] { "TableID", "WinSeat", "MySeat", "NextStartTimeoutSecs", "SeatUser1", "SeatUser2", "SeatUser3", "SeatUser4", "SeatUser5", "SeatUser6", });
        internal__static_gt_msg_ForceExitTableRequestzjh__Descriptor = Descriptor.MessageTypes[8];
        internal__static_gt_msg_ForceExitTableRequestzjh__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.ForceExitTableRequestzjh, global::gt_msg.ForceExitTableRequestzjh.Builder>(internal__static_gt_msg_ForceExitTableRequestzjh__Descriptor,
                new string[] { });
        internal__static_gt_msg_ForceExitTableResponsezjh__Descriptor = Descriptor.MessageTypes[9];
        internal__static_gt_msg_ForceExitTableResponsezjh__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.ForceExitTableResponsezjh, global::gt_msg.ForceExitTableResponsezjh.Builder>(internal__static_gt_msg_ForceExitTableResponsezjh__Descriptor,
                new string[] { "Code", });
        internal__static_gt_msg_GameLifeRequestzjh__Descriptor = Descriptor.MessageTypes[10];
        internal__static_gt_msg_GameLifeRequestzjh__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameLifeRequestzjh, global::gt_msg.GameLifeRequestzjh.Builder>(internal__static_gt_msg_GameLifeRequestzjh__Descriptor,
                new string[] { "Uid", });
        internal__static_gt_msg_GameLifeResponsezjh__Descriptor = Descriptor.MessageTypes[11];
        internal__static_gt_msg_GameLifeResponsezjh__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameLifeResponsezjh, global::gt_msg.GameLifeResponsezjh.Builder>(internal__static_gt_msg_GameLifeResponsezjh__Descriptor,
                new string[] { "Code", "UserInfo", "WinTimes", "LostTimes", "ContinueWin", "Level1WinChips", "Level1WinChipsRank", "Level2WinChips", "Level2WinChipsRank", "Level3WinChips", "Level3WinChipsRank", "Level4WinChips", "Level4WinChipsRank", "Level5WinChips", "Level5WinChipsRank", "GameAllUserNum", });
        internal__static_gt_msg_GameRankListRequestzjh__Descriptor = Descriptor.MessageTypes[12];
        internal__static_gt_msg_GameRankListRequestzjh__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameRankListRequestzjh, global::gt_msg.GameRankListRequestzjh.Builder>(internal__static_gt_msg_GameRankListRequestzjh__Descriptor,
                new string[] { });
        internal__static_gt_msg_GameRankListResponsezjh__Descriptor = Descriptor.MessageTypes[13];
        internal__static_gt_msg_GameRankListResponsezjh__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameRankListResponsezjh, global::gt_msg.GameRankListResponsezjh.Builder>(internal__static_gt_msg_GameRankListResponsezjh__Descriptor,
                new string[] { "Code", "Uid", "DayWinChips", "AllTimes", "AllChips", });
        internal__static_gt_msg_GameReadyRequestzjh__Descriptor = Descriptor.MessageTypes[14];
        internal__static_gt_msg_GameReadyRequestzjh__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameReadyRequestzjh, global::gt_msg.GameReadyRequestzjh.Builder>(internal__static_gt_msg_GameReadyRequestzjh__Descriptor,
                new string[] { });
        internal__static_gt_msg_GameReadyResponsezjh__Descriptor = Descriptor.MessageTypes[15];
        internal__static_gt_msg_GameReadyResponsezjh__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameReadyResponsezjh, global::gt_msg.GameReadyResponsezjh.Builder>(internal__static_gt_msg_GameReadyResponsezjh__Descriptor,
                new string[] { "Code", "PlayerReady", });
        internal__static_gt_msg_GMInfozjh__Descriptor = Descriptor.MessageTypes[16];
        internal__static_gt_msg_GMInfozjh__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.GMInfozjh, global::gt_msg.GMInfozjh.Builder>(internal__static_gt_msg_GMInfozjh__Descriptor,
                new string[] { "HandCards1", "HandCards2", "HandCards3", "HandCards4", "HandCards5", "HandCards6", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::gt_msg.GtBase.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum CardsTypezjh {
    ThreePrincipleszjh = 0,
    StraightKingzjh = 1,
    FollowKingzjh = 2,
    Straightzjh = 3,
    Pairzjh = 4,
    Singlezjh = 5,
    ExpCardszjh = 6,
    Anonymouszjh = 7,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class JoinFreeRequestzjh : pb::GeneratedMessage<JoinFreeRequestzjh, JoinFreeRequestzjh.Builder> {
    private JoinFreeRequestzjh() { }
    private static readonly JoinFreeRequestzjh defaultInstance = new JoinFreeRequestzjh().MakeReadOnly();
    private static readonly string[] _joinFreeRequestzjhFieldNames = new string[] { "basePoint", "join_password", "rank", "rule", "table_id", "user_id" };
    private static readonly uint[] _joinFreeRequestzjhFieldTags = new uint[] { 48, 42, 24, 16, 32, 10 };
    public static JoinFreeRequestzjh DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinFreeRequestzjh DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinFreeRequestzjh ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_JoinFreeRequestzjh__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinFreeRequestzjh, JoinFreeRequestzjh.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_JoinFreeRequestzjh__FieldAccessorTable; }
    }
    
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private string userId_ = "";
    public bool HasUserId {
      get { return hasUserId; }
    }
    public string UserId {
      get { return userId_; }
    }
    
    public const int RuleFieldNumber = 2;
    private bool hasRule;
    private global::gt_msg.Rule rule_ = global::gt_msg.Rule.RuleNormal;
    public bool HasRule {
      get { return hasRule; }
    }
    public global::gt_msg.Rule Rule {
      get { return rule_; }
    }
    
    public const int RankFieldNumber = 3;
    private bool hasRank;
    private global::gt_msg.Rank rank_ = global::gt_msg.Rank.LV0;
    public bool HasRank {
      get { return hasRank; }
    }
    public global::gt_msg.Rank Rank {
      get { return rank_; }
    }
    
    public const int TableIdFieldNumber = 4;
    private bool hasTableId;
    private int tableId_;
    public bool HasTableId {
      get { return hasTableId; }
    }
    public int TableId {
      get { return tableId_; }
    }
    
    public const int JoinPasswordFieldNumber = 5;
    private bool hasJoinPassword;
    private string joinPassword_ = "";
    public bool HasJoinPassword {
      get { return hasJoinPassword; }
    }
    public string JoinPassword {
      get { return joinPassword_; }
    }
    
    public const int BasePointFieldNumber = 6;
    private bool hasBasePoint;
    private int basePoint_;
    public bool HasBasePoint {
      get { return hasBasePoint; }
    }
    public int BasePoint {
      get { return basePoint_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserId) return false;
        if (!hasRule) return false;
        if (!hasRank) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _joinFreeRequestzjhFieldNames;
      if (hasUserId) {
        output.WriteString(1, field_names[5], UserId);
      }
      if (hasRule) {
        output.WriteEnum(2, field_names[3], (int) Rule, Rule);
      }
      if (hasRank) {
        output.WriteEnum(3, field_names[2], (int) Rank, Rank);
      }
      if (hasTableId) {
        output.WriteInt32(4, field_names[4], TableId);
      }
      if (hasJoinPassword) {
        output.WriteString(5, field_names[1], JoinPassword);
      }
      if (hasBasePoint) {
        output.WriteInt32(6, field_names[0], BasePoint);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, UserId);
      }
      if (hasRule) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Rule);
      }
      if (hasRank) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Rank);
      }
      if (hasTableId) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, TableId);
      }
      if (hasJoinPassword) {
        size += pb::CodedOutputStream.ComputeStringSize(5, JoinPassword);
      }
      if (hasBasePoint) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, BasePoint);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static JoinFreeRequestzjh ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinFreeRequestzjh ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeRequestzjh ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinFreeRequestzjh ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeRequestzjh ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinFreeRequestzjh ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeRequestzjh ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinFreeRequestzjh ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinFreeRequestzjh ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinFreeRequestzjh ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinFreeRequestzjh MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinFreeRequestzjh prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinFreeRequestzjh, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinFreeRequestzjh cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinFreeRequestzjh result;
      
      private JoinFreeRequestzjh PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinFreeRequestzjh original = result;
          result = new JoinFreeRequestzjh();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinFreeRequestzjh MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.JoinFreeRequestzjh.Descriptor; }
      }
      
      public override JoinFreeRequestzjh DefaultInstanceForType {
        get { return global::gt_msg.JoinFreeRequestzjh.DefaultInstance; }
      }
      
      public override JoinFreeRequestzjh BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is JoinFreeRequestzjh) {
          return MergeFrom((JoinFreeRequestzjh) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(JoinFreeRequestzjh other) {
        if (other == global::gt_msg.JoinFreeRequestzjh.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasRule) {
          Rule = other.Rule;
        }
        if (other.HasRank) {
          Rank = other.Rank;
        }
        if (other.HasTableId) {
          TableId = other.TableId;
        }
        if (other.HasJoinPassword) {
          JoinPassword = other.JoinPassword;
        }
        if (other.HasBasePoint) {
          BasePoint = other.BasePoint;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_joinFreeRequestzjhFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _joinFreeRequestzjhFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserId = input.ReadString(ref result.userId_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.rule_, out unknown)) {
                result.hasRule = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.rank_, out unknown)) {
                result.hasRank = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 32: {
              result.hasTableId = input.ReadInt32(ref result.tableId_);
              break;
            }
            case 42: {
              result.hasJoinPassword = input.ReadString(ref result.joinPassword_);
              break;
            }
            case 48: {
              result.hasBasePoint = input.ReadInt32(ref result.basePoint_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public string UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = "";
        return this;
      }
      
      public bool HasRule {
       get { return result.hasRule; }
      }
      public global::gt_msg.Rule Rule {
        get { return result.Rule; }
        set { SetRule(value); }
      }
      public Builder SetRule(global::gt_msg.Rule value) {
        PrepareBuilder();
        result.hasRule = true;
        result.rule_ = value;
        return this;
      }
      public Builder ClearRule() {
        PrepareBuilder();
        result.hasRule = false;
        result.rule_ = global::gt_msg.Rule.RuleNormal;
        return this;
      }
      
      public bool HasRank {
       get { return result.hasRank; }
      }
      public global::gt_msg.Rank Rank {
        get { return result.Rank; }
        set { SetRank(value); }
      }
      public Builder SetRank(global::gt_msg.Rank value) {
        PrepareBuilder();
        result.hasRank = true;
        result.rank_ = value;
        return this;
      }
      public Builder ClearRank() {
        PrepareBuilder();
        result.hasRank = false;
        result.rank_ = global::gt_msg.Rank.LV0;
        return this;
      }
      
      public bool HasTableId {
        get { return result.hasTableId; }
      }
      public int TableId {
        get { return result.TableId; }
        set { SetTableId(value); }
      }
      public Builder SetTableId(int value) {
        PrepareBuilder();
        result.hasTableId = true;
        result.tableId_ = value;
        return this;
      }
      public Builder ClearTableId() {
        PrepareBuilder();
        result.hasTableId = false;
        result.tableId_ = 0;
        return this;
      }
      
      public bool HasJoinPassword {
        get { return result.hasJoinPassword; }
      }
      public string JoinPassword {
        get { return result.JoinPassword; }
        set { SetJoinPassword(value); }
      }
      public Builder SetJoinPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasJoinPassword = true;
        result.joinPassword_ = value;
        return this;
      }
      public Builder ClearJoinPassword() {
        PrepareBuilder();
        result.hasJoinPassword = false;
        result.joinPassword_ = "";
        return this;
      }
      
      public bool HasBasePoint {
        get { return result.hasBasePoint; }
      }
      public int BasePoint {
        get { return result.BasePoint; }
        set { SetBasePoint(value); }
      }
      public Builder SetBasePoint(int value) {
        PrepareBuilder();
        result.hasBasePoint = true;
        result.basePoint_ = value;
        return this;
      }
      public Builder ClearBasePoint() {
        PrepareBuilder();
        result.hasBasePoint = false;
        result.basePoint_ = 0;
        return this;
      }
    }
    static JoinFreeRequestzjh() {
      object.ReferenceEquals(global::gt_msg.GtZjh.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class JoinFreeResponsezjh : pb::GeneratedMessage<JoinFreeResponsezjh, JoinFreeResponsezjh.Builder> {
    private JoinFreeResponsezjh() { }
    private static readonly JoinFreeResponsezjh defaultInstance = new JoinFreeResponsezjh().MakeReadOnly();
    private static readonly string[] _joinFreeResponsezjhFieldNames = new string[] { "ItemType", "TablePassWord", "basic_living_all_times", "basic_living_coins", "basic_living_use_times", "code", "game_stats", "has_basic_living", "min_coins", "rank", "rank_request", "reconnected_user" };
    private static readonly uint[] _joinFreeResponsezjhFieldTags = new uint[] { 96, 90, 40, 56, 48, 8, 82, 32, 24, 72, 64, 16 };
    public static JoinFreeResponsezjh DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinFreeResponsezjh DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinFreeResponsezjh ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_JoinFreeResponsezjh__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinFreeResponsezjh, JoinFreeResponsezjh.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_JoinFreeResponsezjh__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum JoinFreeResponseCode {
        Ok = 0,
        MinimumCoinsRequired = 1,
        MinimumDiamondRequired = 2,
        NoTableAvail = 3,
        CreateErr = 4,
        RoomIdErr = 5,
        PassWordErr = 6,
        Other = 7,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.JoinFreeResponsezjh.Types.JoinFreeResponseCode code_ = global::gt_msg.JoinFreeResponsezjh.Types.JoinFreeResponseCode.Ok;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.JoinFreeResponsezjh.Types.JoinFreeResponseCode Code {
      get { return code_; }
    }
    
    public const int ReconnectedUserFieldNumber = 2;
    private bool hasReconnectedUser;
    private bool reconnectedUser_;
    public bool HasReconnectedUser {
      get { return hasReconnectedUser; }
    }
    public bool ReconnectedUser {
      get { return reconnectedUser_; }
    }
    
    public const int MinCoinsFieldNumber = 3;
    private bool hasMinCoins;
    private int minCoins_;
    public bool HasMinCoins {
      get { return hasMinCoins; }
    }
    public int MinCoins {
      get { return minCoins_; }
    }
    
    public const int HasBasicLivingFieldNumber = 4;
    private bool hasHasBasicLiving;
    private bool hasBasicLiving_;
    public bool HasHasBasicLiving {
      get { return hasHasBasicLiving; }
    }
    public bool HasBasicLiving {
      get { return hasBasicLiving_; }
    }
    
    public const int BasicLivingAllTimesFieldNumber = 5;
    private bool hasBasicLivingAllTimes;
    private int basicLivingAllTimes_;
    public bool HasBasicLivingAllTimes {
      get { return hasBasicLivingAllTimes; }
    }
    public int BasicLivingAllTimes {
      get { return basicLivingAllTimes_; }
    }
    
    public const int BasicLivingUseTimesFieldNumber = 6;
    private bool hasBasicLivingUseTimes;
    private int basicLivingUseTimes_;
    public bool HasBasicLivingUseTimes {
      get { return hasBasicLivingUseTimes; }
    }
    public int BasicLivingUseTimes {
      get { return basicLivingUseTimes_; }
    }
    
    public const int BasicLivingCoinsFieldNumber = 7;
    private bool hasBasicLivingCoins;
    private int basicLivingCoins_;
    public bool HasBasicLivingCoins {
      get { return hasBasicLivingCoins; }
    }
    public int BasicLivingCoins {
      get { return basicLivingCoins_; }
    }
    
    public const int RankRequestFieldNumber = 8;
    private bool hasRankRequest;
    private global::gt_msg.Rank rankRequest_ = global::gt_msg.Rank.LV0;
    public bool HasRankRequest {
      get { return hasRankRequest; }
    }
    public global::gt_msg.Rank RankRequest {
      get { return rankRequest_; }
    }
    
    public const int RankFieldNumber = 9;
    private bool hasRank;
    private global::gt_msg.Rank rank_ = global::gt_msg.Rank.LV0;
    public bool HasRank {
      get { return hasRank; }
    }
    public global::gt_msg.Rank Rank {
      get { return rank_; }
    }
    
    public const int GameStatsFieldNumber = 10;
    private bool hasGameStats;
    private global::gt_msg.TableStatszjh gameStats_;
    public bool HasGameStats {
      get { return hasGameStats; }
    }
    public global::gt_msg.TableStatszjh GameStats {
      get { return gameStats_ ?? global::gt_msg.TableStatszjh.DefaultInstance; }
    }
    
    public const int TablePassWordFieldNumber = 11;
    private bool hasTablePassWord;
    private string tablePassWord_ = "";
    public bool HasTablePassWord {
      get { return hasTablePassWord; }
    }
    public string TablePassWord {
      get { return tablePassWord_; }
    }
    
    public const int ItemTypeFieldNumber = 12;
    private bool hasItemType;
    private int itemType_;
    public bool HasItemType {
      get { return hasItemType; }
    }
    public int ItemType {
      get { return itemType_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        if (HasGameStats) {
          if (!GameStats.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _joinFreeResponsezjhFieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[5], (int) Code, Code);
      }
      if (hasReconnectedUser) {
        output.WriteBool(2, field_names[11], ReconnectedUser);
      }
      if (hasMinCoins) {
        output.WriteInt32(3, field_names[8], MinCoins);
      }
      if (hasHasBasicLiving) {
        output.WriteBool(4, field_names[7], HasBasicLiving);
      }
      if (hasBasicLivingAllTimes) {
        output.WriteInt32(5, field_names[2], BasicLivingAllTimes);
      }
      if (hasBasicLivingUseTimes) {
        output.WriteInt32(6, field_names[4], BasicLivingUseTimes);
      }
      if (hasBasicLivingCoins) {
        output.WriteInt32(7, field_names[3], BasicLivingCoins);
      }
      if (hasRankRequest) {
        output.WriteEnum(8, field_names[10], (int) RankRequest, RankRequest);
      }
      if (hasRank) {
        output.WriteEnum(9, field_names[9], (int) Rank, Rank);
      }
      if (hasGameStats) {
        output.WriteMessage(10, field_names[6], GameStats);
      }
      if (hasTablePassWord) {
        output.WriteString(11, field_names[1], TablePassWord);
      }
      if (hasItemType) {
        output.WriteInt32(12, field_names[0], ItemType);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasReconnectedUser) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, ReconnectedUser);
      }
      if (hasMinCoins) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, MinCoins);
      }
      if (hasHasBasicLiving) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, HasBasicLiving);
      }
      if (hasBasicLivingAllTimes) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, BasicLivingAllTimes);
      }
      if (hasBasicLivingUseTimes) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, BasicLivingUseTimes);
      }
      if (hasBasicLivingCoins) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, BasicLivingCoins);
      }
      if (hasRankRequest) {
        size += pb::CodedOutputStream.ComputeEnumSize(8, (int) RankRequest);
      }
      if (hasRank) {
        size += pb::CodedOutputStream.ComputeEnumSize(9, (int) Rank);
      }
      if (hasGameStats) {
        size += pb::CodedOutputStream.ComputeMessageSize(10, GameStats);
      }
      if (hasTablePassWord) {
        size += pb::CodedOutputStream.ComputeStringSize(11, TablePassWord);
      }
      if (hasItemType) {
        size += pb::CodedOutputStream.ComputeInt32Size(12, ItemType);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static JoinFreeResponsezjh ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinFreeResponsezjh ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeResponsezjh ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinFreeResponsezjh ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeResponsezjh ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinFreeResponsezjh ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeResponsezjh ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinFreeResponsezjh ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinFreeResponsezjh ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinFreeResponsezjh ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinFreeResponsezjh MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinFreeResponsezjh prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinFreeResponsezjh, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinFreeResponsezjh cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinFreeResponsezjh result;
      
      private JoinFreeResponsezjh PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinFreeResponsezjh original = result;
          result = new JoinFreeResponsezjh();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinFreeResponsezjh MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.JoinFreeResponsezjh.Descriptor; }
      }
      
      public override JoinFreeResponsezjh DefaultInstanceForType {
        get { return global::gt_msg.JoinFreeResponsezjh.DefaultInstance; }
      }
      
      public override JoinFreeResponsezjh BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is JoinFreeResponsezjh) {
          return MergeFrom((JoinFreeResponsezjh) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(JoinFreeResponsezjh other) {
        if (other == global::gt_msg.JoinFreeResponsezjh.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasReconnectedUser) {
          ReconnectedUser = other.ReconnectedUser;
        }
        if (other.HasMinCoins) {
          MinCoins = other.MinCoins;
        }
        if (other.HasHasBasicLiving) {
          HasBasicLiving = other.HasBasicLiving;
        }
        if (other.HasBasicLivingAllTimes) {
          BasicLivingAllTimes = other.BasicLivingAllTimes;
        }
        if (other.HasBasicLivingUseTimes) {
          BasicLivingUseTimes = other.BasicLivingUseTimes;
        }
        if (other.HasBasicLivingCoins) {
          BasicLivingCoins = other.BasicLivingCoins;
        }
        if (other.HasRankRequest) {
          RankRequest = other.RankRequest;
        }
        if (other.HasRank) {
          Rank = other.Rank;
        }
        if (other.HasGameStats) {
          MergeGameStats(other.GameStats);
        }
        if (other.HasTablePassWord) {
          TablePassWord = other.TablePassWord;
        }
        if (other.HasItemType) {
          ItemType = other.ItemType;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_joinFreeResponsezjhFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _joinFreeResponsezjhFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasReconnectedUser = input.ReadBool(ref result.reconnectedUser_);
              break;
            }
            case 24: {
              result.hasMinCoins = input.ReadInt32(ref result.minCoins_);
              break;
            }
            case 32: {
              result.hasHasBasicLiving = input.ReadBool(ref result.hasBasicLiving_);
              break;
            }
            case 40: {
              result.hasBasicLivingAllTimes = input.ReadInt32(ref result.basicLivingAllTimes_);
              break;
            }
            case 48: {
              result.hasBasicLivingUseTimes = input.ReadInt32(ref result.basicLivingUseTimes_);
              break;
            }
            case 56: {
              result.hasBasicLivingCoins = input.ReadInt32(ref result.basicLivingCoins_);
              break;
            }
            case 64: {
              object unknown;
              if(input.ReadEnum(ref result.rankRequest_, out unknown)) {
                result.hasRankRequest = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(8, (ulong)(int)unknown);
              }
              break;
            }
            case 72: {
              object unknown;
              if(input.ReadEnum(ref result.rank_, out unknown)) {
                result.hasRank = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(9, (ulong)(int)unknown);
              }
              break;
            }
            case 82: {
              global::gt_msg.TableStatszjh.Builder subBuilder = global::gt_msg.TableStatszjh.CreateBuilder();
              if (result.hasGameStats) {
                subBuilder.MergeFrom(GameStats);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameStats = subBuilder.BuildPartial();
              break;
            }
            case 90: {
              result.hasTablePassWord = input.ReadString(ref result.tablePassWord_);
              break;
            }
            case 96: {
              result.hasItemType = input.ReadInt32(ref result.itemType_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.JoinFreeResponsezjh.Types.JoinFreeResponseCode Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.JoinFreeResponsezjh.Types.JoinFreeResponseCode value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.JoinFreeResponsezjh.Types.JoinFreeResponseCode.Ok;
        return this;
      }
      
      public bool HasReconnectedUser {
        get { return result.hasReconnectedUser; }
      }
      public bool ReconnectedUser {
        get { return result.ReconnectedUser; }
        set { SetReconnectedUser(value); }
      }
      public Builder SetReconnectedUser(bool value) {
        PrepareBuilder();
        result.hasReconnectedUser = true;
        result.reconnectedUser_ = value;
        return this;
      }
      public Builder ClearReconnectedUser() {
        PrepareBuilder();
        result.hasReconnectedUser = false;
        result.reconnectedUser_ = false;
        return this;
      }
      
      public bool HasMinCoins {
        get { return result.hasMinCoins; }
      }
      public int MinCoins {
        get { return result.MinCoins; }
        set { SetMinCoins(value); }
      }
      public Builder SetMinCoins(int value) {
        PrepareBuilder();
        result.hasMinCoins = true;
        result.minCoins_ = value;
        return this;
      }
      public Builder ClearMinCoins() {
        PrepareBuilder();
        result.hasMinCoins = false;
        result.minCoins_ = 0;
        return this;
      }
      
      public bool HasHasBasicLiving {
        get { return result.hasHasBasicLiving; }
      }
      public bool HasBasicLiving {
        get { return result.HasBasicLiving; }
        set { SetHasBasicLiving(value); }
      }
      public Builder SetHasBasicLiving(bool value) {
        PrepareBuilder();
        result.hasHasBasicLiving = true;
        result.hasBasicLiving_ = value;
        return this;
      }
      public Builder ClearHasBasicLiving() {
        PrepareBuilder();
        result.hasHasBasicLiving = false;
        result.hasBasicLiving_ = false;
        return this;
      }
      
      public bool HasBasicLivingAllTimes {
        get { return result.hasBasicLivingAllTimes; }
      }
      public int BasicLivingAllTimes {
        get { return result.BasicLivingAllTimes; }
        set { SetBasicLivingAllTimes(value); }
      }
      public Builder SetBasicLivingAllTimes(int value) {
        PrepareBuilder();
        result.hasBasicLivingAllTimes = true;
        result.basicLivingAllTimes_ = value;
        return this;
      }
      public Builder ClearBasicLivingAllTimes() {
        PrepareBuilder();
        result.hasBasicLivingAllTimes = false;
        result.basicLivingAllTimes_ = 0;
        return this;
      }
      
      public bool HasBasicLivingUseTimes {
        get { return result.hasBasicLivingUseTimes; }
      }
      public int BasicLivingUseTimes {
        get { return result.BasicLivingUseTimes; }
        set { SetBasicLivingUseTimes(value); }
      }
      public Builder SetBasicLivingUseTimes(int value) {
        PrepareBuilder();
        result.hasBasicLivingUseTimes = true;
        result.basicLivingUseTimes_ = value;
        return this;
      }
      public Builder ClearBasicLivingUseTimes() {
        PrepareBuilder();
        result.hasBasicLivingUseTimes = false;
        result.basicLivingUseTimes_ = 0;
        return this;
      }
      
      public bool HasBasicLivingCoins {
        get { return result.hasBasicLivingCoins; }
      }
      public int BasicLivingCoins {
        get { return result.BasicLivingCoins; }
        set { SetBasicLivingCoins(value); }
      }
      public Builder SetBasicLivingCoins(int value) {
        PrepareBuilder();
        result.hasBasicLivingCoins = true;
        result.basicLivingCoins_ = value;
        return this;
      }
      public Builder ClearBasicLivingCoins() {
        PrepareBuilder();
        result.hasBasicLivingCoins = false;
        result.basicLivingCoins_ = 0;
        return this;
      }
      
      public bool HasRankRequest {
       get { return result.hasRankRequest; }
      }
      public global::gt_msg.Rank RankRequest {
        get { return result.RankRequest; }
        set { SetRankRequest(value); }
      }
      public Builder SetRankRequest(global::gt_msg.Rank value) {
        PrepareBuilder();
        result.hasRankRequest = true;
        result.rankRequest_ = value;
        return this;
      }
      public Builder ClearRankRequest() {
        PrepareBuilder();
        result.hasRankRequest = false;
        result.rankRequest_ = global::gt_msg.Rank.LV0;
        return this;
      }
      
      public bool HasRank {
       get { return result.hasRank; }
      }
      public global::gt_msg.Rank Rank {
        get { return result.Rank; }
        set { SetRank(value); }
      }
      public Builder SetRank(global::gt_msg.Rank value) {
        PrepareBuilder();
        result.hasRank = true;
        result.rank_ = value;
        return this;
      }
      public Builder ClearRank() {
        PrepareBuilder();
        result.hasRank = false;
        result.rank_ = global::gt_msg.Rank.LV0;
        return this;
      }
      
      public bool HasGameStats {
       get { return result.hasGameStats; }
      }
      public global::gt_msg.TableStatszjh GameStats {
        get { return result.GameStats; }
        set { SetGameStats(value); }
      }
      public Builder SetGameStats(global::gt_msg.TableStatszjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameStats = true;
        result.gameStats_ = value;
        return this;
      }
      public Builder SetGameStats(global::gt_msg.TableStatszjh.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameStats = true;
        result.gameStats_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameStats(global::gt_msg.TableStatszjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameStats &&
            result.gameStats_ != global::gt_msg.TableStatszjh.DefaultInstance) {
            result.gameStats_ = global::gt_msg.TableStatszjh.CreateBuilder(result.gameStats_).MergeFrom(value).BuildPartial();
        } else {
          result.gameStats_ = value;
        }
        result.hasGameStats = true;
        return this;
      }
      public Builder ClearGameStats() {
        PrepareBuilder();
        result.hasGameStats = false;
        result.gameStats_ = null;
        return this;
      }
      
      public bool HasTablePassWord {
        get { return result.hasTablePassWord; }
      }
      public string TablePassWord {
        get { return result.TablePassWord; }
        set { SetTablePassWord(value); }
      }
      public Builder SetTablePassWord(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTablePassWord = true;
        result.tablePassWord_ = value;
        return this;
      }
      public Builder ClearTablePassWord() {
        PrepareBuilder();
        result.hasTablePassWord = false;
        result.tablePassWord_ = "";
        return this;
      }
      
      public bool HasItemType {
        get { return result.hasItemType; }
      }
      public int ItemType {
        get { return result.ItemType; }
        set { SetItemType(value); }
      }
      public Builder SetItemType(int value) {
        PrepareBuilder();
        result.hasItemType = true;
        result.itemType_ = value;
        return this;
      }
      public Builder ClearItemType() {
        PrepareBuilder();
        result.hasItemType = false;
        result.itemType_ = 0;
        return this;
      }
    }
    static JoinFreeResponsezjh() {
      object.ReferenceEquals(global::gt_msg.GtZjh.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ActionRequestzjh : pb::GeneratedMessage<ActionRequestzjh, ActionRequestzjh.Builder> {
    private ActionRequestzjh() { }
    private static readonly ActionRequestzjh defaultInstance = new ActionRequestzjh().MakeReadOnly();
    private static readonly string[] _actionRequestzjhFieldNames = new string[] { "PayNumMax", "PayNumMin", "code" };
    private static readonly uint[] _actionRequestzjhFieldTags = new uint[] { 24, 16, 8 };
    public static ActionRequestzjh DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ActionRequestzjh DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ActionRequestzjh ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_ActionRequestzjh__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ActionRequestzjh, ActionRequestzjh.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_ActionRequestzjh__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum ActionCode {
        SeeHandCards = 0,
        FirstPay = 1,
        FollowPay = 2,
        AddPay = 3,
        CompareCards = 4,
        GiveUp = 5,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.ActionRequestzjh.Types.ActionCode code_ = global::gt_msg.ActionRequestzjh.Types.ActionCode.SeeHandCards;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.ActionRequestzjh.Types.ActionCode Code {
      get { return code_; }
    }
    
    public const int PayNumMinFieldNumber = 2;
    private bool hasPayNumMin;
    private int payNumMin_;
    public bool HasPayNumMin {
      get { return hasPayNumMin; }
    }
    public int PayNumMin {
      get { return payNumMin_; }
    }
    
    public const int PayNumMaxFieldNumber = 3;
    private bool hasPayNumMax;
    private int payNumMax_;
    public bool HasPayNumMax {
      get { return hasPayNumMax; }
    }
    public int PayNumMax {
      get { return payNumMax_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _actionRequestzjhFieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[2], (int) Code, Code);
      }
      if (hasPayNumMin) {
        output.WriteInt32(2, field_names[1], PayNumMin);
      }
      if (hasPayNumMax) {
        output.WriteInt32(3, field_names[0], PayNumMax);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasPayNumMin) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, PayNumMin);
      }
      if (hasPayNumMax) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, PayNumMax);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ActionRequestzjh ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActionRequestzjh ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActionRequestzjh ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActionRequestzjh ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActionRequestzjh ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActionRequestzjh ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ActionRequestzjh ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ActionRequestzjh ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ActionRequestzjh ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActionRequestzjh ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ActionRequestzjh MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ActionRequestzjh prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ActionRequestzjh, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ActionRequestzjh cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ActionRequestzjh result;
      
      private ActionRequestzjh PrepareBuilder() {
        if (resultIsReadOnly) {
          ActionRequestzjh original = result;
          result = new ActionRequestzjh();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ActionRequestzjh MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.ActionRequestzjh.Descriptor; }
      }
      
      public override ActionRequestzjh DefaultInstanceForType {
        get { return global::gt_msg.ActionRequestzjh.DefaultInstance; }
      }
      
      public override ActionRequestzjh BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ActionRequestzjh) {
          return MergeFrom((ActionRequestzjh) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ActionRequestzjh other) {
        if (other == global::gt_msg.ActionRequestzjh.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasPayNumMin) {
          PayNumMin = other.PayNumMin;
        }
        if (other.HasPayNumMax) {
          PayNumMax = other.PayNumMax;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_actionRequestzjhFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _actionRequestzjhFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasPayNumMin = input.ReadInt32(ref result.payNumMin_);
              break;
            }
            case 24: {
              result.hasPayNumMax = input.ReadInt32(ref result.payNumMax_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.ActionRequestzjh.Types.ActionCode Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.ActionRequestzjh.Types.ActionCode value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.ActionRequestzjh.Types.ActionCode.SeeHandCards;
        return this;
      }
      
      public bool HasPayNumMin {
        get { return result.hasPayNumMin; }
      }
      public int PayNumMin {
        get { return result.PayNumMin; }
        set { SetPayNumMin(value); }
      }
      public Builder SetPayNumMin(int value) {
        PrepareBuilder();
        result.hasPayNumMin = true;
        result.payNumMin_ = value;
        return this;
      }
      public Builder ClearPayNumMin() {
        PrepareBuilder();
        result.hasPayNumMin = false;
        result.payNumMin_ = 0;
        return this;
      }
      
      public bool HasPayNumMax {
        get { return result.hasPayNumMax; }
      }
      public int PayNumMax {
        get { return result.PayNumMax; }
        set { SetPayNumMax(value); }
      }
      public Builder SetPayNumMax(int value) {
        PrepareBuilder();
        result.hasPayNumMax = true;
        result.payNumMax_ = value;
        return this;
      }
      public Builder ClearPayNumMax() {
        PrepareBuilder();
        result.hasPayNumMax = false;
        result.payNumMax_ = 0;
        return this;
      }
    }
    static ActionRequestzjh() {
      object.ReferenceEquals(global::gt_msg.GtZjh.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ActionResponsezjh : pb::GeneratedMessage<ActionResponsezjh, ActionResponsezjh.Builder> {
    private ActionResponsezjh() { }
    private static readonly ActionResponsezjh defaultInstance = new ActionResponsezjh().MakeReadOnly();
    private static readonly string[] _actionResponsezjhFieldNames = new string[] { "code" };
    private static readonly uint[] _actionResponsezjhFieldTags = new uint[] { 8 };
    public static ActionResponsezjh DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ActionResponsezjh DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ActionResponsezjh ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_ActionResponsezjh__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ActionResponsezjh, ActionResponsezjh.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_ActionResponsezjh__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum ActionResponseCode {
        OK = 0,
        CannotAction = 1,
        ErrType = 2,
        OtherType = 3,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.ActionResponsezjh.Types.ActionResponseCode code_ = global::gt_msg.ActionResponsezjh.Types.ActionResponseCode.OK;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.ActionResponsezjh.Types.ActionResponseCode Code {
      get { return code_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _actionResponsezjhFieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[0], (int) Code, Code);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ActionResponsezjh ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActionResponsezjh ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActionResponsezjh ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActionResponsezjh ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActionResponsezjh ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActionResponsezjh ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ActionResponsezjh ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ActionResponsezjh ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ActionResponsezjh ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActionResponsezjh ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ActionResponsezjh MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ActionResponsezjh prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ActionResponsezjh, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ActionResponsezjh cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ActionResponsezjh result;
      
      private ActionResponsezjh PrepareBuilder() {
        if (resultIsReadOnly) {
          ActionResponsezjh original = result;
          result = new ActionResponsezjh();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ActionResponsezjh MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.ActionResponsezjh.Descriptor; }
      }
      
      public override ActionResponsezjh DefaultInstanceForType {
        get { return global::gt_msg.ActionResponsezjh.DefaultInstance; }
      }
      
      public override ActionResponsezjh BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ActionResponsezjh) {
          return MergeFrom((ActionResponsezjh) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ActionResponsezjh other) {
        if (other == global::gt_msg.ActionResponsezjh.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_actionResponsezjhFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _actionResponsezjhFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.ActionResponsezjh.Types.ActionResponseCode Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.ActionResponsezjh.Types.ActionResponseCode value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.ActionResponsezjh.Types.ActionResponseCode.OK;
        return this;
      }
    }
    static ActionResponsezjh() {
      object.ReferenceEquals(global::gt_msg.GtZjh.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableUserStatszjh : pb::GeneratedMessage<TableUserStatszjh, TableUserStatszjh.Builder> {
    private TableUserStatszjh() { }
    private static readonly TableUserStatszjh defaultInstance = new TableUserStatszjh().MakeReadOnly();
    private static readonly string[] _tableUserStatszjhFieldNames = new string[] { "Cardtype", "HandCards", "IsSeeHandCards", "NewActionList", "NowSeat", "OldActionList", "PayMoney", "State", "TG", "user_info" };
    private static readonly uint[] _tableUserStatszjhFieldTags = new uint[] { 40, 34, 48, 82, 16, 74, 56, 24, 64, 10 };
    public static TableUserStatszjh DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableUserStatszjh DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableUserStatszjh ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_TableUserStatszjh__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableUserStatszjh, TableUserStatszjh.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_TableUserStatszjh__FieldAccessorTable; }
    }
    
    public const int UserInfoFieldNumber = 1;
    private bool hasUserInfo;
    private global::gt_msg.User userInfo_;
    public bool HasUserInfo {
      get { return hasUserInfo; }
    }
    public global::gt_msg.User UserInfo {
      get { return userInfo_ ?? global::gt_msg.User.DefaultInstance; }
    }
    
    public const int NowSeatFieldNumber = 2;
    private bool hasNowSeat;
    private int nowSeat_;
    public bool HasNowSeat {
      get { return hasNowSeat; }
    }
    public int NowSeat {
      get { return nowSeat_; }
    }
    
    public const int StateFieldNumber = 3;
    private bool hasState;
    private int state_;
    public bool HasState {
      get { return hasState; }
    }
    public int State {
      get { return state_; }
    }
    
    public const int HandCardsFieldNumber = 4;
    private int handCardsMemoizedSerializedSize;
    private pbc::PopsicleList<int> handCards_ = new pbc::PopsicleList<int>();
    public scg::IList<int> HandCardsList {
      get { return pbc::Lists.AsReadOnly(handCards_); }
    }
    public int HandCardsCount {
      get { return handCards_.Count; }
    }
    public int GetHandCards(int index) {
      return handCards_[index];
    }
    
    public const int CardtypeFieldNumber = 5;
    private bool hasCardtype;
    private global::gt_msg.CardsTypezjh cardtype_ = global::gt_msg.CardsTypezjh.ThreePrincipleszjh;
    public bool HasCardtype {
      get { return hasCardtype; }
    }
    public global::gt_msg.CardsTypezjh Cardtype {
      get { return cardtype_; }
    }
    
    public const int IsSeeHandCardsFieldNumber = 6;
    private bool hasIsSeeHandCards;
    private int isSeeHandCards_;
    public bool HasIsSeeHandCards {
      get { return hasIsSeeHandCards; }
    }
    public int IsSeeHandCards {
      get { return isSeeHandCards_; }
    }
    
    public const int PayMoneyFieldNumber = 7;
    private bool hasPayMoney;
    private int payMoney_;
    public bool HasPayMoney {
      get { return hasPayMoney; }
    }
    public int PayMoney {
      get { return payMoney_; }
    }
    
    public const int TGFieldNumber = 8;
    private bool hasTG;
    private int tG_;
    public bool HasTG {
      get { return hasTG; }
    }
    public int TG {
      get { return tG_; }
    }
    
    public const int OldActionListFieldNumber = 9;
    private pbc::PopsicleList<global::gt_msg.ActionRequestzjh> oldActionList_ = new pbc::PopsicleList<global::gt_msg.ActionRequestzjh>();
    public scg::IList<global::gt_msg.ActionRequestzjh> OldActionListList {
      get { return oldActionList_; }
    }
    public int OldActionListCount {
      get { return oldActionList_.Count; }
    }
    public global::gt_msg.ActionRequestzjh GetOldActionList(int index) {
      return oldActionList_[index];
    }
    
    public const int NewActionListFieldNumber = 10;
    private pbc::PopsicleList<global::gt_msg.ActionRequestzjh> newActionList_ = new pbc::PopsicleList<global::gt_msg.ActionRequestzjh>();
    public scg::IList<global::gt_msg.ActionRequestzjh> NewActionListList {
      get { return newActionList_; }
    }
    public int NewActionListCount {
      get { return newActionList_.Count; }
    }
    public global::gt_msg.ActionRequestzjh GetNewActionList(int index) {
      return newActionList_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserInfo) return false;
        if (!hasNowSeat) return false;
        if (!hasState) return false;
        if (!UserInfo.IsInitialized) return false;
        foreach (global::gt_msg.ActionRequestzjh element in OldActionListList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::gt_msg.ActionRequestzjh element in NewActionListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tableUserStatszjhFieldNames;
      if (hasUserInfo) {
        output.WriteMessage(1, field_names[9], UserInfo);
      }
      if (hasNowSeat) {
        output.WriteInt32(2, field_names[4], NowSeat);
      }
      if (hasState) {
        output.WriteInt32(3, field_names[7], State);
      }
      if (handCards_.Count > 0) {
        output.WritePackedInt32Array(4, field_names[1], handCardsMemoizedSerializedSize, handCards_);
      }
      if (hasCardtype) {
        output.WriteEnum(5, field_names[0], (int) Cardtype, Cardtype);
      }
      if (hasIsSeeHandCards) {
        output.WriteInt32(6, field_names[2], IsSeeHandCards);
      }
      if (hasPayMoney) {
        output.WriteInt32(7, field_names[6], PayMoney);
      }
      if (hasTG) {
        output.WriteInt32(8, field_names[8], TG);
      }
      if (oldActionList_.Count > 0) {
        output.WriteMessageArray(9, field_names[5], oldActionList_);
      }
      if (newActionList_.Count > 0) {
        output.WriteMessageArray(10, field_names[3], newActionList_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserInfo) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, UserInfo);
      }
      if (hasNowSeat) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, NowSeat);
      }
      if (hasState) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, State);
      }
      {
        int dataSize = 0;
        foreach (int element in HandCardsList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        if (handCards_.Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
        }
        handCardsMemoizedSerializedSize = dataSize;
      }
      if (hasCardtype) {
        size += pb::CodedOutputStream.ComputeEnumSize(5, (int) Cardtype);
      }
      if (hasIsSeeHandCards) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, IsSeeHandCards);
      }
      if (hasPayMoney) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, PayMoney);
      }
      if (hasTG) {
        size += pb::CodedOutputStream.ComputeInt32Size(8, TG);
      }
      foreach (global::gt_msg.ActionRequestzjh element in OldActionListList) {
        size += pb::CodedOutputStream.ComputeMessageSize(9, element);
      }
      foreach (global::gt_msg.ActionRequestzjh element in NewActionListList) {
        size += pb::CodedOutputStream.ComputeMessageSize(10, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TableUserStatszjh ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableUserStatszjh ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableUserStatszjh ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableUserStatszjh ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableUserStatszjh ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableUserStatszjh ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableUserStatszjh ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableUserStatszjh ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableUserStatszjh ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableUserStatszjh ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableUserStatszjh MakeReadOnly() {
      handCards_.MakeReadOnly();
      oldActionList_.MakeReadOnly();
      newActionList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableUserStatszjh prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableUserStatszjh, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableUserStatszjh cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableUserStatszjh result;
      
      private TableUserStatszjh PrepareBuilder() {
        if (resultIsReadOnly) {
          TableUserStatszjh original = result;
          result = new TableUserStatszjh();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableUserStatszjh MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.TableUserStatszjh.Descriptor; }
      }
      
      public override TableUserStatszjh DefaultInstanceForType {
        get { return global::gt_msg.TableUserStatszjh.DefaultInstance; }
      }
      
      public override TableUserStatszjh BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableUserStatszjh) {
          return MergeFrom((TableUserStatszjh) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableUserStatszjh other) {
        if (other == global::gt_msg.TableUserStatszjh.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserInfo) {
          MergeUserInfo(other.UserInfo);
        }
        if (other.HasNowSeat) {
          NowSeat = other.NowSeat;
        }
        if (other.HasState) {
          State = other.State;
        }
        if (other.handCards_.Count != 0) {
          result.handCards_.Add(other.handCards_);
        }
        if (other.HasCardtype) {
          Cardtype = other.Cardtype;
        }
        if (other.HasIsSeeHandCards) {
          IsSeeHandCards = other.IsSeeHandCards;
        }
        if (other.HasPayMoney) {
          PayMoney = other.PayMoney;
        }
        if (other.HasTG) {
          TG = other.TG;
        }
        if (other.oldActionList_.Count != 0) {
          result.oldActionList_.Add(other.oldActionList_);
        }
        if (other.newActionList_.Count != 0) {
          result.newActionList_.Add(other.newActionList_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableUserStatszjhFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableUserStatszjhFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::gt_msg.User.Builder subBuilder = global::gt_msg.User.CreateBuilder();
              if (result.hasUserInfo) {
                subBuilder.MergeFrom(UserInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserInfo = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasNowSeat = input.ReadInt32(ref result.nowSeat_);
              break;
            }
            case 24: {
              result.hasState = input.ReadInt32(ref result.state_);
              break;
            }
            case 34:
            case 32: {
              input.ReadInt32Array(tag, field_name, result.handCards_);
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.cardtype_, out unknown)) {
                result.hasCardtype = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
            case 48: {
              result.hasIsSeeHandCards = input.ReadInt32(ref result.isSeeHandCards_);
              break;
            }
            case 56: {
              result.hasPayMoney = input.ReadInt32(ref result.payMoney_);
              break;
            }
            case 64: {
              result.hasTG = input.ReadInt32(ref result.tG_);
              break;
            }
            case 74: {
              input.ReadMessageArray(tag, field_name, result.oldActionList_, global::gt_msg.ActionRequestzjh.DefaultInstance, extensionRegistry);
              break;
            }
            case 82: {
              input.ReadMessageArray(tag, field_name, result.newActionList_, global::gt_msg.ActionRequestzjh.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserInfo {
       get { return result.hasUserInfo; }
      }
      public global::gt_msg.User UserInfo {
        get { return result.UserInfo; }
        set { SetUserInfo(value); }
      }
      public Builder SetUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = value;
        return this;
      }
      public Builder SetUserInfo(global::gt_msg.User.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserInfo &&
            result.userInfo_ != global::gt_msg.User.DefaultInstance) {
            result.userInfo_ = global::gt_msg.User.CreateBuilder(result.userInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.userInfo_ = value;
        }
        result.hasUserInfo = true;
        return this;
      }
      public Builder ClearUserInfo() {
        PrepareBuilder();
        result.hasUserInfo = false;
        result.userInfo_ = null;
        return this;
      }
      
      public bool HasNowSeat {
        get { return result.hasNowSeat; }
      }
      public int NowSeat {
        get { return result.NowSeat; }
        set { SetNowSeat(value); }
      }
      public Builder SetNowSeat(int value) {
        PrepareBuilder();
        result.hasNowSeat = true;
        result.nowSeat_ = value;
        return this;
      }
      public Builder ClearNowSeat() {
        PrepareBuilder();
        result.hasNowSeat = false;
        result.nowSeat_ = 0;
        return this;
      }
      
      public bool HasState {
        get { return result.hasState; }
      }
      public int State {
        get { return result.State; }
        set { SetState(value); }
      }
      public Builder SetState(int value) {
        PrepareBuilder();
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder ClearState() {
        PrepareBuilder();
        result.hasState = false;
        result.state_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<int> HandCardsList {
        get { return PrepareBuilder().handCards_; }
      }
      public int HandCardsCount {
        get { return result.HandCardsCount; }
      }
      public int GetHandCards(int index) {
        return result.GetHandCards(index);
      }
      public Builder SetHandCards(int index, int value) {
        PrepareBuilder();
        result.handCards_[index] = value;
        return this;
      }
      public Builder AddHandCards(int value) {
        PrepareBuilder();
        result.handCards_.Add(value);
        return this;
      }
      public Builder AddRangeHandCards(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.handCards_.Add(values);
        return this;
      }
      public Builder ClearHandCards() {
        PrepareBuilder();
        result.handCards_.Clear();
        return this;
      }
      
      public bool HasCardtype {
       get { return result.hasCardtype; }
      }
      public global::gt_msg.CardsTypezjh Cardtype {
        get { return result.Cardtype; }
        set { SetCardtype(value); }
      }
      public Builder SetCardtype(global::gt_msg.CardsTypezjh value) {
        PrepareBuilder();
        result.hasCardtype = true;
        result.cardtype_ = value;
        return this;
      }
      public Builder ClearCardtype() {
        PrepareBuilder();
        result.hasCardtype = false;
        result.cardtype_ = global::gt_msg.CardsTypezjh.ThreePrincipleszjh;
        return this;
      }
      
      public bool HasIsSeeHandCards {
        get { return result.hasIsSeeHandCards; }
      }
      public int IsSeeHandCards {
        get { return result.IsSeeHandCards; }
        set { SetIsSeeHandCards(value); }
      }
      public Builder SetIsSeeHandCards(int value) {
        PrepareBuilder();
        result.hasIsSeeHandCards = true;
        result.isSeeHandCards_ = value;
        return this;
      }
      public Builder ClearIsSeeHandCards() {
        PrepareBuilder();
        result.hasIsSeeHandCards = false;
        result.isSeeHandCards_ = 0;
        return this;
      }
      
      public bool HasPayMoney {
        get { return result.hasPayMoney; }
      }
      public int PayMoney {
        get { return result.PayMoney; }
        set { SetPayMoney(value); }
      }
      public Builder SetPayMoney(int value) {
        PrepareBuilder();
        result.hasPayMoney = true;
        result.payMoney_ = value;
        return this;
      }
      public Builder ClearPayMoney() {
        PrepareBuilder();
        result.hasPayMoney = false;
        result.payMoney_ = 0;
        return this;
      }
      
      public bool HasTG {
        get { return result.hasTG; }
      }
      public int TG {
        get { return result.TG; }
        set { SetTG(value); }
      }
      public Builder SetTG(int value) {
        PrepareBuilder();
        result.hasTG = true;
        result.tG_ = value;
        return this;
      }
      public Builder ClearTG() {
        PrepareBuilder();
        result.hasTG = false;
        result.tG_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::gt_msg.ActionRequestzjh> OldActionListList {
        get { return PrepareBuilder().oldActionList_; }
      }
      public int OldActionListCount {
        get { return result.OldActionListCount; }
      }
      public global::gt_msg.ActionRequestzjh GetOldActionList(int index) {
        return result.GetOldActionList(index);
      }
      public Builder SetOldActionList(int index, global::gt_msg.ActionRequestzjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.oldActionList_[index] = value;
        return this;
      }
      public Builder SetOldActionList(int index, global::gt_msg.ActionRequestzjh.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.oldActionList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOldActionList(global::gt_msg.ActionRequestzjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.oldActionList_.Add(value);
        return this;
      }
      public Builder AddOldActionList(global::gt_msg.ActionRequestzjh.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.oldActionList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOldActionList(scg::IEnumerable<global::gt_msg.ActionRequestzjh> values) {
        PrepareBuilder();
        result.oldActionList_.Add(values);
        return this;
      }
      public Builder ClearOldActionList() {
        PrepareBuilder();
        result.oldActionList_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::gt_msg.ActionRequestzjh> NewActionListList {
        get { return PrepareBuilder().newActionList_; }
      }
      public int NewActionListCount {
        get { return result.NewActionListCount; }
      }
      public global::gt_msg.ActionRequestzjh GetNewActionList(int index) {
        return result.GetNewActionList(index);
      }
      public Builder SetNewActionList(int index, global::gt_msg.ActionRequestzjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.newActionList_[index] = value;
        return this;
      }
      public Builder SetNewActionList(int index, global::gt_msg.ActionRequestzjh.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.newActionList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddNewActionList(global::gt_msg.ActionRequestzjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.newActionList_.Add(value);
        return this;
      }
      public Builder AddNewActionList(global::gt_msg.ActionRequestzjh.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.newActionList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeNewActionList(scg::IEnumerable<global::gt_msg.ActionRequestzjh> values) {
        PrepareBuilder();
        result.newActionList_.Add(values);
        return this;
      }
      public Builder ClearNewActionList() {
        PrepareBuilder();
        result.newActionList_.Clear();
        return this;
      }
    }
    static TableUserStatszjh() {
      object.ReferenceEquals(global::gt_msg.GtZjh.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableStatszjh : pb::GeneratedMessage<TableStatszjh, TableStatszjh.Builder> {
    private TableStatszjh() { }
    private static readonly TableStatszjh defaultInstance = new TableStatszjh().MakeReadOnly();
    private static readonly string[] _tableStatszjhFieldNames = new string[] { "BasePoint", "LastActionSeat", "LastAddMoneySeat", "MoneyOnTable", "MySeat", "NextActionTimeOut", "NowRoundPoint", "NowSeat", "Rank", "Rule", "SeatUser1", "SeatUser2", "SeatUser3", "SeatUser4", "SeatUser5", "SeatUser6", "Stage", "TableID", "round" };
    private static readonly uint[] _tableStatszjhFieldTags = new uint[] { 72, 104, 96, 88, 56, 40, 80, 66, 24, 32, 114, 122, 130, 138, 146, 154, 16, 8, 48 };
    public static TableStatszjh DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableStatszjh DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableStatszjh ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_TableStatszjh__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableStatszjh, TableStatszjh.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_TableStatszjh__FieldAccessorTable; }
    }
    
    public const int TableIDFieldNumber = 1;
    private bool hasTableID;
    private int tableID_;
    public bool HasTableID {
      get { return hasTableID; }
    }
    public int TableID {
      get { return tableID_; }
    }
    
    public const int StageFieldNumber = 2;
    private bool hasStage;
    private int stage_;
    public bool HasStage {
      get { return hasStage; }
    }
    public int Stage {
      get { return stage_; }
    }
    
    public const int RankFieldNumber = 3;
    private bool hasRank;
    private global::gt_msg.Rank rank_ = global::gt_msg.Rank.LV0;
    public bool HasRank {
      get { return hasRank; }
    }
    public global::gt_msg.Rank Rank {
      get { return rank_; }
    }
    
    public const int RuleFieldNumber = 4;
    private bool hasRule;
    private global::gt_msg.Rule rule_ = global::gt_msg.Rule.RuleNormal;
    public bool HasRule {
      get { return hasRule; }
    }
    public global::gt_msg.Rule Rule {
      get { return rule_; }
    }
    
    public const int NextActionTimeOutFieldNumber = 5;
    private bool hasNextActionTimeOut;
    private int nextActionTimeOut_;
    public bool HasNextActionTimeOut {
      get { return hasNextActionTimeOut; }
    }
    public int NextActionTimeOut {
      get { return nextActionTimeOut_; }
    }
    
    public const int RoundFieldNumber = 6;
    private bool hasRound;
    private int round_;
    public bool HasRound {
      get { return hasRound; }
    }
    public int Round {
      get { return round_; }
    }
    
    public const int MySeatFieldNumber = 7;
    private bool hasMySeat;
    private int mySeat_;
    public bool HasMySeat {
      get { return hasMySeat; }
    }
    public int MySeat {
      get { return mySeat_; }
    }
    
    public const int NowSeatFieldNumber = 8;
    private int nowSeatMemoizedSerializedSize;
    private pbc::PopsicleList<int> nowSeat_ = new pbc::PopsicleList<int>();
    public scg::IList<int> NowSeatList {
      get { return pbc::Lists.AsReadOnly(nowSeat_); }
    }
    public int NowSeatCount {
      get { return nowSeat_.Count; }
    }
    public int GetNowSeat(int index) {
      return nowSeat_[index];
    }
    
    public const int BasePointFieldNumber = 9;
    private bool hasBasePoint;
    private int basePoint_;
    public bool HasBasePoint {
      get { return hasBasePoint; }
    }
    public int BasePoint {
      get { return basePoint_; }
    }
    
    public const int NowRoundPointFieldNumber = 10;
    private bool hasNowRoundPoint;
    private int nowRoundPoint_;
    public bool HasNowRoundPoint {
      get { return hasNowRoundPoint; }
    }
    public int NowRoundPoint {
      get { return nowRoundPoint_; }
    }
    
    public const int MoneyOnTableFieldNumber = 11;
    private bool hasMoneyOnTable;
    private int moneyOnTable_;
    public bool HasMoneyOnTable {
      get { return hasMoneyOnTable; }
    }
    public int MoneyOnTable {
      get { return moneyOnTable_; }
    }
    
    public const int LastAddMoneySeatFieldNumber = 12;
    private bool hasLastAddMoneySeat;
    private int lastAddMoneySeat_;
    public bool HasLastAddMoneySeat {
      get { return hasLastAddMoneySeat; }
    }
    public int LastAddMoneySeat {
      get { return lastAddMoneySeat_; }
    }
    
    public const int LastActionSeatFieldNumber = 13;
    private bool hasLastActionSeat;
    private int lastActionSeat_;
    public bool HasLastActionSeat {
      get { return hasLastActionSeat; }
    }
    public int LastActionSeat {
      get { return lastActionSeat_; }
    }
    
    public const int SeatUser1FieldNumber = 14;
    private bool hasSeatUser1;
    private global::gt_msg.TableUserStatszjh seatUser1_;
    public bool HasSeatUser1 {
      get { return hasSeatUser1; }
    }
    public global::gt_msg.TableUserStatszjh SeatUser1 {
      get { return seatUser1_ ?? global::gt_msg.TableUserStatszjh.DefaultInstance; }
    }
    
    public const int SeatUser2FieldNumber = 15;
    private bool hasSeatUser2;
    private global::gt_msg.TableUserStatszjh seatUser2_;
    public bool HasSeatUser2 {
      get { return hasSeatUser2; }
    }
    public global::gt_msg.TableUserStatszjh SeatUser2 {
      get { return seatUser2_ ?? global::gt_msg.TableUserStatszjh.DefaultInstance; }
    }
    
    public const int SeatUser3FieldNumber = 16;
    private bool hasSeatUser3;
    private global::gt_msg.TableUserStatszjh seatUser3_;
    public bool HasSeatUser3 {
      get { return hasSeatUser3; }
    }
    public global::gt_msg.TableUserStatszjh SeatUser3 {
      get { return seatUser3_ ?? global::gt_msg.TableUserStatszjh.DefaultInstance; }
    }
    
    public const int SeatUser4FieldNumber = 17;
    private bool hasSeatUser4;
    private global::gt_msg.TableUserStatszjh seatUser4_;
    public bool HasSeatUser4 {
      get { return hasSeatUser4; }
    }
    public global::gt_msg.TableUserStatszjh SeatUser4 {
      get { return seatUser4_ ?? global::gt_msg.TableUserStatszjh.DefaultInstance; }
    }
    
    public const int SeatUser5FieldNumber = 18;
    private bool hasSeatUser5;
    private global::gt_msg.TableUserStatszjh seatUser5_;
    public bool HasSeatUser5 {
      get { return hasSeatUser5; }
    }
    public global::gt_msg.TableUserStatszjh SeatUser5 {
      get { return seatUser5_ ?? global::gt_msg.TableUserStatszjh.DefaultInstance; }
    }
    
    public const int SeatUser6FieldNumber = 19;
    private bool hasSeatUser6;
    private global::gt_msg.TableUserStatszjh seatUser6_;
    public bool HasSeatUser6 {
      get { return hasSeatUser6; }
    }
    public global::gt_msg.TableUserStatszjh SeatUser6 {
      get { return seatUser6_ ?? global::gt_msg.TableUserStatszjh.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableID) return false;
        if (!hasStage) return false;
        if (!hasRank) return false;
        if (!hasRule) return false;
        if (!hasNextActionTimeOut) return false;
        if (!hasRound) return false;
        if (!hasMySeat) return false;
        if (!hasBasePoint) return false;
        if (!hasNowRoundPoint) return false;
        if (!hasMoneyOnTable) return false;
        if (!hasLastAddMoneySeat) return false;
        if (!hasLastActionSeat) return false;
        if (HasSeatUser1) {
          if (!SeatUser1.IsInitialized) return false;
        }
        if (HasSeatUser2) {
          if (!SeatUser2.IsInitialized) return false;
        }
        if (HasSeatUser3) {
          if (!SeatUser3.IsInitialized) return false;
        }
        if (HasSeatUser4) {
          if (!SeatUser4.IsInitialized) return false;
        }
        if (HasSeatUser5) {
          if (!SeatUser5.IsInitialized) return false;
        }
        if (HasSeatUser6) {
          if (!SeatUser6.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tableStatszjhFieldNames;
      if (hasTableID) {
        output.WriteInt32(1, field_names[17], TableID);
      }
      if (hasStage) {
        output.WriteInt32(2, field_names[16], Stage);
      }
      if (hasRank) {
        output.WriteEnum(3, field_names[8], (int) Rank, Rank);
      }
      if (hasRule) {
        output.WriteEnum(4, field_names[9], (int) Rule, Rule);
      }
      if (hasNextActionTimeOut) {
        output.WriteInt32(5, field_names[5], NextActionTimeOut);
      }
      if (hasRound) {
        output.WriteInt32(6, field_names[18], Round);
      }
      if (hasMySeat) {
        output.WriteInt32(7, field_names[4], MySeat);
      }
      if (nowSeat_.Count > 0) {
        output.WritePackedInt32Array(8, field_names[7], nowSeatMemoizedSerializedSize, nowSeat_);
      }
      if (hasBasePoint) {
        output.WriteInt32(9, field_names[0], BasePoint);
      }
      if (hasNowRoundPoint) {
        output.WriteInt32(10, field_names[6], NowRoundPoint);
      }
      if (hasMoneyOnTable) {
        output.WriteInt32(11, field_names[3], MoneyOnTable);
      }
      if (hasLastAddMoneySeat) {
        output.WriteInt32(12, field_names[2], LastAddMoneySeat);
      }
      if (hasLastActionSeat) {
        output.WriteInt32(13, field_names[1], LastActionSeat);
      }
      if (hasSeatUser1) {
        output.WriteMessage(14, field_names[10], SeatUser1);
      }
      if (hasSeatUser2) {
        output.WriteMessage(15, field_names[11], SeatUser2);
      }
      if (hasSeatUser3) {
        output.WriteMessage(16, field_names[12], SeatUser3);
      }
      if (hasSeatUser4) {
        output.WriteMessage(17, field_names[13], SeatUser4);
      }
      if (hasSeatUser5) {
        output.WriteMessage(18, field_names[14], SeatUser5);
      }
      if (hasSeatUser6) {
        output.WriteMessage(19, field_names[15], SeatUser6);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableID) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, TableID);
      }
      if (hasStage) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Stage);
      }
      if (hasRank) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Rank);
      }
      if (hasRule) {
        size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Rule);
      }
      if (hasNextActionTimeOut) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, NextActionTimeOut);
      }
      if (hasRound) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, Round);
      }
      if (hasMySeat) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, MySeat);
      }
      {
        int dataSize = 0;
        foreach (int element in NowSeatList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        if (nowSeat_.Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
        }
        nowSeatMemoizedSerializedSize = dataSize;
      }
      if (hasBasePoint) {
        size += pb::CodedOutputStream.ComputeInt32Size(9, BasePoint);
      }
      if (hasNowRoundPoint) {
        size += pb::CodedOutputStream.ComputeInt32Size(10, NowRoundPoint);
      }
      if (hasMoneyOnTable) {
        size += pb::CodedOutputStream.ComputeInt32Size(11, MoneyOnTable);
      }
      if (hasLastAddMoneySeat) {
        size += pb::CodedOutputStream.ComputeInt32Size(12, LastAddMoneySeat);
      }
      if (hasLastActionSeat) {
        size += pb::CodedOutputStream.ComputeInt32Size(13, LastActionSeat);
      }
      if (hasSeatUser1) {
        size += pb::CodedOutputStream.ComputeMessageSize(14, SeatUser1);
      }
      if (hasSeatUser2) {
        size += pb::CodedOutputStream.ComputeMessageSize(15, SeatUser2);
      }
      if (hasSeatUser3) {
        size += pb::CodedOutputStream.ComputeMessageSize(16, SeatUser3);
      }
      if (hasSeatUser4) {
        size += pb::CodedOutputStream.ComputeMessageSize(17, SeatUser4);
      }
      if (hasSeatUser5) {
        size += pb::CodedOutputStream.ComputeMessageSize(18, SeatUser5);
      }
      if (hasSeatUser6) {
        size += pb::CodedOutputStream.ComputeMessageSize(19, SeatUser6);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TableStatszjh ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableStatszjh ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableStatszjh ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableStatszjh ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableStatszjh ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableStatszjh ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableStatszjh ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableStatszjh ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableStatszjh ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableStatszjh ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableStatszjh MakeReadOnly() {
      nowSeat_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableStatszjh prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableStatszjh, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableStatszjh cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableStatszjh result;
      
      private TableStatszjh PrepareBuilder() {
        if (resultIsReadOnly) {
          TableStatszjh original = result;
          result = new TableStatszjh();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableStatszjh MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.TableStatszjh.Descriptor; }
      }
      
      public override TableStatszjh DefaultInstanceForType {
        get { return global::gt_msg.TableStatszjh.DefaultInstance; }
      }
      
      public override TableStatszjh BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableStatszjh) {
          return MergeFrom((TableStatszjh) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableStatszjh other) {
        if (other == global::gt_msg.TableStatszjh.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableID) {
          TableID = other.TableID;
        }
        if (other.HasStage) {
          Stage = other.Stage;
        }
        if (other.HasRank) {
          Rank = other.Rank;
        }
        if (other.HasRule) {
          Rule = other.Rule;
        }
        if (other.HasNextActionTimeOut) {
          NextActionTimeOut = other.NextActionTimeOut;
        }
        if (other.HasRound) {
          Round = other.Round;
        }
        if (other.HasMySeat) {
          MySeat = other.MySeat;
        }
        if (other.nowSeat_.Count != 0) {
          result.nowSeat_.Add(other.nowSeat_);
        }
        if (other.HasBasePoint) {
          BasePoint = other.BasePoint;
        }
        if (other.HasNowRoundPoint) {
          NowRoundPoint = other.NowRoundPoint;
        }
        if (other.HasMoneyOnTable) {
          MoneyOnTable = other.MoneyOnTable;
        }
        if (other.HasLastAddMoneySeat) {
          LastAddMoneySeat = other.LastAddMoneySeat;
        }
        if (other.HasLastActionSeat) {
          LastActionSeat = other.LastActionSeat;
        }
        if (other.HasSeatUser1) {
          MergeSeatUser1(other.SeatUser1);
        }
        if (other.HasSeatUser2) {
          MergeSeatUser2(other.SeatUser2);
        }
        if (other.HasSeatUser3) {
          MergeSeatUser3(other.SeatUser3);
        }
        if (other.HasSeatUser4) {
          MergeSeatUser4(other.SeatUser4);
        }
        if (other.HasSeatUser5) {
          MergeSeatUser5(other.SeatUser5);
        }
        if (other.HasSeatUser6) {
          MergeSeatUser6(other.SeatUser6);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableStatszjhFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableStatszjhFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTableID = input.ReadInt32(ref result.tableID_);
              break;
            }
            case 16: {
              result.hasStage = input.ReadInt32(ref result.stage_);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.rank_, out unknown)) {
                result.hasRank = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.rule_, out unknown)) {
                result.hasRule = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
            case 40: {
              result.hasNextActionTimeOut = input.ReadInt32(ref result.nextActionTimeOut_);
              break;
            }
            case 48: {
              result.hasRound = input.ReadInt32(ref result.round_);
              break;
            }
            case 56: {
              result.hasMySeat = input.ReadInt32(ref result.mySeat_);
              break;
            }
            case 66:
            case 64: {
              input.ReadInt32Array(tag, field_name, result.nowSeat_);
              break;
            }
            case 72: {
              result.hasBasePoint = input.ReadInt32(ref result.basePoint_);
              break;
            }
            case 80: {
              result.hasNowRoundPoint = input.ReadInt32(ref result.nowRoundPoint_);
              break;
            }
            case 88: {
              result.hasMoneyOnTable = input.ReadInt32(ref result.moneyOnTable_);
              break;
            }
            case 96: {
              result.hasLastAddMoneySeat = input.ReadInt32(ref result.lastAddMoneySeat_);
              break;
            }
            case 104: {
              result.hasLastActionSeat = input.ReadInt32(ref result.lastActionSeat_);
              break;
            }
            case 114: {
              global::gt_msg.TableUserStatszjh.Builder subBuilder = global::gt_msg.TableUserStatszjh.CreateBuilder();
              if (result.hasSeatUser1) {
                subBuilder.MergeFrom(SeatUser1);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SeatUser1 = subBuilder.BuildPartial();
              break;
            }
            case 122: {
              global::gt_msg.TableUserStatszjh.Builder subBuilder = global::gt_msg.TableUserStatszjh.CreateBuilder();
              if (result.hasSeatUser2) {
                subBuilder.MergeFrom(SeatUser2);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SeatUser2 = subBuilder.BuildPartial();
              break;
            }
            case 130: {
              global::gt_msg.TableUserStatszjh.Builder subBuilder = global::gt_msg.TableUserStatszjh.CreateBuilder();
              if (result.hasSeatUser3) {
                subBuilder.MergeFrom(SeatUser3);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SeatUser3 = subBuilder.BuildPartial();
              break;
            }
            case 138: {
              global::gt_msg.TableUserStatszjh.Builder subBuilder = global::gt_msg.TableUserStatszjh.CreateBuilder();
              if (result.hasSeatUser4) {
                subBuilder.MergeFrom(SeatUser4);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SeatUser4 = subBuilder.BuildPartial();
              break;
            }
            case 146: {
              global::gt_msg.TableUserStatszjh.Builder subBuilder = global::gt_msg.TableUserStatszjh.CreateBuilder();
              if (result.hasSeatUser5) {
                subBuilder.MergeFrom(SeatUser5);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SeatUser5 = subBuilder.BuildPartial();
              break;
            }
            case 154: {
              global::gt_msg.TableUserStatszjh.Builder subBuilder = global::gt_msg.TableUserStatszjh.CreateBuilder();
              if (result.hasSeatUser6) {
                subBuilder.MergeFrom(SeatUser6);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SeatUser6 = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableID {
        get { return result.hasTableID; }
      }
      public int TableID {
        get { return result.TableID; }
        set { SetTableID(value); }
      }
      public Builder SetTableID(int value) {
        PrepareBuilder();
        result.hasTableID = true;
        result.tableID_ = value;
        return this;
      }
      public Builder ClearTableID() {
        PrepareBuilder();
        result.hasTableID = false;
        result.tableID_ = 0;
        return this;
      }
      
      public bool HasStage {
        get { return result.hasStage; }
      }
      public int Stage {
        get { return result.Stage; }
        set { SetStage(value); }
      }
      public Builder SetStage(int value) {
        PrepareBuilder();
        result.hasStage = true;
        result.stage_ = value;
        return this;
      }
      public Builder ClearStage() {
        PrepareBuilder();
        result.hasStage = false;
        result.stage_ = 0;
        return this;
      }
      
      public bool HasRank {
       get { return result.hasRank; }
      }
      public global::gt_msg.Rank Rank {
        get { return result.Rank; }
        set { SetRank(value); }
      }
      public Builder SetRank(global::gt_msg.Rank value) {
        PrepareBuilder();
        result.hasRank = true;
        result.rank_ = value;
        return this;
      }
      public Builder ClearRank() {
        PrepareBuilder();
        result.hasRank = false;
        result.rank_ = global::gt_msg.Rank.LV0;
        return this;
      }
      
      public bool HasRule {
       get { return result.hasRule; }
      }
      public global::gt_msg.Rule Rule {
        get { return result.Rule; }
        set { SetRule(value); }
      }
      public Builder SetRule(global::gt_msg.Rule value) {
        PrepareBuilder();
        result.hasRule = true;
        result.rule_ = value;
        return this;
      }
      public Builder ClearRule() {
        PrepareBuilder();
        result.hasRule = false;
        result.rule_ = global::gt_msg.Rule.RuleNormal;
        return this;
      }
      
      public bool HasNextActionTimeOut {
        get { return result.hasNextActionTimeOut; }
      }
      public int NextActionTimeOut {
        get { return result.NextActionTimeOut; }
        set { SetNextActionTimeOut(value); }
      }
      public Builder SetNextActionTimeOut(int value) {
        PrepareBuilder();
        result.hasNextActionTimeOut = true;
        result.nextActionTimeOut_ = value;
        return this;
      }
      public Builder ClearNextActionTimeOut() {
        PrepareBuilder();
        result.hasNextActionTimeOut = false;
        result.nextActionTimeOut_ = 0;
        return this;
      }
      
      public bool HasRound {
        get { return result.hasRound; }
      }
      public int Round {
        get { return result.Round; }
        set { SetRound(value); }
      }
      public Builder SetRound(int value) {
        PrepareBuilder();
        result.hasRound = true;
        result.round_ = value;
        return this;
      }
      public Builder ClearRound() {
        PrepareBuilder();
        result.hasRound = false;
        result.round_ = 0;
        return this;
      }
      
      public bool HasMySeat {
        get { return result.hasMySeat; }
      }
      public int MySeat {
        get { return result.MySeat; }
        set { SetMySeat(value); }
      }
      public Builder SetMySeat(int value) {
        PrepareBuilder();
        result.hasMySeat = true;
        result.mySeat_ = value;
        return this;
      }
      public Builder ClearMySeat() {
        PrepareBuilder();
        result.hasMySeat = false;
        result.mySeat_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<int> NowSeatList {
        get { return PrepareBuilder().nowSeat_; }
      }
      public int NowSeatCount {
        get { return result.NowSeatCount; }
      }
      public int GetNowSeat(int index) {
        return result.GetNowSeat(index);
      }
      public Builder SetNowSeat(int index, int value) {
        PrepareBuilder();
        result.nowSeat_[index] = value;
        return this;
      }
      public Builder AddNowSeat(int value) {
        PrepareBuilder();
        result.nowSeat_.Add(value);
        return this;
      }
      public Builder AddRangeNowSeat(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.nowSeat_.Add(values);
        return this;
      }
      public Builder ClearNowSeat() {
        PrepareBuilder();
        result.nowSeat_.Clear();
        return this;
      }
      
      public bool HasBasePoint {
        get { return result.hasBasePoint; }
      }
      public int BasePoint {
        get { return result.BasePoint; }
        set { SetBasePoint(value); }
      }
      public Builder SetBasePoint(int value) {
        PrepareBuilder();
        result.hasBasePoint = true;
        result.basePoint_ = value;
        return this;
      }
      public Builder ClearBasePoint() {
        PrepareBuilder();
        result.hasBasePoint = false;
        result.basePoint_ = 0;
        return this;
      }
      
      public bool HasNowRoundPoint {
        get { return result.hasNowRoundPoint; }
      }
      public int NowRoundPoint {
        get { return result.NowRoundPoint; }
        set { SetNowRoundPoint(value); }
      }
      public Builder SetNowRoundPoint(int value) {
        PrepareBuilder();
        result.hasNowRoundPoint = true;
        result.nowRoundPoint_ = value;
        return this;
      }
      public Builder ClearNowRoundPoint() {
        PrepareBuilder();
        result.hasNowRoundPoint = false;
        result.nowRoundPoint_ = 0;
        return this;
      }
      
      public bool HasMoneyOnTable {
        get { return result.hasMoneyOnTable; }
      }
      public int MoneyOnTable {
        get { return result.MoneyOnTable; }
        set { SetMoneyOnTable(value); }
      }
      public Builder SetMoneyOnTable(int value) {
        PrepareBuilder();
        result.hasMoneyOnTable = true;
        result.moneyOnTable_ = value;
        return this;
      }
      public Builder ClearMoneyOnTable() {
        PrepareBuilder();
        result.hasMoneyOnTable = false;
        result.moneyOnTable_ = 0;
        return this;
      }
      
      public bool HasLastAddMoneySeat {
        get { return result.hasLastAddMoneySeat; }
      }
      public int LastAddMoneySeat {
        get { return result.LastAddMoneySeat; }
        set { SetLastAddMoneySeat(value); }
      }
      public Builder SetLastAddMoneySeat(int value) {
        PrepareBuilder();
        result.hasLastAddMoneySeat = true;
        result.lastAddMoneySeat_ = value;
        return this;
      }
      public Builder ClearLastAddMoneySeat() {
        PrepareBuilder();
        result.hasLastAddMoneySeat = false;
        result.lastAddMoneySeat_ = 0;
        return this;
      }
      
      public bool HasLastActionSeat {
        get { return result.hasLastActionSeat; }
      }
      public int LastActionSeat {
        get { return result.LastActionSeat; }
        set { SetLastActionSeat(value); }
      }
      public Builder SetLastActionSeat(int value) {
        PrepareBuilder();
        result.hasLastActionSeat = true;
        result.lastActionSeat_ = value;
        return this;
      }
      public Builder ClearLastActionSeat() {
        PrepareBuilder();
        result.hasLastActionSeat = false;
        result.lastActionSeat_ = 0;
        return this;
      }
      
      public bool HasSeatUser1 {
       get { return result.hasSeatUser1; }
      }
      public global::gt_msg.TableUserStatszjh SeatUser1 {
        get { return result.SeatUser1; }
        set { SetSeatUser1(value); }
      }
      public Builder SetSeatUser1(global::gt_msg.TableUserStatszjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSeatUser1 = true;
        result.seatUser1_ = value;
        return this;
      }
      public Builder SetSeatUser1(global::gt_msg.TableUserStatszjh.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSeatUser1 = true;
        result.seatUser1_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSeatUser1(global::gt_msg.TableUserStatszjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSeatUser1 &&
            result.seatUser1_ != global::gt_msg.TableUserStatszjh.DefaultInstance) {
            result.seatUser1_ = global::gt_msg.TableUserStatszjh.CreateBuilder(result.seatUser1_).MergeFrom(value).BuildPartial();
        } else {
          result.seatUser1_ = value;
        }
        result.hasSeatUser1 = true;
        return this;
      }
      public Builder ClearSeatUser1() {
        PrepareBuilder();
        result.hasSeatUser1 = false;
        result.seatUser1_ = null;
        return this;
      }
      
      public bool HasSeatUser2 {
       get { return result.hasSeatUser2; }
      }
      public global::gt_msg.TableUserStatszjh SeatUser2 {
        get { return result.SeatUser2; }
        set { SetSeatUser2(value); }
      }
      public Builder SetSeatUser2(global::gt_msg.TableUserStatszjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSeatUser2 = true;
        result.seatUser2_ = value;
        return this;
      }
      public Builder SetSeatUser2(global::gt_msg.TableUserStatszjh.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSeatUser2 = true;
        result.seatUser2_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSeatUser2(global::gt_msg.TableUserStatszjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSeatUser2 &&
            result.seatUser2_ != global::gt_msg.TableUserStatszjh.DefaultInstance) {
            result.seatUser2_ = global::gt_msg.TableUserStatszjh.CreateBuilder(result.seatUser2_).MergeFrom(value).BuildPartial();
        } else {
          result.seatUser2_ = value;
        }
        result.hasSeatUser2 = true;
        return this;
      }
      public Builder ClearSeatUser2() {
        PrepareBuilder();
        result.hasSeatUser2 = false;
        result.seatUser2_ = null;
        return this;
      }
      
      public bool HasSeatUser3 {
       get { return result.hasSeatUser3; }
      }
      public global::gt_msg.TableUserStatszjh SeatUser3 {
        get { return result.SeatUser3; }
        set { SetSeatUser3(value); }
      }
      public Builder SetSeatUser3(global::gt_msg.TableUserStatszjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSeatUser3 = true;
        result.seatUser3_ = value;
        return this;
      }
      public Builder SetSeatUser3(global::gt_msg.TableUserStatszjh.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSeatUser3 = true;
        result.seatUser3_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSeatUser3(global::gt_msg.TableUserStatszjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSeatUser3 &&
            result.seatUser3_ != global::gt_msg.TableUserStatszjh.DefaultInstance) {
            result.seatUser3_ = global::gt_msg.TableUserStatszjh.CreateBuilder(result.seatUser3_).MergeFrom(value).BuildPartial();
        } else {
          result.seatUser3_ = value;
        }
        result.hasSeatUser3 = true;
        return this;
      }
      public Builder ClearSeatUser3() {
        PrepareBuilder();
        result.hasSeatUser3 = false;
        result.seatUser3_ = null;
        return this;
      }
      
      public bool HasSeatUser4 {
       get { return result.hasSeatUser4; }
      }
      public global::gt_msg.TableUserStatszjh SeatUser4 {
        get { return result.SeatUser4; }
        set { SetSeatUser4(value); }
      }
      public Builder SetSeatUser4(global::gt_msg.TableUserStatszjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSeatUser4 = true;
        result.seatUser4_ = value;
        return this;
      }
      public Builder SetSeatUser4(global::gt_msg.TableUserStatszjh.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSeatUser4 = true;
        result.seatUser4_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSeatUser4(global::gt_msg.TableUserStatszjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSeatUser4 &&
            result.seatUser4_ != global::gt_msg.TableUserStatszjh.DefaultInstance) {
            result.seatUser4_ = global::gt_msg.TableUserStatszjh.CreateBuilder(result.seatUser4_).MergeFrom(value).BuildPartial();
        } else {
          result.seatUser4_ = value;
        }
        result.hasSeatUser4 = true;
        return this;
      }
      public Builder ClearSeatUser4() {
        PrepareBuilder();
        result.hasSeatUser4 = false;
        result.seatUser4_ = null;
        return this;
      }
      
      public bool HasSeatUser5 {
       get { return result.hasSeatUser5; }
      }
      public global::gt_msg.TableUserStatszjh SeatUser5 {
        get { return result.SeatUser5; }
        set { SetSeatUser5(value); }
      }
      public Builder SetSeatUser5(global::gt_msg.TableUserStatszjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSeatUser5 = true;
        result.seatUser5_ = value;
        return this;
      }
      public Builder SetSeatUser5(global::gt_msg.TableUserStatszjh.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSeatUser5 = true;
        result.seatUser5_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSeatUser5(global::gt_msg.TableUserStatszjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSeatUser5 &&
            result.seatUser5_ != global::gt_msg.TableUserStatszjh.DefaultInstance) {
            result.seatUser5_ = global::gt_msg.TableUserStatszjh.CreateBuilder(result.seatUser5_).MergeFrom(value).BuildPartial();
        } else {
          result.seatUser5_ = value;
        }
        result.hasSeatUser5 = true;
        return this;
      }
      public Builder ClearSeatUser5() {
        PrepareBuilder();
        result.hasSeatUser5 = false;
        result.seatUser5_ = null;
        return this;
      }
      
      public bool HasSeatUser6 {
       get { return result.hasSeatUser6; }
      }
      public global::gt_msg.TableUserStatszjh SeatUser6 {
        get { return result.SeatUser6; }
        set { SetSeatUser6(value); }
      }
      public Builder SetSeatUser6(global::gt_msg.TableUserStatszjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSeatUser6 = true;
        result.seatUser6_ = value;
        return this;
      }
      public Builder SetSeatUser6(global::gt_msg.TableUserStatszjh.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSeatUser6 = true;
        result.seatUser6_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSeatUser6(global::gt_msg.TableUserStatszjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSeatUser6 &&
            result.seatUser6_ != global::gt_msg.TableUserStatszjh.DefaultInstance) {
            result.seatUser6_ = global::gt_msg.TableUserStatszjh.CreateBuilder(result.seatUser6_).MergeFrom(value).BuildPartial();
        } else {
          result.seatUser6_ = value;
        }
        result.hasSeatUser6 = true;
        return this;
      }
      public Builder ClearSeatUser6() {
        PrepareBuilder();
        result.hasSeatUser6 = false;
        result.seatUser6_ = null;
        return this;
      }
    }
    static TableStatszjh() {
      object.ReferenceEquals(global::gt_msg.GtZjh.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableUserResultzjh : pb::GeneratedMessage<TableUserResultzjh, TableUserResultzjh.Builder> {
    private TableUserResultzjh() { }
    private static readonly TableUserResultzjh defaultInstance = new TableUserResultzjh().MakeReadOnly();
    private static readonly string[] _tableUserResultzjhFieldNames = new string[] { "Cardtype", "HandCards", "LostWin", "NowSeat", "RoundCmp", "RoundEnd", "RoundSee", "Tax", "playState", "user_info" };
    private static readonly uint[] _tableUserResultzjhFieldTags = new uint[] { 40, 34, 50, 16, 64, 72, 56, 80, 24, 10 };
    public static TableUserResultzjh DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableUserResultzjh DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableUserResultzjh ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_TableUserResultzjh__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableUserResultzjh, TableUserResultzjh.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_TableUserResultzjh__FieldAccessorTable; }
    }
    
    public const int UserInfoFieldNumber = 1;
    private bool hasUserInfo;
    private global::gt_msg.User userInfo_;
    public bool HasUserInfo {
      get { return hasUserInfo; }
    }
    public global::gt_msg.User UserInfo {
      get { return userInfo_ ?? global::gt_msg.User.DefaultInstance; }
    }
    
    public const int NowSeatFieldNumber = 2;
    private bool hasNowSeat;
    private int nowSeat_;
    public bool HasNowSeat {
      get { return hasNowSeat; }
    }
    public int NowSeat {
      get { return nowSeat_; }
    }
    
    public const int PlayStateFieldNumber = 3;
    private bool hasPlayState;
    private bool playState_;
    public bool HasPlayState {
      get { return hasPlayState; }
    }
    public bool PlayState {
      get { return playState_; }
    }
    
    public const int HandCardsFieldNumber = 4;
    private int handCardsMemoizedSerializedSize;
    private pbc::PopsicleList<int> handCards_ = new pbc::PopsicleList<int>();
    public scg::IList<int> HandCardsList {
      get { return pbc::Lists.AsReadOnly(handCards_); }
    }
    public int HandCardsCount {
      get { return handCards_.Count; }
    }
    public int GetHandCards(int index) {
      return handCards_[index];
    }
    
    public const int CardtypeFieldNumber = 5;
    private bool hasCardtype;
    private global::gt_msg.CardsTypezjh cardtype_ = global::gt_msg.CardsTypezjh.ThreePrincipleszjh;
    public bool HasCardtype {
      get { return hasCardtype; }
    }
    public global::gt_msg.CardsTypezjh Cardtype {
      get { return cardtype_; }
    }
    
    public const int LostWinFieldNumber = 6;
    private bool hasLostWin;
    private global::gt_msg.ItemChangedEvent lostWin_;
    public bool HasLostWin {
      get { return hasLostWin; }
    }
    public global::gt_msg.ItemChangedEvent LostWin {
      get { return lostWin_ ?? global::gt_msg.ItemChangedEvent.DefaultInstance; }
    }
    
    public const int RoundSeeFieldNumber = 7;
    private bool hasRoundSee;
    private int roundSee_;
    public bool HasRoundSee {
      get { return hasRoundSee; }
    }
    public int RoundSee {
      get { return roundSee_; }
    }
    
    public const int RoundCmpFieldNumber = 8;
    private bool hasRoundCmp;
    private int roundCmp_;
    public bool HasRoundCmp {
      get { return hasRoundCmp; }
    }
    public int RoundCmp {
      get { return roundCmp_; }
    }
    
    public const int RoundEndFieldNumber = 9;
    private bool hasRoundEnd;
    private int roundEnd_;
    public bool HasRoundEnd {
      get { return hasRoundEnd; }
    }
    public int RoundEnd {
      get { return roundEnd_; }
    }
    
    public const int TaxFieldNumber = 10;
    private bool hasTax;
    private int tax_;
    public bool HasTax {
      get { return hasTax; }
    }
    public int Tax {
      get { return tax_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserInfo) return false;
        if (!hasNowSeat) return false;
        if (!hasPlayState) return false;
        if (!UserInfo.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tableUserResultzjhFieldNames;
      if (hasUserInfo) {
        output.WriteMessage(1, field_names[9], UserInfo);
      }
      if (hasNowSeat) {
        output.WriteInt32(2, field_names[3], NowSeat);
      }
      if (hasPlayState) {
        output.WriteBool(3, field_names[8], PlayState);
      }
      if (handCards_.Count > 0) {
        output.WritePackedInt32Array(4, field_names[1], handCardsMemoizedSerializedSize, handCards_);
      }
      if (hasCardtype) {
        output.WriteEnum(5, field_names[0], (int) Cardtype, Cardtype);
      }
      if (hasLostWin) {
        output.WriteMessage(6, field_names[2], LostWin);
      }
      if (hasRoundSee) {
        output.WriteInt32(7, field_names[6], RoundSee);
      }
      if (hasRoundCmp) {
        output.WriteInt32(8, field_names[4], RoundCmp);
      }
      if (hasRoundEnd) {
        output.WriteInt32(9, field_names[5], RoundEnd);
      }
      if (hasTax) {
        output.WriteInt32(10, field_names[7], Tax);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserInfo) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, UserInfo);
      }
      if (hasNowSeat) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, NowSeat);
      }
      if (hasPlayState) {
        size += pb::CodedOutputStream.ComputeBoolSize(3, PlayState);
      }
      {
        int dataSize = 0;
        foreach (int element in HandCardsList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        if (handCards_.Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
        }
        handCardsMemoizedSerializedSize = dataSize;
      }
      if (hasCardtype) {
        size += pb::CodedOutputStream.ComputeEnumSize(5, (int) Cardtype);
      }
      if (hasLostWin) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, LostWin);
      }
      if (hasRoundSee) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, RoundSee);
      }
      if (hasRoundCmp) {
        size += pb::CodedOutputStream.ComputeInt32Size(8, RoundCmp);
      }
      if (hasRoundEnd) {
        size += pb::CodedOutputStream.ComputeInt32Size(9, RoundEnd);
      }
      if (hasTax) {
        size += pb::CodedOutputStream.ComputeInt32Size(10, Tax);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TableUserResultzjh ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableUserResultzjh ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableUserResultzjh ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableUserResultzjh ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableUserResultzjh ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableUserResultzjh ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableUserResultzjh ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableUserResultzjh ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableUserResultzjh ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableUserResultzjh ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableUserResultzjh MakeReadOnly() {
      handCards_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableUserResultzjh prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableUserResultzjh, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableUserResultzjh cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableUserResultzjh result;
      
      private TableUserResultzjh PrepareBuilder() {
        if (resultIsReadOnly) {
          TableUserResultzjh original = result;
          result = new TableUserResultzjh();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableUserResultzjh MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.TableUserResultzjh.Descriptor; }
      }
      
      public override TableUserResultzjh DefaultInstanceForType {
        get { return global::gt_msg.TableUserResultzjh.DefaultInstance; }
      }
      
      public override TableUserResultzjh BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableUserResultzjh) {
          return MergeFrom((TableUserResultzjh) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableUserResultzjh other) {
        if (other == global::gt_msg.TableUserResultzjh.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserInfo) {
          MergeUserInfo(other.UserInfo);
        }
        if (other.HasNowSeat) {
          NowSeat = other.NowSeat;
        }
        if (other.HasPlayState) {
          PlayState = other.PlayState;
        }
        if (other.handCards_.Count != 0) {
          result.handCards_.Add(other.handCards_);
        }
        if (other.HasCardtype) {
          Cardtype = other.Cardtype;
        }
        if (other.HasLostWin) {
          MergeLostWin(other.LostWin);
        }
        if (other.HasRoundSee) {
          RoundSee = other.RoundSee;
        }
        if (other.HasRoundCmp) {
          RoundCmp = other.RoundCmp;
        }
        if (other.HasRoundEnd) {
          RoundEnd = other.RoundEnd;
        }
        if (other.HasTax) {
          Tax = other.Tax;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableUserResultzjhFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableUserResultzjhFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::gt_msg.User.Builder subBuilder = global::gt_msg.User.CreateBuilder();
              if (result.hasUserInfo) {
                subBuilder.MergeFrom(UserInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserInfo = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasNowSeat = input.ReadInt32(ref result.nowSeat_);
              break;
            }
            case 24: {
              result.hasPlayState = input.ReadBool(ref result.playState_);
              break;
            }
            case 34:
            case 32: {
              input.ReadInt32Array(tag, field_name, result.handCards_);
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.cardtype_, out unknown)) {
                result.hasCardtype = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
            case 50: {
              global::gt_msg.ItemChangedEvent.Builder subBuilder = global::gt_msg.ItemChangedEvent.CreateBuilder();
              if (result.hasLostWin) {
                subBuilder.MergeFrom(LostWin);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              LostWin = subBuilder.BuildPartial();
              break;
            }
            case 56: {
              result.hasRoundSee = input.ReadInt32(ref result.roundSee_);
              break;
            }
            case 64: {
              result.hasRoundCmp = input.ReadInt32(ref result.roundCmp_);
              break;
            }
            case 72: {
              result.hasRoundEnd = input.ReadInt32(ref result.roundEnd_);
              break;
            }
            case 80: {
              result.hasTax = input.ReadInt32(ref result.tax_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserInfo {
       get { return result.hasUserInfo; }
      }
      public global::gt_msg.User UserInfo {
        get { return result.UserInfo; }
        set { SetUserInfo(value); }
      }
      public Builder SetUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = value;
        return this;
      }
      public Builder SetUserInfo(global::gt_msg.User.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserInfo &&
            result.userInfo_ != global::gt_msg.User.DefaultInstance) {
            result.userInfo_ = global::gt_msg.User.CreateBuilder(result.userInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.userInfo_ = value;
        }
        result.hasUserInfo = true;
        return this;
      }
      public Builder ClearUserInfo() {
        PrepareBuilder();
        result.hasUserInfo = false;
        result.userInfo_ = null;
        return this;
      }
      
      public bool HasNowSeat {
        get { return result.hasNowSeat; }
      }
      public int NowSeat {
        get { return result.NowSeat; }
        set { SetNowSeat(value); }
      }
      public Builder SetNowSeat(int value) {
        PrepareBuilder();
        result.hasNowSeat = true;
        result.nowSeat_ = value;
        return this;
      }
      public Builder ClearNowSeat() {
        PrepareBuilder();
        result.hasNowSeat = false;
        result.nowSeat_ = 0;
        return this;
      }
      
      public bool HasPlayState {
        get { return result.hasPlayState; }
      }
      public bool PlayState {
        get { return result.PlayState; }
        set { SetPlayState(value); }
      }
      public Builder SetPlayState(bool value) {
        PrepareBuilder();
        result.hasPlayState = true;
        result.playState_ = value;
        return this;
      }
      public Builder ClearPlayState() {
        PrepareBuilder();
        result.hasPlayState = false;
        result.playState_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<int> HandCardsList {
        get { return PrepareBuilder().handCards_; }
      }
      public int HandCardsCount {
        get { return result.HandCardsCount; }
      }
      public int GetHandCards(int index) {
        return result.GetHandCards(index);
      }
      public Builder SetHandCards(int index, int value) {
        PrepareBuilder();
        result.handCards_[index] = value;
        return this;
      }
      public Builder AddHandCards(int value) {
        PrepareBuilder();
        result.handCards_.Add(value);
        return this;
      }
      public Builder AddRangeHandCards(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.handCards_.Add(values);
        return this;
      }
      public Builder ClearHandCards() {
        PrepareBuilder();
        result.handCards_.Clear();
        return this;
      }
      
      public bool HasCardtype {
       get { return result.hasCardtype; }
      }
      public global::gt_msg.CardsTypezjh Cardtype {
        get { return result.Cardtype; }
        set { SetCardtype(value); }
      }
      public Builder SetCardtype(global::gt_msg.CardsTypezjh value) {
        PrepareBuilder();
        result.hasCardtype = true;
        result.cardtype_ = value;
        return this;
      }
      public Builder ClearCardtype() {
        PrepareBuilder();
        result.hasCardtype = false;
        result.cardtype_ = global::gt_msg.CardsTypezjh.ThreePrincipleszjh;
        return this;
      }
      
      public bool HasLostWin {
       get { return result.hasLostWin; }
      }
      public global::gt_msg.ItemChangedEvent LostWin {
        get { return result.LostWin; }
        set { SetLostWin(value); }
      }
      public Builder SetLostWin(global::gt_msg.ItemChangedEvent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLostWin = true;
        result.lostWin_ = value;
        return this;
      }
      public Builder SetLostWin(global::gt_msg.ItemChangedEvent.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasLostWin = true;
        result.lostWin_ = builderForValue.Build();
        return this;
      }
      public Builder MergeLostWin(global::gt_msg.ItemChangedEvent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasLostWin &&
            result.lostWin_ != global::gt_msg.ItemChangedEvent.DefaultInstance) {
            result.lostWin_ = global::gt_msg.ItemChangedEvent.CreateBuilder(result.lostWin_).MergeFrom(value).BuildPartial();
        } else {
          result.lostWin_ = value;
        }
        result.hasLostWin = true;
        return this;
      }
      public Builder ClearLostWin() {
        PrepareBuilder();
        result.hasLostWin = false;
        result.lostWin_ = null;
        return this;
      }
      
      public bool HasRoundSee {
        get { return result.hasRoundSee; }
      }
      public int RoundSee {
        get { return result.RoundSee; }
        set { SetRoundSee(value); }
      }
      public Builder SetRoundSee(int value) {
        PrepareBuilder();
        result.hasRoundSee = true;
        result.roundSee_ = value;
        return this;
      }
      public Builder ClearRoundSee() {
        PrepareBuilder();
        result.hasRoundSee = false;
        result.roundSee_ = 0;
        return this;
      }
      
      public bool HasRoundCmp {
        get { return result.hasRoundCmp; }
      }
      public int RoundCmp {
        get { return result.RoundCmp; }
        set { SetRoundCmp(value); }
      }
      public Builder SetRoundCmp(int value) {
        PrepareBuilder();
        result.hasRoundCmp = true;
        result.roundCmp_ = value;
        return this;
      }
      public Builder ClearRoundCmp() {
        PrepareBuilder();
        result.hasRoundCmp = false;
        result.roundCmp_ = 0;
        return this;
      }
      
      public bool HasRoundEnd {
        get { return result.hasRoundEnd; }
      }
      public int RoundEnd {
        get { return result.RoundEnd; }
        set { SetRoundEnd(value); }
      }
      public Builder SetRoundEnd(int value) {
        PrepareBuilder();
        result.hasRoundEnd = true;
        result.roundEnd_ = value;
        return this;
      }
      public Builder ClearRoundEnd() {
        PrepareBuilder();
        result.hasRoundEnd = false;
        result.roundEnd_ = 0;
        return this;
      }
      
      public bool HasTax {
        get { return result.hasTax; }
      }
      public int Tax {
        get { return result.Tax; }
        set { SetTax(value); }
      }
      public Builder SetTax(int value) {
        PrepareBuilder();
        result.hasTax = true;
        result.tax_ = value;
        return this;
      }
      public Builder ClearTax() {
        PrepareBuilder();
        result.hasTax = false;
        result.tax_ = 0;
        return this;
      }
    }
    static TableUserResultzjh() {
      object.ReferenceEquals(global::gt_msg.GtZjh.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RoundEndedEventzjh : pb::GeneratedMessage<RoundEndedEventzjh, RoundEndedEventzjh.Builder> {
    private RoundEndedEventzjh() { }
    private static readonly RoundEndedEventzjh defaultInstance = new RoundEndedEventzjh().MakeReadOnly();
    private static readonly string[] _roundEndedEventzjhFieldNames = new string[] { "MySeat", "NextStartTimeoutSecs", "SeatUser1", "SeatUser2", "SeatUser3", "SeatUser4", "SeatUser5", "SeatUser6", "TableID", "WinSeat" };
    private static readonly uint[] _roundEndedEventzjhFieldTags = new uint[] { 24, 32, 42, 50, 58, 66, 74, 82, 8, 16 };
    public static RoundEndedEventzjh DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RoundEndedEventzjh DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RoundEndedEventzjh ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_RoundEndedEventzjh__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RoundEndedEventzjh, RoundEndedEventzjh.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_RoundEndedEventzjh__FieldAccessorTable; }
    }
    
    public const int TableIDFieldNumber = 1;
    private bool hasTableID;
    private int tableID_;
    public bool HasTableID {
      get { return hasTableID; }
    }
    public int TableID {
      get { return tableID_; }
    }
    
    public const int WinSeatFieldNumber = 2;
    private bool hasWinSeat;
    private int winSeat_;
    public bool HasWinSeat {
      get { return hasWinSeat; }
    }
    public int WinSeat {
      get { return winSeat_; }
    }
    
    public const int MySeatFieldNumber = 3;
    private bool hasMySeat;
    private int mySeat_;
    public bool HasMySeat {
      get { return hasMySeat; }
    }
    public int MySeat {
      get { return mySeat_; }
    }
    
    public const int NextStartTimeoutSecsFieldNumber = 4;
    private bool hasNextStartTimeoutSecs;
    private int nextStartTimeoutSecs_;
    public bool HasNextStartTimeoutSecs {
      get { return hasNextStartTimeoutSecs; }
    }
    public int NextStartTimeoutSecs {
      get { return nextStartTimeoutSecs_; }
    }
    
    public const int SeatUser1FieldNumber = 5;
    private bool hasSeatUser1;
    private global::gt_msg.TableUserResultzjh seatUser1_;
    public bool HasSeatUser1 {
      get { return hasSeatUser1; }
    }
    public global::gt_msg.TableUserResultzjh SeatUser1 {
      get { return seatUser1_ ?? global::gt_msg.TableUserResultzjh.DefaultInstance; }
    }
    
    public const int SeatUser2FieldNumber = 6;
    private bool hasSeatUser2;
    private global::gt_msg.TableUserResultzjh seatUser2_;
    public bool HasSeatUser2 {
      get { return hasSeatUser2; }
    }
    public global::gt_msg.TableUserResultzjh SeatUser2 {
      get { return seatUser2_ ?? global::gt_msg.TableUserResultzjh.DefaultInstance; }
    }
    
    public const int SeatUser3FieldNumber = 7;
    private bool hasSeatUser3;
    private global::gt_msg.TableUserResultzjh seatUser3_;
    public bool HasSeatUser3 {
      get { return hasSeatUser3; }
    }
    public global::gt_msg.TableUserResultzjh SeatUser3 {
      get { return seatUser3_ ?? global::gt_msg.TableUserResultzjh.DefaultInstance; }
    }
    
    public const int SeatUser4FieldNumber = 8;
    private bool hasSeatUser4;
    private global::gt_msg.TableUserResultzjh seatUser4_;
    public bool HasSeatUser4 {
      get { return hasSeatUser4; }
    }
    public global::gt_msg.TableUserResultzjh SeatUser4 {
      get { return seatUser4_ ?? global::gt_msg.TableUserResultzjh.DefaultInstance; }
    }
    
    public const int SeatUser5FieldNumber = 9;
    private bool hasSeatUser5;
    private global::gt_msg.TableUserResultzjh seatUser5_;
    public bool HasSeatUser5 {
      get { return hasSeatUser5; }
    }
    public global::gt_msg.TableUserResultzjh SeatUser5 {
      get { return seatUser5_ ?? global::gt_msg.TableUserResultzjh.DefaultInstance; }
    }
    
    public const int SeatUser6FieldNumber = 10;
    private bool hasSeatUser6;
    private global::gt_msg.TableUserResultzjh seatUser6_;
    public bool HasSeatUser6 {
      get { return hasSeatUser6; }
    }
    public global::gt_msg.TableUserResultzjh SeatUser6 {
      get { return seatUser6_ ?? global::gt_msg.TableUserResultzjh.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableID) return false;
        if (!hasWinSeat) return false;
        if (!hasMySeat) return false;
        if (!hasNextStartTimeoutSecs) return false;
        if (HasSeatUser1) {
          if (!SeatUser1.IsInitialized) return false;
        }
        if (HasSeatUser2) {
          if (!SeatUser2.IsInitialized) return false;
        }
        if (HasSeatUser3) {
          if (!SeatUser3.IsInitialized) return false;
        }
        if (HasSeatUser4) {
          if (!SeatUser4.IsInitialized) return false;
        }
        if (HasSeatUser5) {
          if (!SeatUser5.IsInitialized) return false;
        }
        if (HasSeatUser6) {
          if (!SeatUser6.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _roundEndedEventzjhFieldNames;
      if (hasTableID) {
        output.WriteInt32(1, field_names[8], TableID);
      }
      if (hasWinSeat) {
        output.WriteInt32(2, field_names[9], WinSeat);
      }
      if (hasMySeat) {
        output.WriteInt32(3, field_names[0], MySeat);
      }
      if (hasNextStartTimeoutSecs) {
        output.WriteInt32(4, field_names[1], NextStartTimeoutSecs);
      }
      if (hasSeatUser1) {
        output.WriteMessage(5, field_names[2], SeatUser1);
      }
      if (hasSeatUser2) {
        output.WriteMessage(6, field_names[3], SeatUser2);
      }
      if (hasSeatUser3) {
        output.WriteMessage(7, field_names[4], SeatUser3);
      }
      if (hasSeatUser4) {
        output.WriteMessage(8, field_names[5], SeatUser4);
      }
      if (hasSeatUser5) {
        output.WriteMessage(9, field_names[6], SeatUser5);
      }
      if (hasSeatUser6) {
        output.WriteMessage(10, field_names[7], SeatUser6);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableID) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, TableID);
      }
      if (hasWinSeat) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, WinSeat);
      }
      if (hasMySeat) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, MySeat);
      }
      if (hasNextStartTimeoutSecs) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, NextStartTimeoutSecs);
      }
      if (hasSeatUser1) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, SeatUser1);
      }
      if (hasSeatUser2) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, SeatUser2);
      }
      if (hasSeatUser3) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, SeatUser3);
      }
      if (hasSeatUser4) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, SeatUser4);
      }
      if (hasSeatUser5) {
        size += pb::CodedOutputStream.ComputeMessageSize(9, SeatUser5);
      }
      if (hasSeatUser6) {
        size += pb::CodedOutputStream.ComputeMessageSize(10, SeatUser6);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RoundEndedEventzjh ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RoundEndedEventzjh ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RoundEndedEventzjh ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RoundEndedEventzjh ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RoundEndedEventzjh ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RoundEndedEventzjh ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RoundEndedEventzjh ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RoundEndedEventzjh ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RoundEndedEventzjh ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RoundEndedEventzjh ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RoundEndedEventzjh MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RoundEndedEventzjh prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RoundEndedEventzjh, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RoundEndedEventzjh cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RoundEndedEventzjh result;
      
      private RoundEndedEventzjh PrepareBuilder() {
        if (resultIsReadOnly) {
          RoundEndedEventzjh original = result;
          result = new RoundEndedEventzjh();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RoundEndedEventzjh MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.RoundEndedEventzjh.Descriptor; }
      }
      
      public override RoundEndedEventzjh DefaultInstanceForType {
        get { return global::gt_msg.RoundEndedEventzjh.DefaultInstance; }
      }
      
      public override RoundEndedEventzjh BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RoundEndedEventzjh) {
          return MergeFrom((RoundEndedEventzjh) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RoundEndedEventzjh other) {
        if (other == global::gt_msg.RoundEndedEventzjh.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableID) {
          TableID = other.TableID;
        }
        if (other.HasWinSeat) {
          WinSeat = other.WinSeat;
        }
        if (other.HasMySeat) {
          MySeat = other.MySeat;
        }
        if (other.HasNextStartTimeoutSecs) {
          NextStartTimeoutSecs = other.NextStartTimeoutSecs;
        }
        if (other.HasSeatUser1) {
          MergeSeatUser1(other.SeatUser1);
        }
        if (other.HasSeatUser2) {
          MergeSeatUser2(other.SeatUser2);
        }
        if (other.HasSeatUser3) {
          MergeSeatUser3(other.SeatUser3);
        }
        if (other.HasSeatUser4) {
          MergeSeatUser4(other.SeatUser4);
        }
        if (other.HasSeatUser5) {
          MergeSeatUser5(other.SeatUser5);
        }
        if (other.HasSeatUser6) {
          MergeSeatUser6(other.SeatUser6);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_roundEndedEventzjhFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _roundEndedEventzjhFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTableID = input.ReadInt32(ref result.tableID_);
              break;
            }
            case 16: {
              result.hasWinSeat = input.ReadInt32(ref result.winSeat_);
              break;
            }
            case 24: {
              result.hasMySeat = input.ReadInt32(ref result.mySeat_);
              break;
            }
            case 32: {
              result.hasNextStartTimeoutSecs = input.ReadInt32(ref result.nextStartTimeoutSecs_);
              break;
            }
            case 42: {
              global::gt_msg.TableUserResultzjh.Builder subBuilder = global::gt_msg.TableUserResultzjh.CreateBuilder();
              if (result.hasSeatUser1) {
                subBuilder.MergeFrom(SeatUser1);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SeatUser1 = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::gt_msg.TableUserResultzjh.Builder subBuilder = global::gt_msg.TableUserResultzjh.CreateBuilder();
              if (result.hasSeatUser2) {
                subBuilder.MergeFrom(SeatUser2);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SeatUser2 = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::gt_msg.TableUserResultzjh.Builder subBuilder = global::gt_msg.TableUserResultzjh.CreateBuilder();
              if (result.hasSeatUser3) {
                subBuilder.MergeFrom(SeatUser3);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SeatUser3 = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              global::gt_msg.TableUserResultzjh.Builder subBuilder = global::gt_msg.TableUserResultzjh.CreateBuilder();
              if (result.hasSeatUser4) {
                subBuilder.MergeFrom(SeatUser4);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SeatUser4 = subBuilder.BuildPartial();
              break;
            }
            case 74: {
              global::gt_msg.TableUserResultzjh.Builder subBuilder = global::gt_msg.TableUserResultzjh.CreateBuilder();
              if (result.hasSeatUser5) {
                subBuilder.MergeFrom(SeatUser5);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SeatUser5 = subBuilder.BuildPartial();
              break;
            }
            case 82: {
              global::gt_msg.TableUserResultzjh.Builder subBuilder = global::gt_msg.TableUserResultzjh.CreateBuilder();
              if (result.hasSeatUser6) {
                subBuilder.MergeFrom(SeatUser6);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SeatUser6 = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableID {
        get { return result.hasTableID; }
      }
      public int TableID {
        get { return result.TableID; }
        set { SetTableID(value); }
      }
      public Builder SetTableID(int value) {
        PrepareBuilder();
        result.hasTableID = true;
        result.tableID_ = value;
        return this;
      }
      public Builder ClearTableID() {
        PrepareBuilder();
        result.hasTableID = false;
        result.tableID_ = 0;
        return this;
      }
      
      public bool HasWinSeat {
        get { return result.hasWinSeat; }
      }
      public int WinSeat {
        get { return result.WinSeat; }
        set { SetWinSeat(value); }
      }
      public Builder SetWinSeat(int value) {
        PrepareBuilder();
        result.hasWinSeat = true;
        result.winSeat_ = value;
        return this;
      }
      public Builder ClearWinSeat() {
        PrepareBuilder();
        result.hasWinSeat = false;
        result.winSeat_ = 0;
        return this;
      }
      
      public bool HasMySeat {
        get { return result.hasMySeat; }
      }
      public int MySeat {
        get { return result.MySeat; }
        set { SetMySeat(value); }
      }
      public Builder SetMySeat(int value) {
        PrepareBuilder();
        result.hasMySeat = true;
        result.mySeat_ = value;
        return this;
      }
      public Builder ClearMySeat() {
        PrepareBuilder();
        result.hasMySeat = false;
        result.mySeat_ = 0;
        return this;
      }
      
      public bool HasNextStartTimeoutSecs {
        get { return result.hasNextStartTimeoutSecs; }
      }
      public int NextStartTimeoutSecs {
        get { return result.NextStartTimeoutSecs; }
        set { SetNextStartTimeoutSecs(value); }
      }
      public Builder SetNextStartTimeoutSecs(int value) {
        PrepareBuilder();
        result.hasNextStartTimeoutSecs = true;
        result.nextStartTimeoutSecs_ = value;
        return this;
      }
      public Builder ClearNextStartTimeoutSecs() {
        PrepareBuilder();
        result.hasNextStartTimeoutSecs = false;
        result.nextStartTimeoutSecs_ = 0;
        return this;
      }
      
      public bool HasSeatUser1 {
       get { return result.hasSeatUser1; }
      }
      public global::gt_msg.TableUserResultzjh SeatUser1 {
        get { return result.SeatUser1; }
        set { SetSeatUser1(value); }
      }
      public Builder SetSeatUser1(global::gt_msg.TableUserResultzjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSeatUser1 = true;
        result.seatUser1_ = value;
        return this;
      }
      public Builder SetSeatUser1(global::gt_msg.TableUserResultzjh.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSeatUser1 = true;
        result.seatUser1_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSeatUser1(global::gt_msg.TableUserResultzjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSeatUser1 &&
            result.seatUser1_ != global::gt_msg.TableUserResultzjh.DefaultInstance) {
            result.seatUser1_ = global::gt_msg.TableUserResultzjh.CreateBuilder(result.seatUser1_).MergeFrom(value).BuildPartial();
        } else {
          result.seatUser1_ = value;
        }
        result.hasSeatUser1 = true;
        return this;
      }
      public Builder ClearSeatUser1() {
        PrepareBuilder();
        result.hasSeatUser1 = false;
        result.seatUser1_ = null;
        return this;
      }
      
      public bool HasSeatUser2 {
       get { return result.hasSeatUser2; }
      }
      public global::gt_msg.TableUserResultzjh SeatUser2 {
        get { return result.SeatUser2; }
        set { SetSeatUser2(value); }
      }
      public Builder SetSeatUser2(global::gt_msg.TableUserResultzjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSeatUser2 = true;
        result.seatUser2_ = value;
        return this;
      }
      public Builder SetSeatUser2(global::gt_msg.TableUserResultzjh.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSeatUser2 = true;
        result.seatUser2_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSeatUser2(global::gt_msg.TableUserResultzjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSeatUser2 &&
            result.seatUser2_ != global::gt_msg.TableUserResultzjh.DefaultInstance) {
            result.seatUser2_ = global::gt_msg.TableUserResultzjh.CreateBuilder(result.seatUser2_).MergeFrom(value).BuildPartial();
        } else {
          result.seatUser2_ = value;
        }
        result.hasSeatUser2 = true;
        return this;
      }
      public Builder ClearSeatUser2() {
        PrepareBuilder();
        result.hasSeatUser2 = false;
        result.seatUser2_ = null;
        return this;
      }
      
      public bool HasSeatUser3 {
       get { return result.hasSeatUser3; }
      }
      public global::gt_msg.TableUserResultzjh SeatUser3 {
        get { return result.SeatUser3; }
        set { SetSeatUser3(value); }
      }
      public Builder SetSeatUser3(global::gt_msg.TableUserResultzjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSeatUser3 = true;
        result.seatUser3_ = value;
        return this;
      }
      public Builder SetSeatUser3(global::gt_msg.TableUserResultzjh.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSeatUser3 = true;
        result.seatUser3_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSeatUser3(global::gt_msg.TableUserResultzjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSeatUser3 &&
            result.seatUser3_ != global::gt_msg.TableUserResultzjh.DefaultInstance) {
            result.seatUser3_ = global::gt_msg.TableUserResultzjh.CreateBuilder(result.seatUser3_).MergeFrom(value).BuildPartial();
        } else {
          result.seatUser3_ = value;
        }
        result.hasSeatUser3 = true;
        return this;
      }
      public Builder ClearSeatUser3() {
        PrepareBuilder();
        result.hasSeatUser3 = false;
        result.seatUser3_ = null;
        return this;
      }
      
      public bool HasSeatUser4 {
       get { return result.hasSeatUser4; }
      }
      public global::gt_msg.TableUserResultzjh SeatUser4 {
        get { return result.SeatUser4; }
        set { SetSeatUser4(value); }
      }
      public Builder SetSeatUser4(global::gt_msg.TableUserResultzjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSeatUser4 = true;
        result.seatUser4_ = value;
        return this;
      }
      public Builder SetSeatUser4(global::gt_msg.TableUserResultzjh.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSeatUser4 = true;
        result.seatUser4_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSeatUser4(global::gt_msg.TableUserResultzjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSeatUser4 &&
            result.seatUser4_ != global::gt_msg.TableUserResultzjh.DefaultInstance) {
            result.seatUser4_ = global::gt_msg.TableUserResultzjh.CreateBuilder(result.seatUser4_).MergeFrom(value).BuildPartial();
        } else {
          result.seatUser4_ = value;
        }
        result.hasSeatUser4 = true;
        return this;
      }
      public Builder ClearSeatUser4() {
        PrepareBuilder();
        result.hasSeatUser4 = false;
        result.seatUser4_ = null;
        return this;
      }
      
      public bool HasSeatUser5 {
       get { return result.hasSeatUser5; }
      }
      public global::gt_msg.TableUserResultzjh SeatUser5 {
        get { return result.SeatUser5; }
        set { SetSeatUser5(value); }
      }
      public Builder SetSeatUser5(global::gt_msg.TableUserResultzjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSeatUser5 = true;
        result.seatUser5_ = value;
        return this;
      }
      public Builder SetSeatUser5(global::gt_msg.TableUserResultzjh.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSeatUser5 = true;
        result.seatUser5_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSeatUser5(global::gt_msg.TableUserResultzjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSeatUser5 &&
            result.seatUser5_ != global::gt_msg.TableUserResultzjh.DefaultInstance) {
            result.seatUser5_ = global::gt_msg.TableUserResultzjh.CreateBuilder(result.seatUser5_).MergeFrom(value).BuildPartial();
        } else {
          result.seatUser5_ = value;
        }
        result.hasSeatUser5 = true;
        return this;
      }
      public Builder ClearSeatUser5() {
        PrepareBuilder();
        result.hasSeatUser5 = false;
        result.seatUser5_ = null;
        return this;
      }
      
      public bool HasSeatUser6 {
       get { return result.hasSeatUser6; }
      }
      public global::gt_msg.TableUserResultzjh SeatUser6 {
        get { return result.SeatUser6; }
        set { SetSeatUser6(value); }
      }
      public Builder SetSeatUser6(global::gt_msg.TableUserResultzjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSeatUser6 = true;
        result.seatUser6_ = value;
        return this;
      }
      public Builder SetSeatUser6(global::gt_msg.TableUserResultzjh.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSeatUser6 = true;
        result.seatUser6_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSeatUser6(global::gt_msg.TableUserResultzjh value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSeatUser6 &&
            result.seatUser6_ != global::gt_msg.TableUserResultzjh.DefaultInstance) {
            result.seatUser6_ = global::gt_msg.TableUserResultzjh.CreateBuilder(result.seatUser6_).MergeFrom(value).BuildPartial();
        } else {
          result.seatUser6_ = value;
        }
        result.hasSeatUser6 = true;
        return this;
      }
      public Builder ClearSeatUser6() {
        PrepareBuilder();
        result.hasSeatUser6 = false;
        result.seatUser6_ = null;
        return this;
      }
    }
    static RoundEndedEventzjh() {
      object.ReferenceEquals(global::gt_msg.GtZjh.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ForceExitTableRequestzjh : pb::GeneratedMessage<ForceExitTableRequestzjh, ForceExitTableRequestzjh.Builder> {
    private ForceExitTableRequestzjh() { }
    private static readonly ForceExitTableRequestzjh defaultInstance = new ForceExitTableRequestzjh().MakeReadOnly();
    private static readonly string[] _forceExitTableRequestzjhFieldNames = new string[] {  };
    private static readonly uint[] _forceExitTableRequestzjhFieldTags = new uint[] {  };
    public static ForceExitTableRequestzjh DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ForceExitTableRequestzjh DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ForceExitTableRequestzjh ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_ForceExitTableRequestzjh__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ForceExitTableRequestzjh, ForceExitTableRequestzjh.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_ForceExitTableRequestzjh__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _forceExitTableRequestzjhFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ForceExitTableRequestzjh ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ForceExitTableRequestzjh ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableRequestzjh ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ForceExitTableRequestzjh ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableRequestzjh ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ForceExitTableRequestzjh ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableRequestzjh ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ForceExitTableRequestzjh ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ForceExitTableRequestzjh ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ForceExitTableRequestzjh ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ForceExitTableRequestzjh MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ForceExitTableRequestzjh prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ForceExitTableRequestzjh, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ForceExitTableRequestzjh cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ForceExitTableRequestzjh result;
      
      private ForceExitTableRequestzjh PrepareBuilder() {
        if (resultIsReadOnly) {
          ForceExitTableRequestzjh original = result;
          result = new ForceExitTableRequestzjh();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ForceExitTableRequestzjh MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.ForceExitTableRequestzjh.Descriptor; }
      }
      
      public override ForceExitTableRequestzjh DefaultInstanceForType {
        get { return global::gt_msg.ForceExitTableRequestzjh.DefaultInstance; }
      }
      
      public override ForceExitTableRequestzjh BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ForceExitTableRequestzjh) {
          return MergeFrom((ForceExitTableRequestzjh) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ForceExitTableRequestzjh other) {
        if (other == global::gt_msg.ForceExitTableRequestzjh.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_forceExitTableRequestzjhFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _forceExitTableRequestzjhFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static ForceExitTableRequestzjh() {
      object.ReferenceEquals(global::gt_msg.GtZjh.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ForceExitTableResponsezjh : pb::GeneratedMessage<ForceExitTableResponsezjh, ForceExitTableResponsezjh.Builder> {
    private ForceExitTableResponsezjh() { }
    private static readonly ForceExitTableResponsezjh defaultInstance = new ForceExitTableResponsezjh().MakeReadOnly();
    private static readonly string[] _forceExitTableResponsezjhFieldNames = new string[] { "code" };
    private static readonly uint[] _forceExitTableResponsezjhFieldTags = new uint[] { 8 };
    public static ForceExitTableResponsezjh DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ForceExitTableResponsezjh DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ForceExitTableResponsezjh ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_ForceExitTableResponsezjh__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ForceExitTableResponsezjh, ForceExitTableResponsezjh.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_ForceExitTableResponsezjh__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Code {
        Normal = 0,
        GiveUp = 1,
        NoEnoughMoney = 2,
        ChangeTable = 3,
        PlayingNoExit = 4,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.ForceExitTableResponsezjh.Types.Code code_ = global::gt_msg.ForceExitTableResponsezjh.Types.Code.Normal;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.ForceExitTableResponsezjh.Types.Code Code {
      get { return code_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _forceExitTableResponsezjhFieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[0], (int) Code, Code);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ForceExitTableResponsezjh ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ForceExitTableResponsezjh ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableResponsezjh ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ForceExitTableResponsezjh ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableResponsezjh ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ForceExitTableResponsezjh ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableResponsezjh ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ForceExitTableResponsezjh ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ForceExitTableResponsezjh ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ForceExitTableResponsezjh ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ForceExitTableResponsezjh MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ForceExitTableResponsezjh prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ForceExitTableResponsezjh, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ForceExitTableResponsezjh cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ForceExitTableResponsezjh result;
      
      private ForceExitTableResponsezjh PrepareBuilder() {
        if (resultIsReadOnly) {
          ForceExitTableResponsezjh original = result;
          result = new ForceExitTableResponsezjh();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ForceExitTableResponsezjh MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.ForceExitTableResponsezjh.Descriptor; }
      }
      
      public override ForceExitTableResponsezjh DefaultInstanceForType {
        get { return global::gt_msg.ForceExitTableResponsezjh.DefaultInstance; }
      }
      
      public override ForceExitTableResponsezjh BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ForceExitTableResponsezjh) {
          return MergeFrom((ForceExitTableResponsezjh) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ForceExitTableResponsezjh other) {
        if (other == global::gt_msg.ForceExitTableResponsezjh.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_forceExitTableResponsezjhFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _forceExitTableResponsezjhFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.ForceExitTableResponsezjh.Types.Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.ForceExitTableResponsezjh.Types.Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.ForceExitTableResponsezjh.Types.Code.Normal;
        return this;
      }
    }
    static ForceExitTableResponsezjh() {
      object.ReferenceEquals(global::gt_msg.GtZjh.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GameLifeRequestzjh : pb::GeneratedMessage<GameLifeRequestzjh, GameLifeRequestzjh.Builder> {
    private GameLifeRequestzjh() { }
    private static readonly GameLifeRequestzjh defaultInstance = new GameLifeRequestzjh().MakeReadOnly();
    private static readonly string[] _gameLifeRequestzjhFieldNames = new string[] { "uid" };
    private static readonly uint[] _gameLifeRequestzjhFieldTags = new uint[] { 10 };
    public static GameLifeRequestzjh DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameLifeRequestzjh DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameLifeRequestzjh ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_GameLifeRequestzjh__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameLifeRequestzjh, GameLifeRequestzjh.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_GameLifeRequestzjh__FieldAccessorTable; }
    }
    
    public const int UidFieldNumber = 1;
    private bool hasUid;
    private string uid_ = "";
    public bool HasUid {
      get { return hasUid; }
    }
    public string Uid {
      get { return uid_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUid) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _gameLifeRequestzjhFieldNames;
      if (hasUid) {
        output.WriteString(1, field_names[0], Uid);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Uid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GameLifeRequestzjh ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameLifeRequestzjh ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameLifeRequestzjh ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameLifeRequestzjh ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameLifeRequestzjh ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameLifeRequestzjh ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameLifeRequestzjh ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameLifeRequestzjh ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameLifeRequestzjh ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameLifeRequestzjh ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameLifeRequestzjh MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameLifeRequestzjh prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GameLifeRequestzjh, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameLifeRequestzjh cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameLifeRequestzjh result;
      
      private GameLifeRequestzjh PrepareBuilder() {
        if (resultIsReadOnly) {
          GameLifeRequestzjh original = result;
          result = new GameLifeRequestzjh();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameLifeRequestzjh MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.GameLifeRequestzjh.Descriptor; }
      }
      
      public override GameLifeRequestzjh DefaultInstanceForType {
        get { return global::gt_msg.GameLifeRequestzjh.DefaultInstance; }
      }
      
      public override GameLifeRequestzjh BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameLifeRequestzjh) {
          return MergeFrom((GameLifeRequestzjh) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameLifeRequestzjh other) {
        if (other == global::gt_msg.GameLifeRequestzjh.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUid) {
          Uid = other.Uid;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameLifeRequestzjhFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameLifeRequestzjhFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUid = input.ReadString(ref result.uid_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUid {
        get { return result.hasUid; }
      }
      public string Uid {
        get { return result.Uid; }
        set { SetUid(value); }
      }
      public Builder SetUid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder ClearUid() {
        PrepareBuilder();
        result.hasUid = false;
        result.uid_ = "";
        return this;
      }
    }
    static GameLifeRequestzjh() {
      object.ReferenceEquals(global::gt_msg.GtZjh.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GameLifeResponsezjh : pb::GeneratedMessage<GameLifeResponsezjh, GameLifeResponsezjh.Builder> {
    private GameLifeResponsezjh() { }
    private static readonly GameLifeResponsezjh defaultInstance = new GameLifeResponsezjh().MakeReadOnly();
    private static readonly string[] _gameLifeResponsezjhFieldNames = new string[] { "code", "continueWin", "gameAllUserNum", "level1WinChips", "level1WinChipsRank", "level2WinChips", "level2WinChipsRank", "level3WinChips", "level3WinChipsRank", "level4WinChips", "level4WinChipsRank", "level5WinChips", "level5WinChipsRank", "lostTimes", "user_info", "winTimes" };
    private static readonly uint[] _gameLifeResponsezjhFieldTags = new uint[] { 8, 40, 128, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 32, 18, 24 };
    public static GameLifeResponsezjh DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameLifeResponsezjh DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameLifeResponsezjh ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_GameLifeResponsezjh__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameLifeResponsezjh, GameLifeResponsezjh.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_GameLifeResponsezjh__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Code {
        Ok = 0,
        Failed = 1,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.GameLifeResponsezjh.Types.Code code_ = global::gt_msg.GameLifeResponsezjh.Types.Code.Ok;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.GameLifeResponsezjh.Types.Code Code {
      get { return code_; }
    }
    
    public const int UserInfoFieldNumber = 2;
    private bool hasUserInfo;
    private global::gt_msg.User userInfo_;
    public bool HasUserInfo {
      get { return hasUserInfo; }
    }
    public global::gt_msg.User UserInfo {
      get { return userInfo_ ?? global::gt_msg.User.DefaultInstance; }
    }
    
    public const int WinTimesFieldNumber = 3;
    private bool hasWinTimes;
    private int winTimes_;
    public bool HasWinTimes {
      get { return hasWinTimes; }
    }
    public int WinTimes {
      get { return winTimes_; }
    }
    
    public const int LostTimesFieldNumber = 4;
    private bool hasLostTimes;
    private int lostTimes_;
    public bool HasLostTimes {
      get { return hasLostTimes; }
    }
    public int LostTimes {
      get { return lostTimes_; }
    }
    
    public const int ContinueWinFieldNumber = 5;
    private bool hasContinueWin;
    private int continueWin_;
    public bool HasContinueWin {
      get { return hasContinueWin; }
    }
    public int ContinueWin {
      get { return continueWin_; }
    }
    
    public const int Level1WinChipsFieldNumber = 6;
    private bool hasLevel1WinChips;
    private long level1WinChips_;
    public bool HasLevel1WinChips {
      get { return hasLevel1WinChips; }
    }
    public long Level1WinChips {
      get { return level1WinChips_; }
    }
    
    public const int Level1WinChipsRankFieldNumber = 7;
    private bool hasLevel1WinChipsRank;
    private int level1WinChipsRank_;
    public bool HasLevel1WinChipsRank {
      get { return hasLevel1WinChipsRank; }
    }
    public int Level1WinChipsRank {
      get { return level1WinChipsRank_; }
    }
    
    public const int Level2WinChipsFieldNumber = 8;
    private bool hasLevel2WinChips;
    private long level2WinChips_;
    public bool HasLevel2WinChips {
      get { return hasLevel2WinChips; }
    }
    public long Level2WinChips {
      get { return level2WinChips_; }
    }
    
    public const int Level2WinChipsRankFieldNumber = 9;
    private bool hasLevel2WinChipsRank;
    private int level2WinChipsRank_;
    public bool HasLevel2WinChipsRank {
      get { return hasLevel2WinChipsRank; }
    }
    public int Level2WinChipsRank {
      get { return level2WinChipsRank_; }
    }
    
    public const int Level3WinChipsFieldNumber = 10;
    private bool hasLevel3WinChips;
    private long level3WinChips_;
    public bool HasLevel3WinChips {
      get { return hasLevel3WinChips; }
    }
    public long Level3WinChips {
      get { return level3WinChips_; }
    }
    
    public const int Level3WinChipsRankFieldNumber = 11;
    private bool hasLevel3WinChipsRank;
    private int level3WinChipsRank_;
    public bool HasLevel3WinChipsRank {
      get { return hasLevel3WinChipsRank; }
    }
    public int Level3WinChipsRank {
      get { return level3WinChipsRank_; }
    }
    
    public const int Level4WinChipsFieldNumber = 12;
    private bool hasLevel4WinChips;
    private long level4WinChips_;
    public bool HasLevel4WinChips {
      get { return hasLevel4WinChips; }
    }
    public long Level4WinChips {
      get { return level4WinChips_; }
    }
    
    public const int Level4WinChipsRankFieldNumber = 13;
    private bool hasLevel4WinChipsRank;
    private int level4WinChipsRank_;
    public bool HasLevel4WinChipsRank {
      get { return hasLevel4WinChipsRank; }
    }
    public int Level4WinChipsRank {
      get { return level4WinChipsRank_; }
    }
    
    public const int Level5WinChipsFieldNumber = 14;
    private bool hasLevel5WinChips;
    private long level5WinChips_;
    public bool HasLevel5WinChips {
      get { return hasLevel5WinChips; }
    }
    public long Level5WinChips {
      get { return level5WinChips_; }
    }
    
    public const int Level5WinChipsRankFieldNumber = 15;
    private bool hasLevel5WinChipsRank;
    private int level5WinChipsRank_;
    public bool HasLevel5WinChipsRank {
      get { return hasLevel5WinChipsRank; }
    }
    public int Level5WinChipsRank {
      get { return level5WinChipsRank_; }
    }
    
    public const int GameAllUserNumFieldNumber = 16;
    private bool hasGameAllUserNum;
    private int gameAllUserNum_;
    public bool HasGameAllUserNum {
      get { return hasGameAllUserNum; }
    }
    public int GameAllUserNum {
      get { return gameAllUserNum_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        if (!hasUserInfo) return false;
        if (!UserInfo.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _gameLifeResponsezjhFieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[0], (int) Code, Code);
      }
      if (hasUserInfo) {
        output.WriteMessage(2, field_names[14], UserInfo);
      }
      if (hasWinTimes) {
        output.WriteInt32(3, field_names[15], WinTimes);
      }
      if (hasLostTimes) {
        output.WriteInt32(4, field_names[13], LostTimes);
      }
      if (hasContinueWin) {
        output.WriteInt32(5, field_names[1], ContinueWin);
      }
      if (hasLevel1WinChips) {
        output.WriteInt64(6, field_names[3], Level1WinChips);
      }
      if (hasLevel1WinChipsRank) {
        output.WriteInt32(7, field_names[4], Level1WinChipsRank);
      }
      if (hasLevel2WinChips) {
        output.WriteInt64(8, field_names[5], Level2WinChips);
      }
      if (hasLevel2WinChipsRank) {
        output.WriteInt32(9, field_names[6], Level2WinChipsRank);
      }
      if (hasLevel3WinChips) {
        output.WriteInt64(10, field_names[7], Level3WinChips);
      }
      if (hasLevel3WinChipsRank) {
        output.WriteInt32(11, field_names[8], Level3WinChipsRank);
      }
      if (hasLevel4WinChips) {
        output.WriteInt64(12, field_names[9], Level4WinChips);
      }
      if (hasLevel4WinChipsRank) {
        output.WriteInt32(13, field_names[10], Level4WinChipsRank);
      }
      if (hasLevel5WinChips) {
        output.WriteInt64(14, field_names[11], Level5WinChips);
      }
      if (hasLevel5WinChipsRank) {
        output.WriteInt32(15, field_names[12], Level5WinChipsRank);
      }
      if (hasGameAllUserNum) {
        output.WriteInt32(16, field_names[2], GameAllUserNum);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasUserInfo) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, UserInfo);
      }
      if (hasWinTimes) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, WinTimes);
      }
      if (hasLostTimes) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, LostTimes);
      }
      if (hasContinueWin) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, ContinueWin);
      }
      if (hasLevel1WinChips) {
        size += pb::CodedOutputStream.ComputeInt64Size(6, Level1WinChips);
      }
      if (hasLevel1WinChipsRank) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, Level1WinChipsRank);
      }
      if (hasLevel2WinChips) {
        size += pb::CodedOutputStream.ComputeInt64Size(8, Level2WinChips);
      }
      if (hasLevel2WinChipsRank) {
        size += pb::CodedOutputStream.ComputeInt32Size(9, Level2WinChipsRank);
      }
      if (hasLevel3WinChips) {
        size += pb::CodedOutputStream.ComputeInt64Size(10, Level3WinChips);
      }
      if (hasLevel3WinChipsRank) {
        size += pb::CodedOutputStream.ComputeInt32Size(11, Level3WinChipsRank);
      }
      if (hasLevel4WinChips) {
        size += pb::CodedOutputStream.ComputeInt64Size(12, Level4WinChips);
      }
      if (hasLevel4WinChipsRank) {
        size += pb::CodedOutputStream.ComputeInt32Size(13, Level4WinChipsRank);
      }
      if (hasLevel5WinChips) {
        size += pb::CodedOutputStream.ComputeInt64Size(14, Level5WinChips);
      }
      if (hasLevel5WinChipsRank) {
        size += pb::CodedOutputStream.ComputeInt32Size(15, Level5WinChipsRank);
      }
      if (hasGameAllUserNum) {
        size += pb::CodedOutputStream.ComputeInt32Size(16, GameAllUserNum);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GameLifeResponsezjh ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameLifeResponsezjh ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameLifeResponsezjh ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameLifeResponsezjh ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameLifeResponsezjh ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameLifeResponsezjh ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameLifeResponsezjh ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameLifeResponsezjh ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameLifeResponsezjh ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameLifeResponsezjh ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameLifeResponsezjh MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameLifeResponsezjh prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GameLifeResponsezjh, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameLifeResponsezjh cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameLifeResponsezjh result;
      
      private GameLifeResponsezjh PrepareBuilder() {
        if (resultIsReadOnly) {
          GameLifeResponsezjh original = result;
          result = new GameLifeResponsezjh();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameLifeResponsezjh MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.GameLifeResponsezjh.Descriptor; }
      }
      
      public override GameLifeResponsezjh DefaultInstanceForType {
        get { return global::gt_msg.GameLifeResponsezjh.DefaultInstance; }
      }
      
      public override GameLifeResponsezjh BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameLifeResponsezjh) {
          return MergeFrom((GameLifeResponsezjh) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameLifeResponsezjh other) {
        if (other == global::gt_msg.GameLifeResponsezjh.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasUserInfo) {
          MergeUserInfo(other.UserInfo);
        }
        if (other.HasWinTimes) {
          WinTimes = other.WinTimes;
        }
        if (other.HasLostTimes) {
          LostTimes = other.LostTimes;
        }
        if (other.HasContinueWin) {
          ContinueWin = other.ContinueWin;
        }
        if (other.HasLevel1WinChips) {
          Level1WinChips = other.Level1WinChips;
        }
        if (other.HasLevel1WinChipsRank) {
          Level1WinChipsRank = other.Level1WinChipsRank;
        }
        if (other.HasLevel2WinChips) {
          Level2WinChips = other.Level2WinChips;
        }
        if (other.HasLevel2WinChipsRank) {
          Level2WinChipsRank = other.Level2WinChipsRank;
        }
        if (other.HasLevel3WinChips) {
          Level3WinChips = other.Level3WinChips;
        }
        if (other.HasLevel3WinChipsRank) {
          Level3WinChipsRank = other.Level3WinChipsRank;
        }
        if (other.HasLevel4WinChips) {
          Level4WinChips = other.Level4WinChips;
        }
        if (other.HasLevel4WinChipsRank) {
          Level4WinChipsRank = other.Level4WinChipsRank;
        }
        if (other.HasLevel5WinChips) {
          Level5WinChips = other.Level5WinChips;
        }
        if (other.HasLevel5WinChipsRank) {
          Level5WinChipsRank = other.Level5WinChipsRank;
        }
        if (other.HasGameAllUserNum) {
          GameAllUserNum = other.GameAllUserNum;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameLifeResponsezjhFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameLifeResponsezjhFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              global::gt_msg.User.Builder subBuilder = global::gt_msg.User.CreateBuilder();
              if (result.hasUserInfo) {
                subBuilder.MergeFrom(UserInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserInfo = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasWinTimes = input.ReadInt32(ref result.winTimes_);
              break;
            }
            case 32: {
              result.hasLostTimes = input.ReadInt32(ref result.lostTimes_);
              break;
            }
            case 40: {
              result.hasContinueWin = input.ReadInt32(ref result.continueWin_);
              break;
            }
            case 48: {
              result.hasLevel1WinChips = input.ReadInt64(ref result.level1WinChips_);
              break;
            }
            case 56: {
              result.hasLevel1WinChipsRank = input.ReadInt32(ref result.level1WinChipsRank_);
              break;
            }
            case 64: {
              result.hasLevel2WinChips = input.ReadInt64(ref result.level2WinChips_);
              break;
            }
            case 72: {
              result.hasLevel2WinChipsRank = input.ReadInt32(ref result.level2WinChipsRank_);
              break;
            }
            case 80: {
              result.hasLevel3WinChips = input.ReadInt64(ref result.level3WinChips_);
              break;
            }
            case 88: {
              result.hasLevel3WinChipsRank = input.ReadInt32(ref result.level3WinChipsRank_);
              break;
            }
            case 96: {
              result.hasLevel4WinChips = input.ReadInt64(ref result.level4WinChips_);
              break;
            }
            case 104: {
              result.hasLevel4WinChipsRank = input.ReadInt32(ref result.level4WinChipsRank_);
              break;
            }
            case 112: {
              result.hasLevel5WinChips = input.ReadInt64(ref result.level5WinChips_);
              break;
            }
            case 120: {
              result.hasLevel5WinChipsRank = input.ReadInt32(ref result.level5WinChipsRank_);
              break;
            }
            case 128: {
              result.hasGameAllUserNum = input.ReadInt32(ref result.gameAllUserNum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.GameLifeResponsezjh.Types.Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.GameLifeResponsezjh.Types.Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.GameLifeResponsezjh.Types.Code.Ok;
        return this;
      }
      
      public bool HasUserInfo {
       get { return result.hasUserInfo; }
      }
      public global::gt_msg.User UserInfo {
        get { return result.UserInfo; }
        set { SetUserInfo(value); }
      }
      public Builder SetUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = value;
        return this;
      }
      public Builder SetUserInfo(global::gt_msg.User.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserInfo &&
            result.userInfo_ != global::gt_msg.User.DefaultInstance) {
            result.userInfo_ = global::gt_msg.User.CreateBuilder(result.userInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.userInfo_ = value;
        }
        result.hasUserInfo = true;
        return this;
      }
      public Builder ClearUserInfo() {
        PrepareBuilder();
        result.hasUserInfo = false;
        result.userInfo_ = null;
        return this;
      }
      
      public bool HasWinTimes {
        get { return result.hasWinTimes; }
      }
      public int WinTimes {
        get { return result.WinTimes; }
        set { SetWinTimes(value); }
      }
      public Builder SetWinTimes(int value) {
        PrepareBuilder();
        result.hasWinTimes = true;
        result.winTimes_ = value;
        return this;
      }
      public Builder ClearWinTimes() {
        PrepareBuilder();
        result.hasWinTimes = false;
        result.winTimes_ = 0;
        return this;
      }
      
      public bool HasLostTimes {
        get { return result.hasLostTimes; }
      }
      public int LostTimes {
        get { return result.LostTimes; }
        set { SetLostTimes(value); }
      }
      public Builder SetLostTimes(int value) {
        PrepareBuilder();
        result.hasLostTimes = true;
        result.lostTimes_ = value;
        return this;
      }
      public Builder ClearLostTimes() {
        PrepareBuilder();
        result.hasLostTimes = false;
        result.lostTimes_ = 0;
        return this;
      }
      
      public bool HasContinueWin {
        get { return result.hasContinueWin; }
      }
      public int ContinueWin {
        get { return result.ContinueWin; }
        set { SetContinueWin(value); }
      }
      public Builder SetContinueWin(int value) {
        PrepareBuilder();
        result.hasContinueWin = true;
        result.continueWin_ = value;
        return this;
      }
      public Builder ClearContinueWin() {
        PrepareBuilder();
        result.hasContinueWin = false;
        result.continueWin_ = 0;
        return this;
      }
      
      public bool HasLevel1WinChips {
        get { return result.hasLevel1WinChips; }
      }
      public long Level1WinChips {
        get { return result.Level1WinChips; }
        set { SetLevel1WinChips(value); }
      }
      public Builder SetLevel1WinChips(long value) {
        PrepareBuilder();
        result.hasLevel1WinChips = true;
        result.level1WinChips_ = value;
        return this;
      }
      public Builder ClearLevel1WinChips() {
        PrepareBuilder();
        result.hasLevel1WinChips = false;
        result.level1WinChips_ = 0L;
        return this;
      }
      
      public bool HasLevel1WinChipsRank {
        get { return result.hasLevel1WinChipsRank; }
      }
      public int Level1WinChipsRank {
        get { return result.Level1WinChipsRank; }
        set { SetLevel1WinChipsRank(value); }
      }
      public Builder SetLevel1WinChipsRank(int value) {
        PrepareBuilder();
        result.hasLevel1WinChipsRank = true;
        result.level1WinChipsRank_ = value;
        return this;
      }
      public Builder ClearLevel1WinChipsRank() {
        PrepareBuilder();
        result.hasLevel1WinChipsRank = false;
        result.level1WinChipsRank_ = 0;
        return this;
      }
      
      public bool HasLevel2WinChips {
        get { return result.hasLevel2WinChips; }
      }
      public long Level2WinChips {
        get { return result.Level2WinChips; }
        set { SetLevel2WinChips(value); }
      }
      public Builder SetLevel2WinChips(long value) {
        PrepareBuilder();
        result.hasLevel2WinChips = true;
        result.level2WinChips_ = value;
        return this;
      }
      public Builder ClearLevel2WinChips() {
        PrepareBuilder();
        result.hasLevel2WinChips = false;
        result.level2WinChips_ = 0L;
        return this;
      }
      
      public bool HasLevel2WinChipsRank {
        get { return result.hasLevel2WinChipsRank; }
      }
      public int Level2WinChipsRank {
        get { return result.Level2WinChipsRank; }
        set { SetLevel2WinChipsRank(value); }
      }
      public Builder SetLevel2WinChipsRank(int value) {
        PrepareBuilder();
        result.hasLevel2WinChipsRank = true;
        result.level2WinChipsRank_ = value;
        return this;
      }
      public Builder ClearLevel2WinChipsRank() {
        PrepareBuilder();
        result.hasLevel2WinChipsRank = false;
        result.level2WinChipsRank_ = 0;
        return this;
      }
      
      public bool HasLevel3WinChips {
        get { return result.hasLevel3WinChips; }
      }
      public long Level3WinChips {
        get { return result.Level3WinChips; }
        set { SetLevel3WinChips(value); }
      }
      public Builder SetLevel3WinChips(long value) {
        PrepareBuilder();
        result.hasLevel3WinChips = true;
        result.level3WinChips_ = value;
        return this;
      }
      public Builder ClearLevel3WinChips() {
        PrepareBuilder();
        result.hasLevel3WinChips = false;
        result.level3WinChips_ = 0L;
        return this;
      }
      
      public bool HasLevel3WinChipsRank {
        get { return result.hasLevel3WinChipsRank; }
      }
      public int Level3WinChipsRank {
        get { return result.Level3WinChipsRank; }
        set { SetLevel3WinChipsRank(value); }
      }
      public Builder SetLevel3WinChipsRank(int value) {
        PrepareBuilder();
        result.hasLevel3WinChipsRank = true;
        result.level3WinChipsRank_ = value;
        return this;
      }
      public Builder ClearLevel3WinChipsRank() {
        PrepareBuilder();
        result.hasLevel3WinChipsRank = false;
        result.level3WinChipsRank_ = 0;
        return this;
      }
      
      public bool HasLevel4WinChips {
        get { return result.hasLevel4WinChips; }
      }
      public long Level4WinChips {
        get { return result.Level4WinChips; }
        set { SetLevel4WinChips(value); }
      }
      public Builder SetLevel4WinChips(long value) {
        PrepareBuilder();
        result.hasLevel4WinChips = true;
        result.level4WinChips_ = value;
        return this;
      }
      public Builder ClearLevel4WinChips() {
        PrepareBuilder();
        result.hasLevel4WinChips = false;
        result.level4WinChips_ = 0L;
        return this;
      }
      
      public bool HasLevel4WinChipsRank {
        get { return result.hasLevel4WinChipsRank; }
      }
      public int Level4WinChipsRank {
        get { return result.Level4WinChipsRank; }
        set { SetLevel4WinChipsRank(value); }
      }
      public Builder SetLevel4WinChipsRank(int value) {
        PrepareBuilder();
        result.hasLevel4WinChipsRank = true;
        result.level4WinChipsRank_ = value;
        return this;
      }
      public Builder ClearLevel4WinChipsRank() {
        PrepareBuilder();
        result.hasLevel4WinChipsRank = false;
        result.level4WinChipsRank_ = 0;
        return this;
      }
      
      public bool HasLevel5WinChips {
        get { return result.hasLevel5WinChips; }
      }
      public long Level5WinChips {
        get { return result.Level5WinChips; }
        set { SetLevel5WinChips(value); }
      }
      public Builder SetLevel5WinChips(long value) {
        PrepareBuilder();
        result.hasLevel5WinChips = true;
        result.level5WinChips_ = value;
        return this;
      }
      public Builder ClearLevel5WinChips() {
        PrepareBuilder();
        result.hasLevel5WinChips = false;
        result.level5WinChips_ = 0L;
        return this;
      }
      
      public bool HasLevel5WinChipsRank {
        get { return result.hasLevel5WinChipsRank; }
      }
      public int Level5WinChipsRank {
        get { return result.Level5WinChipsRank; }
        set { SetLevel5WinChipsRank(value); }
      }
      public Builder SetLevel5WinChipsRank(int value) {
        PrepareBuilder();
        result.hasLevel5WinChipsRank = true;
        result.level5WinChipsRank_ = value;
        return this;
      }
      public Builder ClearLevel5WinChipsRank() {
        PrepareBuilder();
        result.hasLevel5WinChipsRank = false;
        result.level5WinChipsRank_ = 0;
        return this;
      }
      
      public bool HasGameAllUserNum {
        get { return result.hasGameAllUserNum; }
      }
      public int GameAllUserNum {
        get { return result.GameAllUserNum; }
        set { SetGameAllUserNum(value); }
      }
      public Builder SetGameAllUserNum(int value) {
        PrepareBuilder();
        result.hasGameAllUserNum = true;
        result.gameAllUserNum_ = value;
        return this;
      }
      public Builder ClearGameAllUserNum() {
        PrepareBuilder();
        result.hasGameAllUserNum = false;
        result.gameAllUserNum_ = 0;
        return this;
      }
    }
    static GameLifeResponsezjh() {
      object.ReferenceEquals(global::gt_msg.GtZjh.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GameRankListRequestzjh : pb::GeneratedMessage<GameRankListRequestzjh, GameRankListRequestzjh.Builder> {
    private GameRankListRequestzjh() { }
    private static readonly GameRankListRequestzjh defaultInstance = new GameRankListRequestzjh().MakeReadOnly();
    private static readonly string[] _gameRankListRequestzjhFieldNames = new string[] {  };
    private static readonly uint[] _gameRankListRequestzjhFieldTags = new uint[] {  };
    public static GameRankListRequestzjh DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameRankListRequestzjh DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameRankListRequestzjh ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_GameRankListRequestzjh__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameRankListRequestzjh, GameRankListRequestzjh.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_GameRankListRequestzjh__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _gameRankListRequestzjhFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GameRankListRequestzjh ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameRankListRequestzjh ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameRankListRequestzjh ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameRankListRequestzjh ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameRankListRequestzjh ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameRankListRequestzjh ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameRankListRequestzjh ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameRankListRequestzjh ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameRankListRequestzjh ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameRankListRequestzjh ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameRankListRequestzjh MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameRankListRequestzjh prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GameRankListRequestzjh, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameRankListRequestzjh cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameRankListRequestzjh result;
      
      private GameRankListRequestzjh PrepareBuilder() {
        if (resultIsReadOnly) {
          GameRankListRequestzjh original = result;
          result = new GameRankListRequestzjh();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameRankListRequestzjh MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.GameRankListRequestzjh.Descriptor; }
      }
      
      public override GameRankListRequestzjh DefaultInstanceForType {
        get { return global::gt_msg.GameRankListRequestzjh.DefaultInstance; }
      }
      
      public override GameRankListRequestzjh BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameRankListRequestzjh) {
          return MergeFrom((GameRankListRequestzjh) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameRankListRequestzjh other) {
        if (other == global::gt_msg.GameRankListRequestzjh.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameRankListRequestzjhFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameRankListRequestzjhFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static GameRankListRequestzjh() {
      object.ReferenceEquals(global::gt_msg.GtZjh.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GameRankListResponsezjh : pb::GeneratedMessage<GameRankListResponsezjh, GameRankListResponsezjh.Builder> {
    private GameRankListResponsezjh() { }
    private static readonly GameRankListResponsezjh defaultInstance = new GameRankListResponsezjh().MakeReadOnly();
    private static readonly string[] _gameRankListResponsezjhFieldNames = new string[] { "all_chips", "all_times", "code", "day_win_chips", "uid" };
    private static readonly uint[] _gameRankListResponsezjhFieldTags = new uint[] { 42, 34, 8, 26, 18 };
    public static GameRankListResponsezjh DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameRankListResponsezjh DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameRankListResponsezjh ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_GameRankListResponsezjh__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameRankListResponsezjh, GameRankListResponsezjh.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_GameRankListResponsezjh__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Code {
        Ok = 0,
        Failed = 1,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.GameRankListResponsezjh.Types.Code code_ = global::gt_msg.GameRankListResponsezjh.Types.Code.Ok;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.GameRankListResponsezjh.Types.Code Code {
      get { return code_; }
    }
    
    public const int UidFieldNumber = 2;
    private bool hasUid;
    private string uid_ = "";
    public bool HasUid {
      get { return hasUid; }
    }
    public string Uid {
      get { return uid_; }
    }
    
    public const int DayWinChipsFieldNumber = 3;
    private pbc::PopsicleList<string> dayWinChips_ = new pbc::PopsicleList<string>();
    public scg::IList<string> DayWinChipsList {
      get { return pbc::Lists.AsReadOnly(dayWinChips_); }
    }
    public int DayWinChipsCount {
      get { return dayWinChips_.Count; }
    }
    public string GetDayWinChips(int index) {
      return dayWinChips_[index];
    }
    
    public const int AllTimesFieldNumber = 4;
    private pbc::PopsicleList<string> allTimes_ = new pbc::PopsicleList<string>();
    public scg::IList<string> AllTimesList {
      get { return pbc::Lists.AsReadOnly(allTimes_); }
    }
    public int AllTimesCount {
      get { return allTimes_.Count; }
    }
    public string GetAllTimes(int index) {
      return allTimes_[index];
    }
    
    public const int AllChipsFieldNumber = 5;
    private pbc::PopsicleList<string> allChips_ = new pbc::PopsicleList<string>();
    public scg::IList<string> AllChipsList {
      get { return pbc::Lists.AsReadOnly(allChips_); }
    }
    public int AllChipsCount {
      get { return allChips_.Count; }
    }
    public string GetAllChips(int index) {
      return allChips_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        if (!hasUid) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _gameRankListResponsezjhFieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[2], (int) Code, Code);
      }
      if (hasUid) {
        output.WriteString(2, field_names[4], Uid);
      }
      if (dayWinChips_.Count > 0) {
        output.WriteStringArray(3, field_names[3], dayWinChips_);
      }
      if (allTimes_.Count > 0) {
        output.WriteStringArray(4, field_names[1], allTimes_);
      }
      if (allChips_.Count > 0) {
        output.WriteStringArray(5, field_names[0], allChips_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Uid);
      }
      {
        int dataSize = 0;
        foreach (string element in DayWinChipsList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * dayWinChips_.Count;
      }
      {
        int dataSize = 0;
        foreach (string element in AllTimesList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * allTimes_.Count;
      }
      {
        int dataSize = 0;
        foreach (string element in AllChipsList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * allChips_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GameRankListResponsezjh ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameRankListResponsezjh ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameRankListResponsezjh ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameRankListResponsezjh ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameRankListResponsezjh ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameRankListResponsezjh ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameRankListResponsezjh ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameRankListResponsezjh ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameRankListResponsezjh ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameRankListResponsezjh ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameRankListResponsezjh MakeReadOnly() {
      dayWinChips_.MakeReadOnly();
      allTimes_.MakeReadOnly();
      allChips_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameRankListResponsezjh prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GameRankListResponsezjh, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameRankListResponsezjh cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameRankListResponsezjh result;
      
      private GameRankListResponsezjh PrepareBuilder() {
        if (resultIsReadOnly) {
          GameRankListResponsezjh original = result;
          result = new GameRankListResponsezjh();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameRankListResponsezjh MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.GameRankListResponsezjh.Descriptor; }
      }
      
      public override GameRankListResponsezjh DefaultInstanceForType {
        get { return global::gt_msg.GameRankListResponsezjh.DefaultInstance; }
      }
      
      public override GameRankListResponsezjh BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameRankListResponsezjh) {
          return MergeFrom((GameRankListResponsezjh) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameRankListResponsezjh other) {
        if (other == global::gt_msg.GameRankListResponsezjh.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasUid) {
          Uid = other.Uid;
        }
        if (other.dayWinChips_.Count != 0) {
          result.dayWinChips_.Add(other.dayWinChips_);
        }
        if (other.allTimes_.Count != 0) {
          result.allTimes_.Add(other.allTimes_);
        }
        if (other.allChips_.Count != 0) {
          result.allChips_.Add(other.allChips_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameRankListResponsezjhFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameRankListResponsezjhFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasUid = input.ReadString(ref result.uid_);
              break;
            }
            case 26: {
              input.ReadStringArray(tag, field_name, result.dayWinChips_);
              break;
            }
            case 34: {
              input.ReadStringArray(tag, field_name, result.allTimes_);
              break;
            }
            case 42: {
              input.ReadStringArray(tag, field_name, result.allChips_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.GameRankListResponsezjh.Types.Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.GameRankListResponsezjh.Types.Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.GameRankListResponsezjh.Types.Code.Ok;
        return this;
      }
      
      public bool HasUid {
        get { return result.hasUid; }
      }
      public string Uid {
        get { return result.Uid; }
        set { SetUid(value); }
      }
      public Builder SetUid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder ClearUid() {
        PrepareBuilder();
        result.hasUid = false;
        result.uid_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<string> DayWinChipsList {
        get { return PrepareBuilder().dayWinChips_; }
      }
      public int DayWinChipsCount {
        get { return result.DayWinChipsCount; }
      }
      public string GetDayWinChips(int index) {
        return result.GetDayWinChips(index);
      }
      public Builder SetDayWinChips(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.dayWinChips_[index] = value;
        return this;
      }
      public Builder AddDayWinChips(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.dayWinChips_.Add(value);
        return this;
      }
      public Builder AddRangeDayWinChips(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.dayWinChips_.Add(values);
        return this;
      }
      public Builder ClearDayWinChips() {
        PrepareBuilder();
        result.dayWinChips_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> AllTimesList {
        get { return PrepareBuilder().allTimes_; }
      }
      public int AllTimesCount {
        get { return result.AllTimesCount; }
      }
      public string GetAllTimes(int index) {
        return result.GetAllTimes(index);
      }
      public Builder SetAllTimes(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.allTimes_[index] = value;
        return this;
      }
      public Builder AddAllTimes(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.allTimes_.Add(value);
        return this;
      }
      public Builder AddRangeAllTimes(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.allTimes_.Add(values);
        return this;
      }
      public Builder ClearAllTimes() {
        PrepareBuilder();
        result.allTimes_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> AllChipsList {
        get { return PrepareBuilder().allChips_; }
      }
      public int AllChipsCount {
        get { return result.AllChipsCount; }
      }
      public string GetAllChips(int index) {
        return result.GetAllChips(index);
      }
      public Builder SetAllChips(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.allChips_[index] = value;
        return this;
      }
      public Builder AddAllChips(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.allChips_.Add(value);
        return this;
      }
      public Builder AddRangeAllChips(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.allChips_.Add(values);
        return this;
      }
      public Builder ClearAllChips() {
        PrepareBuilder();
        result.allChips_.Clear();
        return this;
      }
    }
    static GameRankListResponsezjh() {
      object.ReferenceEquals(global::gt_msg.GtZjh.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GameReadyRequestzjh : pb::GeneratedMessage<GameReadyRequestzjh, GameReadyRequestzjh.Builder> {
    private GameReadyRequestzjh() { }
    private static readonly GameReadyRequestzjh defaultInstance = new GameReadyRequestzjh().MakeReadOnly();
    private static readonly string[] _gameReadyRequestzjhFieldNames = new string[] {  };
    private static readonly uint[] _gameReadyRequestzjhFieldTags = new uint[] {  };
    public static GameReadyRequestzjh DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameReadyRequestzjh DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameReadyRequestzjh ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_GameReadyRequestzjh__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameReadyRequestzjh, GameReadyRequestzjh.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_GameReadyRequestzjh__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _gameReadyRequestzjhFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GameReadyRequestzjh ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameReadyRequestzjh ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameReadyRequestzjh ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameReadyRequestzjh ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameReadyRequestzjh ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameReadyRequestzjh ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameReadyRequestzjh ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameReadyRequestzjh ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameReadyRequestzjh ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameReadyRequestzjh ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameReadyRequestzjh MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameReadyRequestzjh prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GameReadyRequestzjh, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameReadyRequestzjh cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameReadyRequestzjh result;
      
      private GameReadyRequestzjh PrepareBuilder() {
        if (resultIsReadOnly) {
          GameReadyRequestzjh original = result;
          result = new GameReadyRequestzjh();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameReadyRequestzjh MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.GameReadyRequestzjh.Descriptor; }
      }
      
      public override GameReadyRequestzjh DefaultInstanceForType {
        get { return global::gt_msg.GameReadyRequestzjh.DefaultInstance; }
      }
      
      public override GameReadyRequestzjh BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameReadyRequestzjh) {
          return MergeFrom((GameReadyRequestzjh) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameReadyRequestzjh other) {
        if (other == global::gt_msg.GameReadyRequestzjh.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameReadyRequestzjhFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameReadyRequestzjhFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static GameReadyRequestzjh() {
      object.ReferenceEquals(global::gt_msg.GtZjh.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GameReadyResponsezjh : pb::GeneratedMessage<GameReadyResponsezjh, GameReadyResponsezjh.Builder> {
    private GameReadyResponsezjh() { }
    private static readonly GameReadyResponsezjh defaultInstance = new GameReadyResponsezjh().MakeReadOnly();
    private static readonly string[] _gameReadyResponsezjhFieldNames = new string[] { "code", "playerReady" };
    private static readonly uint[] _gameReadyResponsezjhFieldTags = new uint[] { 8, 16 };
    public static GameReadyResponsezjh DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameReadyResponsezjh DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameReadyResponsezjh ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_GameReadyResponsezjh__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameReadyResponsezjh, GameReadyResponsezjh.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_GameReadyResponsezjh__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Code {
        OK = 0,
        Failed = 1,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.GameReadyResponsezjh.Types.Code code_ = global::gt_msg.GameReadyResponsezjh.Types.Code.OK;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.GameReadyResponsezjh.Types.Code Code {
      get { return code_; }
    }
    
    public const int PlayerReadyFieldNumber = 2;
    private pbc::PopsicleList<int> playerReady_ = new pbc::PopsicleList<int>();
    public scg::IList<int> PlayerReadyList {
      get { return pbc::Lists.AsReadOnly(playerReady_); }
    }
    public int PlayerReadyCount {
      get { return playerReady_.Count; }
    }
    public int GetPlayerReady(int index) {
      return playerReady_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _gameReadyResponsezjhFieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[0], (int) Code, Code);
      }
      if (playerReady_.Count > 0) {
        output.WriteInt32Array(2, field_names[1], playerReady_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      {
        int dataSize = 0;
        foreach (int element in PlayerReadyList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * playerReady_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GameReadyResponsezjh ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameReadyResponsezjh ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameReadyResponsezjh ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameReadyResponsezjh ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameReadyResponsezjh ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameReadyResponsezjh ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameReadyResponsezjh ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameReadyResponsezjh ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameReadyResponsezjh ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameReadyResponsezjh ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameReadyResponsezjh MakeReadOnly() {
      playerReady_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameReadyResponsezjh prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GameReadyResponsezjh, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameReadyResponsezjh cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameReadyResponsezjh result;
      
      private GameReadyResponsezjh PrepareBuilder() {
        if (resultIsReadOnly) {
          GameReadyResponsezjh original = result;
          result = new GameReadyResponsezjh();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameReadyResponsezjh MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.GameReadyResponsezjh.Descriptor; }
      }
      
      public override GameReadyResponsezjh DefaultInstanceForType {
        get { return global::gt_msg.GameReadyResponsezjh.DefaultInstance; }
      }
      
      public override GameReadyResponsezjh BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameReadyResponsezjh) {
          return MergeFrom((GameReadyResponsezjh) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameReadyResponsezjh other) {
        if (other == global::gt_msg.GameReadyResponsezjh.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.playerReady_.Count != 0) {
          result.playerReady_.Add(other.playerReady_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameReadyResponsezjhFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameReadyResponsezjhFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18:
            case 16: {
              input.ReadInt32Array(tag, field_name, result.playerReady_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.GameReadyResponsezjh.Types.Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.GameReadyResponsezjh.Types.Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.GameReadyResponsezjh.Types.Code.OK;
        return this;
      }
      
      public pbc::IPopsicleList<int> PlayerReadyList {
        get { return PrepareBuilder().playerReady_; }
      }
      public int PlayerReadyCount {
        get { return result.PlayerReadyCount; }
      }
      public int GetPlayerReady(int index) {
        return result.GetPlayerReady(index);
      }
      public Builder SetPlayerReady(int index, int value) {
        PrepareBuilder();
        result.playerReady_[index] = value;
        return this;
      }
      public Builder AddPlayerReady(int value) {
        PrepareBuilder();
        result.playerReady_.Add(value);
        return this;
      }
      public Builder AddRangePlayerReady(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.playerReady_.Add(values);
        return this;
      }
      public Builder ClearPlayerReady() {
        PrepareBuilder();
        result.playerReady_.Clear();
        return this;
      }
    }
    static GameReadyResponsezjh() {
      object.ReferenceEquals(global::gt_msg.GtZjh.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GMInfozjh : pb::GeneratedMessage<GMInfozjh, GMInfozjh.Builder> {
    private GMInfozjh() { }
    private static readonly GMInfozjh defaultInstance = new GMInfozjh().MakeReadOnly();
    private static readonly string[] _gMInfozjhFieldNames = new string[] { "HandCards1", "HandCards2", "HandCards3", "HandCards4", "HandCards5", "HandCards6" };
    private static readonly uint[] _gMInfozjhFieldTags = new uint[] { 10, 18, 26, 34, 42, 50 };
    public static GMInfozjh DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GMInfozjh DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GMInfozjh ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_GMInfozjh__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GMInfozjh, GMInfozjh.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtZjh.internal__static_gt_msg_GMInfozjh__FieldAccessorTable; }
    }
    
    public const int HandCards1FieldNumber = 1;
    private int handCards1MemoizedSerializedSize;
    private pbc::PopsicleList<int> handCards1_ = new pbc::PopsicleList<int>();
    public scg::IList<int> HandCards1List {
      get { return pbc::Lists.AsReadOnly(handCards1_); }
    }
    public int HandCards1Count {
      get { return handCards1_.Count; }
    }
    public int GetHandCards1(int index) {
      return handCards1_[index];
    }
    
    public const int HandCards2FieldNumber = 2;
    private int handCards2MemoizedSerializedSize;
    private pbc::PopsicleList<int> handCards2_ = new pbc::PopsicleList<int>();
    public scg::IList<int> HandCards2List {
      get { return pbc::Lists.AsReadOnly(handCards2_); }
    }
    public int HandCards2Count {
      get { return handCards2_.Count; }
    }
    public int GetHandCards2(int index) {
      return handCards2_[index];
    }
    
    public const int HandCards3FieldNumber = 3;
    private int handCards3MemoizedSerializedSize;
    private pbc::PopsicleList<int> handCards3_ = new pbc::PopsicleList<int>();
    public scg::IList<int> HandCards3List {
      get { return pbc::Lists.AsReadOnly(handCards3_); }
    }
    public int HandCards3Count {
      get { return handCards3_.Count; }
    }
    public int GetHandCards3(int index) {
      return handCards3_[index];
    }
    
    public const int HandCards4FieldNumber = 4;
    private int handCards4MemoizedSerializedSize;
    private pbc::PopsicleList<int> handCards4_ = new pbc::PopsicleList<int>();
    public scg::IList<int> HandCards4List {
      get { return pbc::Lists.AsReadOnly(handCards4_); }
    }
    public int HandCards4Count {
      get { return handCards4_.Count; }
    }
    public int GetHandCards4(int index) {
      return handCards4_[index];
    }
    
    public const int HandCards5FieldNumber = 5;
    private int handCards5MemoizedSerializedSize;
    private pbc::PopsicleList<int> handCards5_ = new pbc::PopsicleList<int>();
    public scg::IList<int> HandCards5List {
      get { return pbc::Lists.AsReadOnly(handCards5_); }
    }
    public int HandCards5Count {
      get { return handCards5_.Count; }
    }
    public int GetHandCards5(int index) {
      return handCards5_[index];
    }
    
    public const int HandCards6FieldNumber = 6;
    private int handCards6MemoizedSerializedSize;
    private pbc::PopsicleList<int> handCards6_ = new pbc::PopsicleList<int>();
    public scg::IList<int> HandCards6List {
      get { return pbc::Lists.AsReadOnly(handCards6_); }
    }
    public int HandCards6Count {
      get { return handCards6_.Count; }
    }
    public int GetHandCards6(int index) {
      return handCards6_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _gMInfozjhFieldNames;
      if (handCards1_.Count > 0) {
        output.WritePackedInt32Array(1, field_names[0], handCards1MemoizedSerializedSize, handCards1_);
      }
      if (handCards2_.Count > 0) {
        output.WritePackedInt32Array(2, field_names[1], handCards2MemoizedSerializedSize, handCards2_);
      }
      if (handCards3_.Count > 0) {
        output.WritePackedInt32Array(3, field_names[2], handCards3MemoizedSerializedSize, handCards3_);
      }
      if (handCards4_.Count > 0) {
        output.WritePackedInt32Array(4, field_names[3], handCards4MemoizedSerializedSize, handCards4_);
      }
      if (handCards5_.Count > 0) {
        output.WritePackedInt32Array(5, field_names[4], handCards5MemoizedSerializedSize, handCards5_);
      }
      if (handCards6_.Count > 0) {
        output.WritePackedInt32Array(6, field_names[5], handCards6MemoizedSerializedSize, handCards6_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (int element in HandCards1List) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        if (handCards1_.Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
        }
        handCards1MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        foreach (int element in HandCards2List) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        if (handCards2_.Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
        }
        handCards2MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        foreach (int element in HandCards3List) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        if (handCards3_.Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
        }
        handCards3MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        foreach (int element in HandCards4List) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        if (handCards4_.Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
        }
        handCards4MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        foreach (int element in HandCards5List) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        if (handCards5_.Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
        }
        handCards5MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        foreach (int element in HandCards6List) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        if (handCards6_.Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
        }
        handCards6MemoizedSerializedSize = dataSize;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GMInfozjh ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GMInfozjh ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GMInfozjh ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GMInfozjh ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GMInfozjh ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GMInfozjh ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GMInfozjh ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GMInfozjh ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GMInfozjh ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GMInfozjh ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GMInfozjh MakeReadOnly() {
      handCards1_.MakeReadOnly();
      handCards2_.MakeReadOnly();
      handCards3_.MakeReadOnly();
      handCards4_.MakeReadOnly();
      handCards5_.MakeReadOnly();
      handCards6_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GMInfozjh prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GMInfozjh, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GMInfozjh cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GMInfozjh result;
      
      private GMInfozjh PrepareBuilder() {
        if (resultIsReadOnly) {
          GMInfozjh original = result;
          result = new GMInfozjh();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GMInfozjh MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.GMInfozjh.Descriptor; }
      }
      
      public override GMInfozjh DefaultInstanceForType {
        get { return global::gt_msg.GMInfozjh.DefaultInstance; }
      }
      
      public override GMInfozjh BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GMInfozjh) {
          return MergeFrom((GMInfozjh) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GMInfozjh other) {
        if (other == global::gt_msg.GMInfozjh.DefaultInstance) return this;
        PrepareBuilder();
        if (other.handCards1_.Count != 0) {
          result.handCards1_.Add(other.handCards1_);
        }
        if (other.handCards2_.Count != 0) {
          result.handCards2_.Add(other.handCards2_);
        }
        if (other.handCards3_.Count != 0) {
          result.handCards3_.Add(other.handCards3_);
        }
        if (other.handCards4_.Count != 0) {
          result.handCards4_.Add(other.handCards4_);
        }
        if (other.handCards5_.Count != 0) {
          result.handCards5_.Add(other.handCards5_);
        }
        if (other.handCards6_.Count != 0) {
          result.handCards6_.Add(other.handCards6_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gMInfozjhFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gMInfozjhFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10:
            case 8: {
              input.ReadInt32Array(tag, field_name, result.handCards1_);
              break;
            }
            case 18:
            case 16: {
              input.ReadInt32Array(tag, field_name, result.handCards2_);
              break;
            }
            case 26:
            case 24: {
              input.ReadInt32Array(tag, field_name, result.handCards3_);
              break;
            }
            case 34:
            case 32: {
              input.ReadInt32Array(tag, field_name, result.handCards4_);
              break;
            }
            case 42:
            case 40: {
              input.ReadInt32Array(tag, field_name, result.handCards5_);
              break;
            }
            case 50:
            case 48: {
              input.ReadInt32Array(tag, field_name, result.handCards6_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<int> HandCards1List {
        get { return PrepareBuilder().handCards1_; }
      }
      public int HandCards1Count {
        get { return result.HandCards1Count; }
      }
      public int GetHandCards1(int index) {
        return result.GetHandCards1(index);
      }
      public Builder SetHandCards1(int index, int value) {
        PrepareBuilder();
        result.handCards1_[index] = value;
        return this;
      }
      public Builder AddHandCards1(int value) {
        PrepareBuilder();
        result.handCards1_.Add(value);
        return this;
      }
      public Builder AddRangeHandCards1(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.handCards1_.Add(values);
        return this;
      }
      public Builder ClearHandCards1() {
        PrepareBuilder();
        result.handCards1_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<int> HandCards2List {
        get { return PrepareBuilder().handCards2_; }
      }
      public int HandCards2Count {
        get { return result.HandCards2Count; }
      }
      public int GetHandCards2(int index) {
        return result.GetHandCards2(index);
      }
      public Builder SetHandCards2(int index, int value) {
        PrepareBuilder();
        result.handCards2_[index] = value;
        return this;
      }
      public Builder AddHandCards2(int value) {
        PrepareBuilder();
        result.handCards2_.Add(value);
        return this;
      }
      public Builder AddRangeHandCards2(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.handCards2_.Add(values);
        return this;
      }
      public Builder ClearHandCards2() {
        PrepareBuilder();
        result.handCards2_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<int> HandCards3List {
        get { return PrepareBuilder().handCards3_; }
      }
      public int HandCards3Count {
        get { return result.HandCards3Count; }
      }
      public int GetHandCards3(int index) {
        return result.GetHandCards3(index);
      }
      public Builder SetHandCards3(int index, int value) {
        PrepareBuilder();
        result.handCards3_[index] = value;
        return this;
      }
      public Builder AddHandCards3(int value) {
        PrepareBuilder();
        result.handCards3_.Add(value);
        return this;
      }
      public Builder AddRangeHandCards3(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.handCards3_.Add(values);
        return this;
      }
      public Builder ClearHandCards3() {
        PrepareBuilder();
        result.handCards3_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<int> HandCards4List {
        get { return PrepareBuilder().handCards4_; }
      }
      public int HandCards4Count {
        get { return result.HandCards4Count; }
      }
      public int GetHandCards4(int index) {
        return result.GetHandCards4(index);
      }
      public Builder SetHandCards4(int index, int value) {
        PrepareBuilder();
        result.handCards4_[index] = value;
        return this;
      }
      public Builder AddHandCards4(int value) {
        PrepareBuilder();
        result.handCards4_.Add(value);
        return this;
      }
      public Builder AddRangeHandCards4(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.handCards4_.Add(values);
        return this;
      }
      public Builder ClearHandCards4() {
        PrepareBuilder();
        result.handCards4_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<int> HandCards5List {
        get { return PrepareBuilder().handCards5_; }
      }
      public int HandCards5Count {
        get { return result.HandCards5Count; }
      }
      public int GetHandCards5(int index) {
        return result.GetHandCards5(index);
      }
      public Builder SetHandCards5(int index, int value) {
        PrepareBuilder();
        result.handCards5_[index] = value;
        return this;
      }
      public Builder AddHandCards5(int value) {
        PrepareBuilder();
        result.handCards5_.Add(value);
        return this;
      }
      public Builder AddRangeHandCards5(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.handCards5_.Add(values);
        return this;
      }
      public Builder ClearHandCards5() {
        PrepareBuilder();
        result.handCards5_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<int> HandCards6List {
        get { return PrepareBuilder().handCards6_; }
      }
      public int HandCards6Count {
        get { return result.HandCards6Count; }
      }
      public int GetHandCards6(int index) {
        return result.GetHandCards6(index);
      }
      public Builder SetHandCards6(int index, int value) {
        PrepareBuilder();
        result.handCards6_[index] = value;
        return this;
      }
      public Builder AddHandCards6(int value) {
        PrepareBuilder();
        result.handCards6_.Add(value);
        return this;
      }
      public Builder AddRangeHandCards6(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.handCards6_.Add(values);
        return this;
      }
      public Builder ClearHandCards6() {
        PrepareBuilder();
        result.handCards6_.Clear();
        return this;
      }
    }
    static GMInfozjh() {
      object.ReferenceEquals(global::gt_msg.GtZjh.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
