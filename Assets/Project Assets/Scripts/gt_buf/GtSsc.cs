// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace gt_msg {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class GtSsc {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_gt_msg_JoinFreeRequestssc__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.JoinFreeRequestssc, global::gt_msg.JoinFreeRequestssc.Builder> internal__static_gt_msg_JoinFreeRequestssc__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_JoinFreeResponsessc__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.JoinFreeResponsessc, global::gt_msg.JoinFreeResponsessc.Builder> internal__static_gt_msg_JoinFreeResponsessc__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_ActionRequestssc__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.ActionRequestssc, global::gt_msg.ActionRequestssc.Builder> internal__static_gt_msg_ActionRequestssc__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_ActionResponsessc__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.ActionResponsessc, global::gt_msg.ActionResponsessc.Builder> internal__static_gt_msg_ActionResponsessc__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_TableStatsRequestssc__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableStatsRequestssc, global::gt_msg.TableStatsRequestssc.Builder> internal__static_gt_msg_TableStatsRequestssc__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_TableStatsssc__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableStatsssc, global::gt_msg.TableStatsssc.Builder> internal__static_gt_msg_TableStatsssc__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_ForceExitTableRequestssc__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.ForceExitTableRequestssc, global::gt_msg.ForceExitTableRequestssc.Builder> internal__static_gt_msg_ForceExitTableRequestssc__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_ForceExitTableResponsessc__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.ForceExitTableResponsessc, global::gt_msg.ForceExitTableResponsessc.Builder> internal__static_gt_msg_ForceExitTableResponsessc__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static GtSsc() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxndF9zc2MucHJvdG8SBmd0X21zZxoNZ3RfYmFzZS5wcm90byJdChJKb2lu", 
            "RnJlZVJlcXVlc3Rzc2MSDwoHdXNlcl9pZBgBIAIoCRIaCgRydWxlGAIgAigO", 
            "MgwuZ3RfbXNnLlJ1bGUSGgoEcmFuaxgDIAEoDjIMLmd0X21zZy5SYW5rIt4D", 
            "ChNKb2luRnJlZVJlc3BvbnNlc3NjEi4KBGNvZGUYASACKA4yIC5ndF9tc2cu", 
            "Sm9pbkZyZWVSZXNwb25zZXNzYy5Db2RlEhgKEHJlY29ubmVjdGVkX3VzZXIY", 
            "AiABKAgSEQoJbWluX2NvaW5zGAMgASgDEhgKEGhhc19iYXNpY19saXZpbmcY", 
            "BCABKAgSHgoWYmFzaWNfbGl2aW5nX2FsbF90aW1lcxgFIAEoBRIeChZiYXNp", 
            "Y19saXZpbmdfdXNlX3RpbWVzGAYgASgFEhoKEmJhc2ljX2xpdmluZ19jb2lu", 
            "cxgHIAEoBRIiCgxyYW5rX3JlcXVlc3QYCCABKA4yDC5ndF9tc2cuUmFuaxIa", 
            "CgRyYW5rGAkgASgOMgwuZ3RfbXNnLlJhbmsSKQoKZ2FtZV9zdGF0cxgKIAEo", 
            "CzIVLmd0X21zZy5UYWJsZVN0YXRzc3NjEhQKDFBheU1vbmV5TGlzdBgLIAMo", 
            "BRIQCghJdGVtVHlwZRgMIAIoBSJhCgRDb2RlEgYKAk9rEAASGAoUTWluaW11", 
            "bUNvaW5zUmVxdWlyZWQQARIaChZNaW5pbXVtRGlhbW9uZFJlcXVpcmVkEAIS", 
            "EAoMTm9UYWJsZUF2YWlsEAMSCQoFT3RoZXIQBCKHAQoQQWN0aW9uUmVxdWVz", 
            "dHNzYxIrCgRjb2RlGAEgAigOMh0uZ3RfbXNnLkFjdGlvblJlcXVlc3Rzc2Mu", 
            "Q29kZRIRCglQYXlOdW1NaW4YAiABKAMSEQoJUGF5TnVtTWF4GAMgASgFIiAK", 
            "BENvZGUSCwoHQnV5U2VhdBABEgsKB0F1dG9CdXkQAiKqAQoRQWN0aW9uUmVz", 
            "cG9uc2Vzc2MSLAoEY29kZRgBIAIoDjIeLmd0X21zZy5BY3Rpb25SZXNwb25z", 
            "ZXNzYy5Db2RlImcKBENvZGUSBgoCT2sQABIKCgZOb0NvaW4QARIKCgZOb09w", 
            "ZW4QAhIKCgZSRVFFUlIQAxILCgdSRUpFQ1QxEAQSCwoHUkVKRUNUMhAFEgsK", 
            "B1JFSkVDVDMQBhIMCghPdGhlckVychAHIhYKFFRhYmxlU3RhdHNSZXF1ZXN0", 
            "c3NjIuYBCg1UYWJsZVN0YXRzc3NjEg8KB1RhYmxlSUQYASACKAUSDgoGTmV3", 
            "U2lkGAIgAigJEg4KBk5ld051bRgDIAIoCRIPCgdOZXdUaW1lGAQgAigJEhYK", 
            "Dk5ld1RpbWVMZWZ0U2VjGAUgAigFEg4KBk9sZFNpZBgGIAMoCRIOCgZPbGRO", 
            "dW0YByADKAkSLAoKTmV3UGxheVBheRgIIAMoCzIYLmd0X21zZy5BY3Rpb25S", 
            "ZXF1ZXN0c3NjEh8KCXVzZXJfaW5mbxgJIAIoCzIMLmd0X21zZy5Vc2VyEgwK", 
            "BFN0ZXAYCiACKAUiGgoYRm9yY2VFeGl0VGFibGVSZXF1ZXN0c3NjItABChlG", 
            "b3JjZUV4aXRUYWJsZVJlc3BvbnNlc3NjEjQKBGNvZGUYASACKA4yJi5ndF9t", 
            "c2cuRm9yY2VFeGl0VGFibGVSZXNwb25zZXNzYy5Db2RlIn0KBENvZGUSCgoG", 
            "Tm9ybWFsEAASCgoGR2l2ZVVwEAESEQoNTm9Fbm91Z2hNb25leRACEg8KC0No", 
            "YW5nZVRhYmxlEAMSGAoUQ2FuTm90RXhpdEZvclBsYXlpbmcQBBIfChtDYW5O", 
          "b3RDaGFuZ2VUYWJsZUZvclBsYXlpbmcQBQ=="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_gt_msg_JoinFreeRequestssc__Descriptor = Descriptor.MessageTypes[0];
        internal__static_gt_msg_JoinFreeRequestssc__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.JoinFreeRequestssc, global::gt_msg.JoinFreeRequestssc.Builder>(internal__static_gt_msg_JoinFreeRequestssc__Descriptor,
                new string[] { "UserId", "Rule", "Rank", });
        internal__static_gt_msg_JoinFreeResponsessc__Descriptor = Descriptor.MessageTypes[1];
        internal__static_gt_msg_JoinFreeResponsessc__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.JoinFreeResponsessc, global::gt_msg.JoinFreeResponsessc.Builder>(internal__static_gt_msg_JoinFreeResponsessc__Descriptor,
                new string[] { "Code", "ReconnectedUser", "MinCoins", "HasBasicLiving", "BasicLivingAllTimes", "BasicLivingUseTimes", "BasicLivingCoins", "RankRequest", "Rank", "GameStats", "PayMoneyList", "ItemType", });
        internal__static_gt_msg_ActionRequestssc__Descriptor = Descriptor.MessageTypes[2];
        internal__static_gt_msg_ActionRequestssc__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.ActionRequestssc, global::gt_msg.ActionRequestssc.Builder>(internal__static_gt_msg_ActionRequestssc__Descriptor,
                new string[] { "Code", "PayNumMin", "PayNumMax", });
        internal__static_gt_msg_ActionResponsessc__Descriptor = Descriptor.MessageTypes[3];
        internal__static_gt_msg_ActionResponsessc__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.ActionResponsessc, global::gt_msg.ActionResponsessc.Builder>(internal__static_gt_msg_ActionResponsessc__Descriptor,
                new string[] { "Code", });
        internal__static_gt_msg_TableStatsRequestssc__Descriptor = Descriptor.MessageTypes[4];
        internal__static_gt_msg_TableStatsRequestssc__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableStatsRequestssc, global::gt_msg.TableStatsRequestssc.Builder>(internal__static_gt_msg_TableStatsRequestssc__Descriptor,
                new string[] { });
        internal__static_gt_msg_TableStatsssc__Descriptor = Descriptor.MessageTypes[5];
        internal__static_gt_msg_TableStatsssc__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableStatsssc, global::gt_msg.TableStatsssc.Builder>(internal__static_gt_msg_TableStatsssc__Descriptor,
                new string[] { "TableID", "NewSid", "NewNum", "NewTime", "NewTimeLeftSec", "OldSid", "OldNum", "NewPlayPay", "UserInfo", "Step", });
        internal__static_gt_msg_ForceExitTableRequestssc__Descriptor = Descriptor.MessageTypes[6];
        internal__static_gt_msg_ForceExitTableRequestssc__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.ForceExitTableRequestssc, global::gt_msg.ForceExitTableRequestssc.Builder>(internal__static_gt_msg_ForceExitTableRequestssc__Descriptor,
                new string[] { });
        internal__static_gt_msg_ForceExitTableResponsessc__Descriptor = Descriptor.MessageTypes[7];
        internal__static_gt_msg_ForceExitTableResponsessc__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.ForceExitTableResponsessc, global::gt_msg.ForceExitTableResponsessc.Builder>(internal__static_gt_msg_ForceExitTableResponsessc__Descriptor,
                new string[] { "Code", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::gt_msg.GtBase.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class JoinFreeRequestssc : pb::GeneratedMessage<JoinFreeRequestssc, JoinFreeRequestssc.Builder> {
    private JoinFreeRequestssc() { }
    private static readonly JoinFreeRequestssc defaultInstance = new JoinFreeRequestssc().MakeReadOnly();
    private static readonly string[] _joinFreeRequestsscFieldNames = new string[] { "rank", "rule", "user_id" };
    private static readonly uint[] _joinFreeRequestsscFieldTags = new uint[] { 24, 16, 10 };
    public static JoinFreeRequestssc DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinFreeRequestssc DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinFreeRequestssc ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSsc.internal__static_gt_msg_JoinFreeRequestssc__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinFreeRequestssc, JoinFreeRequestssc.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSsc.internal__static_gt_msg_JoinFreeRequestssc__FieldAccessorTable; }
    }
    
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private string userId_ = "";
    public bool HasUserId {
      get { return hasUserId; }
    }
    public string UserId {
      get { return userId_; }
    }
    
    public const int RuleFieldNumber = 2;
    private bool hasRule;
    private global::gt_msg.Rule rule_ = global::gt_msg.Rule.RuleNormal;
    public bool HasRule {
      get { return hasRule; }
    }
    public global::gt_msg.Rule Rule {
      get { return rule_; }
    }
    
    public const int RankFieldNumber = 3;
    private bool hasRank;
    private global::gt_msg.Rank rank_ = global::gt_msg.Rank.LV0;
    public bool HasRank {
      get { return hasRank; }
    }
    public global::gt_msg.Rank Rank {
      get { return rank_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserId) return false;
        if (!hasRule) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _joinFreeRequestsscFieldNames;
      if (hasUserId) {
        output.WriteString(1, field_names[2], UserId);
      }
      if (hasRule) {
        output.WriteEnum(2, field_names[1], (int) Rule, Rule);
      }
      if (hasRank) {
        output.WriteEnum(3, field_names[0], (int) Rank, Rank);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, UserId);
      }
      if (hasRule) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Rule);
      }
      if (hasRank) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Rank);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static JoinFreeRequestssc ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinFreeRequestssc ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeRequestssc ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinFreeRequestssc ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeRequestssc ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinFreeRequestssc ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeRequestssc ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinFreeRequestssc ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinFreeRequestssc ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinFreeRequestssc ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinFreeRequestssc MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinFreeRequestssc prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinFreeRequestssc, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinFreeRequestssc cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinFreeRequestssc result;
      
      private JoinFreeRequestssc PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinFreeRequestssc original = result;
          result = new JoinFreeRequestssc();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinFreeRequestssc MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.JoinFreeRequestssc.Descriptor; }
      }
      
      public override JoinFreeRequestssc DefaultInstanceForType {
        get { return global::gt_msg.JoinFreeRequestssc.DefaultInstance; }
      }
      
      public override JoinFreeRequestssc BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is JoinFreeRequestssc) {
          return MergeFrom((JoinFreeRequestssc) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(JoinFreeRequestssc other) {
        if (other == global::gt_msg.JoinFreeRequestssc.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasRule) {
          Rule = other.Rule;
        }
        if (other.HasRank) {
          Rank = other.Rank;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_joinFreeRequestsscFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _joinFreeRequestsscFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserId = input.ReadString(ref result.userId_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.rule_, out unknown)) {
                result.hasRule = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.rank_, out unknown)) {
                result.hasRank = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public string UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = "";
        return this;
      }
      
      public bool HasRule {
       get { return result.hasRule; }
      }
      public global::gt_msg.Rule Rule {
        get { return result.Rule; }
        set { SetRule(value); }
      }
      public Builder SetRule(global::gt_msg.Rule value) {
        PrepareBuilder();
        result.hasRule = true;
        result.rule_ = value;
        return this;
      }
      public Builder ClearRule() {
        PrepareBuilder();
        result.hasRule = false;
        result.rule_ = global::gt_msg.Rule.RuleNormal;
        return this;
      }
      
      public bool HasRank {
       get { return result.hasRank; }
      }
      public global::gt_msg.Rank Rank {
        get { return result.Rank; }
        set { SetRank(value); }
      }
      public Builder SetRank(global::gt_msg.Rank value) {
        PrepareBuilder();
        result.hasRank = true;
        result.rank_ = value;
        return this;
      }
      public Builder ClearRank() {
        PrepareBuilder();
        result.hasRank = false;
        result.rank_ = global::gt_msg.Rank.LV0;
        return this;
      }
    }
    static JoinFreeRequestssc() {
      object.ReferenceEquals(global::gt_msg.GtSsc.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class JoinFreeResponsessc : pb::GeneratedMessage<JoinFreeResponsessc, JoinFreeResponsessc.Builder> {
    private JoinFreeResponsessc() { }
    private static readonly JoinFreeResponsessc defaultInstance = new JoinFreeResponsessc().MakeReadOnly();
    private static readonly string[] _joinFreeResponsesscFieldNames = new string[] { "ItemType", "PayMoneyList", "basic_living_all_times", "basic_living_coins", "basic_living_use_times", "code", "game_stats", "has_basic_living", "min_coins", "rank", "rank_request", "reconnected_user" };
    private static readonly uint[] _joinFreeResponsesscFieldTags = new uint[] { 96, 88, 40, 56, 48, 8, 82, 32, 24, 72, 64, 16 };
    public static JoinFreeResponsessc DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinFreeResponsessc DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinFreeResponsessc ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSsc.internal__static_gt_msg_JoinFreeResponsessc__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinFreeResponsessc, JoinFreeResponsessc.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSsc.internal__static_gt_msg_JoinFreeResponsessc__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Code {
        Ok = 0,
        MinimumCoinsRequired = 1,
        MinimumDiamondRequired = 2,
        NoTableAvail = 3,
        Other = 4,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.JoinFreeResponsessc.Types.Code code_ = global::gt_msg.JoinFreeResponsessc.Types.Code.Ok;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.JoinFreeResponsessc.Types.Code Code {
      get { return code_; }
    }
    
    public const int ReconnectedUserFieldNumber = 2;
    private bool hasReconnectedUser;
    private bool reconnectedUser_;
    public bool HasReconnectedUser {
      get { return hasReconnectedUser; }
    }
    public bool ReconnectedUser {
      get { return reconnectedUser_; }
    }
    
    public const int MinCoinsFieldNumber = 3;
    private bool hasMinCoins;
    private long minCoins_;
    public bool HasMinCoins {
      get { return hasMinCoins; }
    }
    public long MinCoins {
      get { return minCoins_; }
    }
    
    public const int HasBasicLivingFieldNumber = 4;
    private bool hasHasBasicLiving;
    private bool hasBasicLiving_;
    public bool HasHasBasicLiving {
      get { return hasHasBasicLiving; }
    }
    public bool HasBasicLiving {
      get { return hasBasicLiving_; }
    }
    
    public const int BasicLivingAllTimesFieldNumber = 5;
    private bool hasBasicLivingAllTimes;
    private int basicLivingAllTimes_;
    public bool HasBasicLivingAllTimes {
      get { return hasBasicLivingAllTimes; }
    }
    public int BasicLivingAllTimes {
      get { return basicLivingAllTimes_; }
    }
    
    public const int BasicLivingUseTimesFieldNumber = 6;
    private bool hasBasicLivingUseTimes;
    private int basicLivingUseTimes_;
    public bool HasBasicLivingUseTimes {
      get { return hasBasicLivingUseTimes; }
    }
    public int BasicLivingUseTimes {
      get { return basicLivingUseTimes_; }
    }
    
    public const int BasicLivingCoinsFieldNumber = 7;
    private bool hasBasicLivingCoins;
    private int basicLivingCoins_;
    public bool HasBasicLivingCoins {
      get { return hasBasicLivingCoins; }
    }
    public int BasicLivingCoins {
      get { return basicLivingCoins_; }
    }
    
    public const int RankRequestFieldNumber = 8;
    private bool hasRankRequest;
    private global::gt_msg.Rank rankRequest_ = global::gt_msg.Rank.LV0;
    public bool HasRankRequest {
      get { return hasRankRequest; }
    }
    public global::gt_msg.Rank RankRequest {
      get { return rankRequest_; }
    }
    
    public const int RankFieldNumber = 9;
    private bool hasRank;
    private global::gt_msg.Rank rank_ = global::gt_msg.Rank.LV0;
    public bool HasRank {
      get { return hasRank; }
    }
    public global::gt_msg.Rank Rank {
      get { return rank_; }
    }
    
    public const int GameStatsFieldNumber = 10;
    private bool hasGameStats;
    private global::gt_msg.TableStatsssc gameStats_;
    public bool HasGameStats {
      get { return hasGameStats; }
    }
    public global::gt_msg.TableStatsssc GameStats {
      get { return gameStats_ ?? global::gt_msg.TableStatsssc.DefaultInstance; }
    }
    
    public const int PayMoneyListFieldNumber = 11;
    private pbc::PopsicleList<int> payMoneyList_ = new pbc::PopsicleList<int>();
    public scg::IList<int> PayMoneyListList {
      get { return pbc::Lists.AsReadOnly(payMoneyList_); }
    }
    public int PayMoneyListCount {
      get { return payMoneyList_.Count; }
    }
    public int GetPayMoneyList(int index) {
      return payMoneyList_[index];
    }
    
    public const int ItemTypeFieldNumber = 12;
    private bool hasItemType;
    private int itemType_;
    public bool HasItemType {
      get { return hasItemType; }
    }
    public int ItemType {
      get { return itemType_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        if (!hasItemType) return false;
        if (HasGameStats) {
          if (!GameStats.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _joinFreeResponsesscFieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[5], (int) Code, Code);
      }
      if (hasReconnectedUser) {
        output.WriteBool(2, field_names[11], ReconnectedUser);
      }
      if (hasMinCoins) {
        output.WriteInt64(3, field_names[8], MinCoins);
      }
      if (hasHasBasicLiving) {
        output.WriteBool(4, field_names[7], HasBasicLiving);
      }
      if (hasBasicLivingAllTimes) {
        output.WriteInt32(5, field_names[2], BasicLivingAllTimes);
      }
      if (hasBasicLivingUseTimes) {
        output.WriteInt32(6, field_names[4], BasicLivingUseTimes);
      }
      if (hasBasicLivingCoins) {
        output.WriteInt32(7, field_names[3], BasicLivingCoins);
      }
      if (hasRankRequest) {
        output.WriteEnum(8, field_names[10], (int) RankRequest, RankRequest);
      }
      if (hasRank) {
        output.WriteEnum(9, field_names[9], (int) Rank, Rank);
      }
      if (hasGameStats) {
        output.WriteMessage(10, field_names[6], GameStats);
      }
      if (payMoneyList_.Count > 0) {
        output.WriteInt32Array(11, field_names[1], payMoneyList_);
      }
      if (hasItemType) {
        output.WriteInt32(12, field_names[0], ItemType);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasReconnectedUser) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, ReconnectedUser);
      }
      if (hasMinCoins) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, MinCoins);
      }
      if (hasHasBasicLiving) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, HasBasicLiving);
      }
      if (hasBasicLivingAllTimes) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, BasicLivingAllTimes);
      }
      if (hasBasicLivingUseTimes) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, BasicLivingUseTimes);
      }
      if (hasBasicLivingCoins) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, BasicLivingCoins);
      }
      if (hasRankRequest) {
        size += pb::CodedOutputStream.ComputeEnumSize(8, (int) RankRequest);
      }
      if (hasRank) {
        size += pb::CodedOutputStream.ComputeEnumSize(9, (int) Rank);
      }
      if (hasGameStats) {
        size += pb::CodedOutputStream.ComputeMessageSize(10, GameStats);
      }
      {
        int dataSize = 0;
        foreach (int element in PayMoneyListList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * payMoneyList_.Count;
      }
      if (hasItemType) {
        size += pb::CodedOutputStream.ComputeInt32Size(12, ItemType);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static JoinFreeResponsessc ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinFreeResponsessc ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeResponsessc ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinFreeResponsessc ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeResponsessc ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinFreeResponsessc ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeResponsessc ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinFreeResponsessc ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinFreeResponsessc ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinFreeResponsessc ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinFreeResponsessc MakeReadOnly() {
      payMoneyList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinFreeResponsessc prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinFreeResponsessc, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinFreeResponsessc cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinFreeResponsessc result;
      
      private JoinFreeResponsessc PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinFreeResponsessc original = result;
          result = new JoinFreeResponsessc();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinFreeResponsessc MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.JoinFreeResponsessc.Descriptor; }
      }
      
      public override JoinFreeResponsessc DefaultInstanceForType {
        get { return global::gt_msg.JoinFreeResponsessc.DefaultInstance; }
      }
      
      public override JoinFreeResponsessc BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is JoinFreeResponsessc) {
          return MergeFrom((JoinFreeResponsessc) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(JoinFreeResponsessc other) {
        if (other == global::gt_msg.JoinFreeResponsessc.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasReconnectedUser) {
          ReconnectedUser = other.ReconnectedUser;
        }
        if (other.HasMinCoins) {
          MinCoins = other.MinCoins;
        }
        if (other.HasHasBasicLiving) {
          HasBasicLiving = other.HasBasicLiving;
        }
        if (other.HasBasicLivingAllTimes) {
          BasicLivingAllTimes = other.BasicLivingAllTimes;
        }
        if (other.HasBasicLivingUseTimes) {
          BasicLivingUseTimes = other.BasicLivingUseTimes;
        }
        if (other.HasBasicLivingCoins) {
          BasicLivingCoins = other.BasicLivingCoins;
        }
        if (other.HasRankRequest) {
          RankRequest = other.RankRequest;
        }
        if (other.HasRank) {
          Rank = other.Rank;
        }
        if (other.HasGameStats) {
          MergeGameStats(other.GameStats);
        }
        if (other.payMoneyList_.Count != 0) {
          result.payMoneyList_.Add(other.payMoneyList_);
        }
        if (other.HasItemType) {
          ItemType = other.ItemType;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_joinFreeResponsesscFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _joinFreeResponsesscFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasReconnectedUser = input.ReadBool(ref result.reconnectedUser_);
              break;
            }
            case 24: {
              result.hasMinCoins = input.ReadInt64(ref result.minCoins_);
              break;
            }
            case 32: {
              result.hasHasBasicLiving = input.ReadBool(ref result.hasBasicLiving_);
              break;
            }
            case 40: {
              result.hasBasicLivingAllTimes = input.ReadInt32(ref result.basicLivingAllTimes_);
              break;
            }
            case 48: {
              result.hasBasicLivingUseTimes = input.ReadInt32(ref result.basicLivingUseTimes_);
              break;
            }
            case 56: {
              result.hasBasicLivingCoins = input.ReadInt32(ref result.basicLivingCoins_);
              break;
            }
            case 64: {
              object unknown;
              if(input.ReadEnum(ref result.rankRequest_, out unknown)) {
                result.hasRankRequest = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(8, (ulong)(int)unknown);
              }
              break;
            }
            case 72: {
              object unknown;
              if(input.ReadEnum(ref result.rank_, out unknown)) {
                result.hasRank = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(9, (ulong)(int)unknown);
              }
              break;
            }
            case 82: {
              global::gt_msg.TableStatsssc.Builder subBuilder = global::gt_msg.TableStatsssc.CreateBuilder();
              if (result.hasGameStats) {
                subBuilder.MergeFrom(GameStats);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameStats = subBuilder.BuildPartial();
              break;
            }
            case 90:
            case 88: {
              input.ReadInt32Array(tag, field_name, result.payMoneyList_);
              break;
            }
            case 96: {
              result.hasItemType = input.ReadInt32(ref result.itemType_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.JoinFreeResponsessc.Types.Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.JoinFreeResponsessc.Types.Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.JoinFreeResponsessc.Types.Code.Ok;
        return this;
      }
      
      public bool HasReconnectedUser {
        get { return result.hasReconnectedUser; }
      }
      public bool ReconnectedUser {
        get { return result.ReconnectedUser; }
        set { SetReconnectedUser(value); }
      }
      public Builder SetReconnectedUser(bool value) {
        PrepareBuilder();
        result.hasReconnectedUser = true;
        result.reconnectedUser_ = value;
        return this;
      }
      public Builder ClearReconnectedUser() {
        PrepareBuilder();
        result.hasReconnectedUser = false;
        result.reconnectedUser_ = false;
        return this;
      }
      
      public bool HasMinCoins {
        get { return result.hasMinCoins; }
      }
      public long MinCoins {
        get { return result.MinCoins; }
        set { SetMinCoins(value); }
      }
      public Builder SetMinCoins(long value) {
        PrepareBuilder();
        result.hasMinCoins = true;
        result.minCoins_ = value;
        return this;
      }
      public Builder ClearMinCoins() {
        PrepareBuilder();
        result.hasMinCoins = false;
        result.minCoins_ = 0L;
        return this;
      }
      
      public bool HasHasBasicLiving {
        get { return result.hasHasBasicLiving; }
      }
      public bool HasBasicLiving {
        get { return result.HasBasicLiving; }
        set { SetHasBasicLiving(value); }
      }
      public Builder SetHasBasicLiving(bool value) {
        PrepareBuilder();
        result.hasHasBasicLiving = true;
        result.hasBasicLiving_ = value;
        return this;
      }
      public Builder ClearHasBasicLiving() {
        PrepareBuilder();
        result.hasHasBasicLiving = false;
        result.hasBasicLiving_ = false;
        return this;
      }
      
      public bool HasBasicLivingAllTimes {
        get { return result.hasBasicLivingAllTimes; }
      }
      public int BasicLivingAllTimes {
        get { return result.BasicLivingAllTimes; }
        set { SetBasicLivingAllTimes(value); }
      }
      public Builder SetBasicLivingAllTimes(int value) {
        PrepareBuilder();
        result.hasBasicLivingAllTimes = true;
        result.basicLivingAllTimes_ = value;
        return this;
      }
      public Builder ClearBasicLivingAllTimes() {
        PrepareBuilder();
        result.hasBasicLivingAllTimes = false;
        result.basicLivingAllTimes_ = 0;
        return this;
      }
      
      public bool HasBasicLivingUseTimes {
        get { return result.hasBasicLivingUseTimes; }
      }
      public int BasicLivingUseTimes {
        get { return result.BasicLivingUseTimes; }
        set { SetBasicLivingUseTimes(value); }
      }
      public Builder SetBasicLivingUseTimes(int value) {
        PrepareBuilder();
        result.hasBasicLivingUseTimes = true;
        result.basicLivingUseTimes_ = value;
        return this;
      }
      public Builder ClearBasicLivingUseTimes() {
        PrepareBuilder();
        result.hasBasicLivingUseTimes = false;
        result.basicLivingUseTimes_ = 0;
        return this;
      }
      
      public bool HasBasicLivingCoins {
        get { return result.hasBasicLivingCoins; }
      }
      public int BasicLivingCoins {
        get { return result.BasicLivingCoins; }
        set { SetBasicLivingCoins(value); }
      }
      public Builder SetBasicLivingCoins(int value) {
        PrepareBuilder();
        result.hasBasicLivingCoins = true;
        result.basicLivingCoins_ = value;
        return this;
      }
      public Builder ClearBasicLivingCoins() {
        PrepareBuilder();
        result.hasBasicLivingCoins = false;
        result.basicLivingCoins_ = 0;
        return this;
      }
      
      public bool HasRankRequest {
       get { return result.hasRankRequest; }
      }
      public global::gt_msg.Rank RankRequest {
        get { return result.RankRequest; }
        set { SetRankRequest(value); }
      }
      public Builder SetRankRequest(global::gt_msg.Rank value) {
        PrepareBuilder();
        result.hasRankRequest = true;
        result.rankRequest_ = value;
        return this;
      }
      public Builder ClearRankRequest() {
        PrepareBuilder();
        result.hasRankRequest = false;
        result.rankRequest_ = global::gt_msg.Rank.LV0;
        return this;
      }
      
      public bool HasRank {
       get { return result.hasRank; }
      }
      public global::gt_msg.Rank Rank {
        get { return result.Rank; }
        set { SetRank(value); }
      }
      public Builder SetRank(global::gt_msg.Rank value) {
        PrepareBuilder();
        result.hasRank = true;
        result.rank_ = value;
        return this;
      }
      public Builder ClearRank() {
        PrepareBuilder();
        result.hasRank = false;
        result.rank_ = global::gt_msg.Rank.LV0;
        return this;
      }
      
      public bool HasGameStats {
       get { return result.hasGameStats; }
      }
      public global::gt_msg.TableStatsssc GameStats {
        get { return result.GameStats; }
        set { SetGameStats(value); }
      }
      public Builder SetGameStats(global::gt_msg.TableStatsssc value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameStats = true;
        result.gameStats_ = value;
        return this;
      }
      public Builder SetGameStats(global::gt_msg.TableStatsssc.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameStats = true;
        result.gameStats_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameStats(global::gt_msg.TableStatsssc value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameStats &&
            result.gameStats_ != global::gt_msg.TableStatsssc.DefaultInstance) {
            result.gameStats_ = global::gt_msg.TableStatsssc.CreateBuilder(result.gameStats_).MergeFrom(value).BuildPartial();
        } else {
          result.gameStats_ = value;
        }
        result.hasGameStats = true;
        return this;
      }
      public Builder ClearGameStats() {
        PrepareBuilder();
        result.hasGameStats = false;
        result.gameStats_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<int> PayMoneyListList {
        get { return PrepareBuilder().payMoneyList_; }
      }
      public int PayMoneyListCount {
        get { return result.PayMoneyListCount; }
      }
      public int GetPayMoneyList(int index) {
        return result.GetPayMoneyList(index);
      }
      public Builder SetPayMoneyList(int index, int value) {
        PrepareBuilder();
        result.payMoneyList_[index] = value;
        return this;
      }
      public Builder AddPayMoneyList(int value) {
        PrepareBuilder();
        result.payMoneyList_.Add(value);
        return this;
      }
      public Builder AddRangePayMoneyList(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.payMoneyList_.Add(values);
        return this;
      }
      public Builder ClearPayMoneyList() {
        PrepareBuilder();
        result.payMoneyList_.Clear();
        return this;
      }
      
      public bool HasItemType {
        get { return result.hasItemType; }
      }
      public int ItemType {
        get { return result.ItemType; }
        set { SetItemType(value); }
      }
      public Builder SetItemType(int value) {
        PrepareBuilder();
        result.hasItemType = true;
        result.itemType_ = value;
        return this;
      }
      public Builder ClearItemType() {
        PrepareBuilder();
        result.hasItemType = false;
        result.itemType_ = 0;
        return this;
      }
    }
    static JoinFreeResponsessc() {
      object.ReferenceEquals(global::gt_msg.GtSsc.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ActionRequestssc : pb::GeneratedMessage<ActionRequestssc, ActionRequestssc.Builder> {
    private ActionRequestssc() { }
    private static readonly ActionRequestssc defaultInstance = new ActionRequestssc().MakeReadOnly();
    private static readonly string[] _actionRequestsscFieldNames = new string[] { "PayNumMax", "PayNumMin", "code" };
    private static readonly uint[] _actionRequestsscFieldTags = new uint[] { 24, 16, 8 };
    public static ActionRequestssc DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ActionRequestssc DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ActionRequestssc ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSsc.internal__static_gt_msg_ActionRequestssc__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ActionRequestssc, ActionRequestssc.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSsc.internal__static_gt_msg_ActionRequestssc__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Code {
        BuySeat = 1,
        AutoBuy = 2,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.ActionRequestssc.Types.Code code_ = global::gt_msg.ActionRequestssc.Types.Code.BuySeat;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.ActionRequestssc.Types.Code Code {
      get { return code_; }
    }
    
    public const int PayNumMinFieldNumber = 2;
    private bool hasPayNumMin;
    private long payNumMin_;
    public bool HasPayNumMin {
      get { return hasPayNumMin; }
    }
    public long PayNumMin {
      get { return payNumMin_; }
    }
    
    public const int PayNumMaxFieldNumber = 3;
    private bool hasPayNumMax;
    private int payNumMax_;
    public bool HasPayNumMax {
      get { return hasPayNumMax; }
    }
    public int PayNumMax {
      get { return payNumMax_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _actionRequestsscFieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[2], (int) Code, Code);
      }
      if (hasPayNumMin) {
        output.WriteInt64(2, field_names[1], PayNumMin);
      }
      if (hasPayNumMax) {
        output.WriteInt32(3, field_names[0], PayNumMax);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasPayNumMin) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, PayNumMin);
      }
      if (hasPayNumMax) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, PayNumMax);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ActionRequestssc ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActionRequestssc ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActionRequestssc ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActionRequestssc ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActionRequestssc ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActionRequestssc ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ActionRequestssc ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ActionRequestssc ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ActionRequestssc ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActionRequestssc ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ActionRequestssc MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ActionRequestssc prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ActionRequestssc, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ActionRequestssc cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ActionRequestssc result;
      
      private ActionRequestssc PrepareBuilder() {
        if (resultIsReadOnly) {
          ActionRequestssc original = result;
          result = new ActionRequestssc();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ActionRequestssc MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.ActionRequestssc.Descriptor; }
      }
      
      public override ActionRequestssc DefaultInstanceForType {
        get { return global::gt_msg.ActionRequestssc.DefaultInstance; }
      }
      
      public override ActionRequestssc BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ActionRequestssc) {
          return MergeFrom((ActionRequestssc) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ActionRequestssc other) {
        if (other == global::gt_msg.ActionRequestssc.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasPayNumMin) {
          PayNumMin = other.PayNumMin;
        }
        if (other.HasPayNumMax) {
          PayNumMax = other.PayNumMax;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_actionRequestsscFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _actionRequestsscFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasPayNumMin = input.ReadInt64(ref result.payNumMin_);
              break;
            }
            case 24: {
              result.hasPayNumMax = input.ReadInt32(ref result.payNumMax_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.ActionRequestssc.Types.Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.ActionRequestssc.Types.Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.ActionRequestssc.Types.Code.BuySeat;
        return this;
      }
      
      public bool HasPayNumMin {
        get { return result.hasPayNumMin; }
      }
      public long PayNumMin {
        get { return result.PayNumMin; }
        set { SetPayNumMin(value); }
      }
      public Builder SetPayNumMin(long value) {
        PrepareBuilder();
        result.hasPayNumMin = true;
        result.payNumMin_ = value;
        return this;
      }
      public Builder ClearPayNumMin() {
        PrepareBuilder();
        result.hasPayNumMin = false;
        result.payNumMin_ = 0L;
        return this;
      }
      
      public bool HasPayNumMax {
        get { return result.hasPayNumMax; }
      }
      public int PayNumMax {
        get { return result.PayNumMax; }
        set { SetPayNumMax(value); }
      }
      public Builder SetPayNumMax(int value) {
        PrepareBuilder();
        result.hasPayNumMax = true;
        result.payNumMax_ = value;
        return this;
      }
      public Builder ClearPayNumMax() {
        PrepareBuilder();
        result.hasPayNumMax = false;
        result.payNumMax_ = 0;
        return this;
      }
    }
    static ActionRequestssc() {
      object.ReferenceEquals(global::gt_msg.GtSsc.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ActionResponsessc : pb::GeneratedMessage<ActionResponsessc, ActionResponsessc.Builder> {
    private ActionResponsessc() { }
    private static readonly ActionResponsessc defaultInstance = new ActionResponsessc().MakeReadOnly();
    private static readonly string[] _actionResponsesscFieldNames = new string[] { "code" };
    private static readonly uint[] _actionResponsesscFieldTags = new uint[] { 8 };
    public static ActionResponsessc DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ActionResponsessc DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ActionResponsessc ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSsc.internal__static_gt_msg_ActionResponsessc__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ActionResponsessc, ActionResponsessc.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSsc.internal__static_gt_msg_ActionResponsessc__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Code {
        Ok = 0,
        NoCoin = 1,
        NoOpen = 2,
        REQERR = 3,
        REJECT1 = 4,
        REJECT2 = 5,
        REJECT3 = 6,
        OtherErr = 7,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.ActionResponsessc.Types.Code code_ = global::gt_msg.ActionResponsessc.Types.Code.Ok;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.ActionResponsessc.Types.Code Code {
      get { return code_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _actionResponsesscFieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[0], (int) Code, Code);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ActionResponsessc ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActionResponsessc ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActionResponsessc ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActionResponsessc ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActionResponsessc ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActionResponsessc ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ActionResponsessc ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ActionResponsessc ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ActionResponsessc ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActionResponsessc ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ActionResponsessc MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ActionResponsessc prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ActionResponsessc, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ActionResponsessc cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ActionResponsessc result;
      
      private ActionResponsessc PrepareBuilder() {
        if (resultIsReadOnly) {
          ActionResponsessc original = result;
          result = new ActionResponsessc();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ActionResponsessc MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.ActionResponsessc.Descriptor; }
      }
      
      public override ActionResponsessc DefaultInstanceForType {
        get { return global::gt_msg.ActionResponsessc.DefaultInstance; }
      }
      
      public override ActionResponsessc BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ActionResponsessc) {
          return MergeFrom((ActionResponsessc) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ActionResponsessc other) {
        if (other == global::gt_msg.ActionResponsessc.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_actionResponsesscFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _actionResponsesscFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.ActionResponsessc.Types.Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.ActionResponsessc.Types.Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.ActionResponsessc.Types.Code.Ok;
        return this;
      }
    }
    static ActionResponsessc() {
      object.ReferenceEquals(global::gt_msg.GtSsc.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableStatsRequestssc : pb::GeneratedMessage<TableStatsRequestssc, TableStatsRequestssc.Builder> {
    private TableStatsRequestssc() { }
    private static readonly TableStatsRequestssc defaultInstance = new TableStatsRequestssc().MakeReadOnly();
    private static readonly string[] _tableStatsRequestsscFieldNames = new string[] {  };
    private static readonly uint[] _tableStatsRequestsscFieldTags = new uint[] {  };
    public static TableStatsRequestssc DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableStatsRequestssc DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableStatsRequestssc ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSsc.internal__static_gt_msg_TableStatsRequestssc__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableStatsRequestssc, TableStatsRequestssc.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSsc.internal__static_gt_msg_TableStatsRequestssc__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tableStatsRequestsscFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TableStatsRequestssc ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableStatsRequestssc ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableStatsRequestssc ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableStatsRequestssc ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableStatsRequestssc ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableStatsRequestssc ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableStatsRequestssc ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableStatsRequestssc ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableStatsRequestssc ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableStatsRequestssc ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableStatsRequestssc MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableStatsRequestssc prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableStatsRequestssc, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableStatsRequestssc cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableStatsRequestssc result;
      
      private TableStatsRequestssc PrepareBuilder() {
        if (resultIsReadOnly) {
          TableStatsRequestssc original = result;
          result = new TableStatsRequestssc();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableStatsRequestssc MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.TableStatsRequestssc.Descriptor; }
      }
      
      public override TableStatsRequestssc DefaultInstanceForType {
        get { return global::gt_msg.TableStatsRequestssc.DefaultInstance; }
      }
      
      public override TableStatsRequestssc BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableStatsRequestssc) {
          return MergeFrom((TableStatsRequestssc) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableStatsRequestssc other) {
        if (other == global::gt_msg.TableStatsRequestssc.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableStatsRequestsscFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableStatsRequestsscFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static TableStatsRequestssc() {
      object.ReferenceEquals(global::gt_msg.GtSsc.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableStatsssc : pb::GeneratedMessage<TableStatsssc, TableStatsssc.Builder> {
    private TableStatsssc() { }
    private static readonly TableStatsssc defaultInstance = new TableStatsssc().MakeReadOnly();
    private static readonly string[] _tableStatssscFieldNames = new string[] { "NewNum", "NewPlayPay", "NewSid", "NewTime", "NewTimeLeftSec", "OldNum", "OldSid", "Step", "TableID", "user_info" };
    private static readonly uint[] _tableStatssscFieldTags = new uint[] { 26, 66, 18, 34, 40, 58, 50, 80, 8, 74 };
    public static TableStatsssc DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableStatsssc DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableStatsssc ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSsc.internal__static_gt_msg_TableStatsssc__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableStatsssc, TableStatsssc.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSsc.internal__static_gt_msg_TableStatsssc__FieldAccessorTable; }
    }
    
    public const int TableIDFieldNumber = 1;
    private bool hasTableID;
    private int tableID_;
    public bool HasTableID {
      get { return hasTableID; }
    }
    public int TableID {
      get { return tableID_; }
    }
    
    public const int NewSidFieldNumber = 2;
    private bool hasNewSid;
    private string newSid_ = "";
    public bool HasNewSid {
      get { return hasNewSid; }
    }
    public string NewSid {
      get { return newSid_; }
    }
    
    public const int NewNumFieldNumber = 3;
    private bool hasNewNum;
    private string newNum_ = "";
    public bool HasNewNum {
      get { return hasNewNum; }
    }
    public string NewNum {
      get { return newNum_; }
    }
    
    public const int NewTimeFieldNumber = 4;
    private bool hasNewTime;
    private string newTime_ = "";
    public bool HasNewTime {
      get { return hasNewTime; }
    }
    public string NewTime {
      get { return newTime_; }
    }
    
    public const int NewTimeLeftSecFieldNumber = 5;
    private bool hasNewTimeLeftSec;
    private int newTimeLeftSec_;
    public bool HasNewTimeLeftSec {
      get { return hasNewTimeLeftSec; }
    }
    public int NewTimeLeftSec {
      get { return newTimeLeftSec_; }
    }
    
    public const int OldSidFieldNumber = 6;
    private pbc::PopsicleList<string> oldSid_ = new pbc::PopsicleList<string>();
    public scg::IList<string> OldSidList {
      get { return pbc::Lists.AsReadOnly(oldSid_); }
    }
    public int OldSidCount {
      get { return oldSid_.Count; }
    }
    public string GetOldSid(int index) {
      return oldSid_[index];
    }
    
    public const int OldNumFieldNumber = 7;
    private pbc::PopsicleList<string> oldNum_ = new pbc::PopsicleList<string>();
    public scg::IList<string> OldNumList {
      get { return pbc::Lists.AsReadOnly(oldNum_); }
    }
    public int OldNumCount {
      get { return oldNum_.Count; }
    }
    public string GetOldNum(int index) {
      return oldNum_[index];
    }
    
    public const int NewPlayPayFieldNumber = 8;
    private pbc::PopsicleList<global::gt_msg.ActionRequestssc> newPlayPay_ = new pbc::PopsicleList<global::gt_msg.ActionRequestssc>();
    public scg::IList<global::gt_msg.ActionRequestssc> NewPlayPayList {
      get { return newPlayPay_; }
    }
    public int NewPlayPayCount {
      get { return newPlayPay_.Count; }
    }
    public global::gt_msg.ActionRequestssc GetNewPlayPay(int index) {
      return newPlayPay_[index];
    }
    
    public const int UserInfoFieldNumber = 9;
    private bool hasUserInfo;
    private global::gt_msg.User userInfo_;
    public bool HasUserInfo {
      get { return hasUserInfo; }
    }
    public global::gt_msg.User UserInfo {
      get { return userInfo_ ?? global::gt_msg.User.DefaultInstance; }
    }
    
    public const int StepFieldNumber = 10;
    private bool hasStep;
    private int step_;
    public bool HasStep {
      get { return hasStep; }
    }
    public int Step {
      get { return step_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableID) return false;
        if (!hasNewSid) return false;
        if (!hasNewNum) return false;
        if (!hasNewTime) return false;
        if (!hasNewTimeLeftSec) return false;
        if (!hasUserInfo) return false;
        if (!hasStep) return false;
        foreach (global::gt_msg.ActionRequestssc element in NewPlayPayList) {
          if (!element.IsInitialized) return false;
        }
        if (!UserInfo.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tableStatssscFieldNames;
      if (hasTableID) {
        output.WriteInt32(1, field_names[8], TableID);
      }
      if (hasNewSid) {
        output.WriteString(2, field_names[2], NewSid);
      }
      if (hasNewNum) {
        output.WriteString(3, field_names[0], NewNum);
      }
      if (hasNewTime) {
        output.WriteString(4, field_names[3], NewTime);
      }
      if (hasNewTimeLeftSec) {
        output.WriteInt32(5, field_names[4], NewTimeLeftSec);
      }
      if (oldSid_.Count > 0) {
        output.WriteStringArray(6, field_names[6], oldSid_);
      }
      if (oldNum_.Count > 0) {
        output.WriteStringArray(7, field_names[5], oldNum_);
      }
      if (newPlayPay_.Count > 0) {
        output.WriteMessageArray(8, field_names[1], newPlayPay_);
      }
      if (hasUserInfo) {
        output.WriteMessage(9, field_names[9], UserInfo);
      }
      if (hasStep) {
        output.WriteInt32(10, field_names[7], Step);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableID) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, TableID);
      }
      if (hasNewSid) {
        size += pb::CodedOutputStream.ComputeStringSize(2, NewSid);
      }
      if (hasNewNum) {
        size += pb::CodedOutputStream.ComputeStringSize(3, NewNum);
      }
      if (hasNewTime) {
        size += pb::CodedOutputStream.ComputeStringSize(4, NewTime);
      }
      if (hasNewTimeLeftSec) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, NewTimeLeftSec);
      }
      {
        int dataSize = 0;
        foreach (string element in OldSidList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * oldSid_.Count;
      }
      {
        int dataSize = 0;
        foreach (string element in OldNumList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * oldNum_.Count;
      }
      foreach (global::gt_msg.ActionRequestssc element in NewPlayPayList) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, element);
      }
      if (hasUserInfo) {
        size += pb::CodedOutputStream.ComputeMessageSize(9, UserInfo);
      }
      if (hasStep) {
        size += pb::CodedOutputStream.ComputeInt32Size(10, Step);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TableStatsssc ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableStatsssc ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableStatsssc ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableStatsssc ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableStatsssc ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableStatsssc ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableStatsssc ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableStatsssc ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableStatsssc ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableStatsssc ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableStatsssc MakeReadOnly() {
      oldSid_.MakeReadOnly();
      oldNum_.MakeReadOnly();
      newPlayPay_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableStatsssc prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableStatsssc, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableStatsssc cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableStatsssc result;
      
      private TableStatsssc PrepareBuilder() {
        if (resultIsReadOnly) {
          TableStatsssc original = result;
          result = new TableStatsssc();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableStatsssc MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.TableStatsssc.Descriptor; }
      }
      
      public override TableStatsssc DefaultInstanceForType {
        get { return global::gt_msg.TableStatsssc.DefaultInstance; }
      }
      
      public override TableStatsssc BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableStatsssc) {
          return MergeFrom((TableStatsssc) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableStatsssc other) {
        if (other == global::gt_msg.TableStatsssc.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableID) {
          TableID = other.TableID;
        }
        if (other.HasNewSid) {
          NewSid = other.NewSid;
        }
        if (other.HasNewNum) {
          NewNum = other.NewNum;
        }
        if (other.HasNewTime) {
          NewTime = other.NewTime;
        }
        if (other.HasNewTimeLeftSec) {
          NewTimeLeftSec = other.NewTimeLeftSec;
        }
        if (other.oldSid_.Count != 0) {
          result.oldSid_.Add(other.oldSid_);
        }
        if (other.oldNum_.Count != 0) {
          result.oldNum_.Add(other.oldNum_);
        }
        if (other.newPlayPay_.Count != 0) {
          result.newPlayPay_.Add(other.newPlayPay_);
        }
        if (other.HasUserInfo) {
          MergeUserInfo(other.UserInfo);
        }
        if (other.HasStep) {
          Step = other.Step;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableStatssscFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableStatssscFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTableID = input.ReadInt32(ref result.tableID_);
              break;
            }
            case 18: {
              result.hasNewSid = input.ReadString(ref result.newSid_);
              break;
            }
            case 26: {
              result.hasNewNum = input.ReadString(ref result.newNum_);
              break;
            }
            case 34: {
              result.hasNewTime = input.ReadString(ref result.newTime_);
              break;
            }
            case 40: {
              result.hasNewTimeLeftSec = input.ReadInt32(ref result.newTimeLeftSec_);
              break;
            }
            case 50: {
              input.ReadStringArray(tag, field_name, result.oldSid_);
              break;
            }
            case 58: {
              input.ReadStringArray(tag, field_name, result.oldNum_);
              break;
            }
            case 66: {
              input.ReadMessageArray(tag, field_name, result.newPlayPay_, global::gt_msg.ActionRequestssc.DefaultInstance, extensionRegistry);
              break;
            }
            case 74: {
              global::gt_msg.User.Builder subBuilder = global::gt_msg.User.CreateBuilder();
              if (result.hasUserInfo) {
                subBuilder.MergeFrom(UserInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserInfo = subBuilder.BuildPartial();
              break;
            }
            case 80: {
              result.hasStep = input.ReadInt32(ref result.step_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableID {
        get { return result.hasTableID; }
      }
      public int TableID {
        get { return result.TableID; }
        set { SetTableID(value); }
      }
      public Builder SetTableID(int value) {
        PrepareBuilder();
        result.hasTableID = true;
        result.tableID_ = value;
        return this;
      }
      public Builder ClearTableID() {
        PrepareBuilder();
        result.hasTableID = false;
        result.tableID_ = 0;
        return this;
      }
      
      public bool HasNewSid {
        get { return result.hasNewSid; }
      }
      public string NewSid {
        get { return result.NewSid; }
        set { SetNewSid(value); }
      }
      public Builder SetNewSid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNewSid = true;
        result.newSid_ = value;
        return this;
      }
      public Builder ClearNewSid() {
        PrepareBuilder();
        result.hasNewSid = false;
        result.newSid_ = "";
        return this;
      }
      
      public bool HasNewNum {
        get { return result.hasNewNum; }
      }
      public string NewNum {
        get { return result.NewNum; }
        set { SetNewNum(value); }
      }
      public Builder SetNewNum(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNewNum = true;
        result.newNum_ = value;
        return this;
      }
      public Builder ClearNewNum() {
        PrepareBuilder();
        result.hasNewNum = false;
        result.newNum_ = "";
        return this;
      }
      
      public bool HasNewTime {
        get { return result.hasNewTime; }
      }
      public string NewTime {
        get { return result.NewTime; }
        set { SetNewTime(value); }
      }
      public Builder SetNewTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNewTime = true;
        result.newTime_ = value;
        return this;
      }
      public Builder ClearNewTime() {
        PrepareBuilder();
        result.hasNewTime = false;
        result.newTime_ = "";
        return this;
      }
      
      public bool HasNewTimeLeftSec {
        get { return result.hasNewTimeLeftSec; }
      }
      public int NewTimeLeftSec {
        get { return result.NewTimeLeftSec; }
        set { SetNewTimeLeftSec(value); }
      }
      public Builder SetNewTimeLeftSec(int value) {
        PrepareBuilder();
        result.hasNewTimeLeftSec = true;
        result.newTimeLeftSec_ = value;
        return this;
      }
      public Builder ClearNewTimeLeftSec() {
        PrepareBuilder();
        result.hasNewTimeLeftSec = false;
        result.newTimeLeftSec_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<string> OldSidList {
        get { return PrepareBuilder().oldSid_; }
      }
      public int OldSidCount {
        get { return result.OldSidCount; }
      }
      public string GetOldSid(int index) {
        return result.GetOldSid(index);
      }
      public Builder SetOldSid(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.oldSid_[index] = value;
        return this;
      }
      public Builder AddOldSid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.oldSid_.Add(value);
        return this;
      }
      public Builder AddRangeOldSid(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.oldSid_.Add(values);
        return this;
      }
      public Builder ClearOldSid() {
        PrepareBuilder();
        result.oldSid_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> OldNumList {
        get { return PrepareBuilder().oldNum_; }
      }
      public int OldNumCount {
        get { return result.OldNumCount; }
      }
      public string GetOldNum(int index) {
        return result.GetOldNum(index);
      }
      public Builder SetOldNum(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.oldNum_[index] = value;
        return this;
      }
      public Builder AddOldNum(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.oldNum_.Add(value);
        return this;
      }
      public Builder AddRangeOldNum(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.oldNum_.Add(values);
        return this;
      }
      public Builder ClearOldNum() {
        PrepareBuilder();
        result.oldNum_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::gt_msg.ActionRequestssc> NewPlayPayList {
        get { return PrepareBuilder().newPlayPay_; }
      }
      public int NewPlayPayCount {
        get { return result.NewPlayPayCount; }
      }
      public global::gt_msg.ActionRequestssc GetNewPlayPay(int index) {
        return result.GetNewPlayPay(index);
      }
      public Builder SetNewPlayPay(int index, global::gt_msg.ActionRequestssc value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.newPlayPay_[index] = value;
        return this;
      }
      public Builder SetNewPlayPay(int index, global::gt_msg.ActionRequestssc.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.newPlayPay_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddNewPlayPay(global::gt_msg.ActionRequestssc value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.newPlayPay_.Add(value);
        return this;
      }
      public Builder AddNewPlayPay(global::gt_msg.ActionRequestssc.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.newPlayPay_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeNewPlayPay(scg::IEnumerable<global::gt_msg.ActionRequestssc> values) {
        PrepareBuilder();
        result.newPlayPay_.Add(values);
        return this;
      }
      public Builder ClearNewPlayPay() {
        PrepareBuilder();
        result.newPlayPay_.Clear();
        return this;
      }
      
      public bool HasUserInfo {
       get { return result.hasUserInfo; }
      }
      public global::gt_msg.User UserInfo {
        get { return result.UserInfo; }
        set { SetUserInfo(value); }
      }
      public Builder SetUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = value;
        return this;
      }
      public Builder SetUserInfo(global::gt_msg.User.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserInfo &&
            result.userInfo_ != global::gt_msg.User.DefaultInstance) {
            result.userInfo_ = global::gt_msg.User.CreateBuilder(result.userInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.userInfo_ = value;
        }
        result.hasUserInfo = true;
        return this;
      }
      public Builder ClearUserInfo() {
        PrepareBuilder();
        result.hasUserInfo = false;
        result.userInfo_ = null;
        return this;
      }
      
      public bool HasStep {
        get { return result.hasStep; }
      }
      public int Step {
        get { return result.Step; }
        set { SetStep(value); }
      }
      public Builder SetStep(int value) {
        PrepareBuilder();
        result.hasStep = true;
        result.step_ = value;
        return this;
      }
      public Builder ClearStep() {
        PrepareBuilder();
        result.hasStep = false;
        result.step_ = 0;
        return this;
      }
    }
    static TableStatsssc() {
      object.ReferenceEquals(global::gt_msg.GtSsc.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ForceExitTableRequestssc : pb::GeneratedMessage<ForceExitTableRequestssc, ForceExitTableRequestssc.Builder> {
    private ForceExitTableRequestssc() { }
    private static readonly ForceExitTableRequestssc defaultInstance = new ForceExitTableRequestssc().MakeReadOnly();
    private static readonly string[] _forceExitTableRequestsscFieldNames = new string[] {  };
    private static readonly uint[] _forceExitTableRequestsscFieldTags = new uint[] {  };
    public static ForceExitTableRequestssc DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ForceExitTableRequestssc DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ForceExitTableRequestssc ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSsc.internal__static_gt_msg_ForceExitTableRequestssc__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ForceExitTableRequestssc, ForceExitTableRequestssc.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSsc.internal__static_gt_msg_ForceExitTableRequestssc__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _forceExitTableRequestsscFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ForceExitTableRequestssc ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ForceExitTableRequestssc ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableRequestssc ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ForceExitTableRequestssc ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableRequestssc ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ForceExitTableRequestssc ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableRequestssc ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ForceExitTableRequestssc ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ForceExitTableRequestssc ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ForceExitTableRequestssc ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ForceExitTableRequestssc MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ForceExitTableRequestssc prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ForceExitTableRequestssc, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ForceExitTableRequestssc cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ForceExitTableRequestssc result;
      
      private ForceExitTableRequestssc PrepareBuilder() {
        if (resultIsReadOnly) {
          ForceExitTableRequestssc original = result;
          result = new ForceExitTableRequestssc();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ForceExitTableRequestssc MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.ForceExitTableRequestssc.Descriptor; }
      }
      
      public override ForceExitTableRequestssc DefaultInstanceForType {
        get { return global::gt_msg.ForceExitTableRequestssc.DefaultInstance; }
      }
      
      public override ForceExitTableRequestssc BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ForceExitTableRequestssc) {
          return MergeFrom((ForceExitTableRequestssc) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ForceExitTableRequestssc other) {
        if (other == global::gt_msg.ForceExitTableRequestssc.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_forceExitTableRequestsscFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _forceExitTableRequestsscFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static ForceExitTableRequestssc() {
      object.ReferenceEquals(global::gt_msg.GtSsc.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ForceExitTableResponsessc : pb::GeneratedMessage<ForceExitTableResponsessc, ForceExitTableResponsessc.Builder> {
    private ForceExitTableResponsessc() { }
    private static readonly ForceExitTableResponsessc defaultInstance = new ForceExitTableResponsessc().MakeReadOnly();
    private static readonly string[] _forceExitTableResponsesscFieldNames = new string[] { "code" };
    private static readonly uint[] _forceExitTableResponsesscFieldTags = new uint[] { 8 };
    public static ForceExitTableResponsessc DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ForceExitTableResponsessc DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ForceExitTableResponsessc ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSsc.internal__static_gt_msg_ForceExitTableResponsessc__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ForceExitTableResponsessc, ForceExitTableResponsessc.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSsc.internal__static_gt_msg_ForceExitTableResponsessc__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Code {
        Normal = 0,
        GiveUp = 1,
        NoEnoughMoney = 2,
        ChangeTable = 3,
        CanNotExitForPlaying = 4,
        CanNotChangeTableForPlaying = 5,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.ForceExitTableResponsessc.Types.Code code_ = global::gt_msg.ForceExitTableResponsessc.Types.Code.Normal;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.ForceExitTableResponsessc.Types.Code Code {
      get { return code_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _forceExitTableResponsesscFieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[0], (int) Code, Code);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ForceExitTableResponsessc ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ForceExitTableResponsessc ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableResponsessc ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ForceExitTableResponsessc ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableResponsessc ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ForceExitTableResponsessc ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableResponsessc ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ForceExitTableResponsessc ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ForceExitTableResponsessc ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ForceExitTableResponsessc ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ForceExitTableResponsessc MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ForceExitTableResponsessc prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ForceExitTableResponsessc, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ForceExitTableResponsessc cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ForceExitTableResponsessc result;
      
      private ForceExitTableResponsessc PrepareBuilder() {
        if (resultIsReadOnly) {
          ForceExitTableResponsessc original = result;
          result = new ForceExitTableResponsessc();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ForceExitTableResponsessc MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.ForceExitTableResponsessc.Descriptor; }
      }
      
      public override ForceExitTableResponsessc DefaultInstanceForType {
        get { return global::gt_msg.ForceExitTableResponsessc.DefaultInstance; }
      }
      
      public override ForceExitTableResponsessc BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ForceExitTableResponsessc) {
          return MergeFrom((ForceExitTableResponsessc) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ForceExitTableResponsessc other) {
        if (other == global::gt_msg.ForceExitTableResponsessc.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_forceExitTableResponsesscFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _forceExitTableResponsesscFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.ForceExitTableResponsessc.Types.Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.ForceExitTableResponsessc.Types.Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.ForceExitTableResponsessc.Types.Code.Normal;
        return this;
      }
    }
    static ForceExitTableResponsessc() {
      object.ReferenceEquals(global::gt_msg.GtSsc.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
