// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace gt_msg {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class GtSg101 {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_gt_msg_JoinFreeRequestsg101__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.JoinFreeRequestsg101, global::gt_msg.JoinFreeRequestsg101.Builder> internal__static_gt_msg_JoinFreeRequestsg101__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_JoinFreeResponsesg101__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.JoinFreeResponsesg101, global::gt_msg.JoinFreeResponsesg101.Builder> internal__static_gt_msg_JoinFreeResponsesg101__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_ActionRequestsg101__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.ActionRequestsg101, global::gt_msg.ActionRequestsg101.Builder> internal__static_gt_msg_ActionRequestsg101__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_ActionResponsesg101__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.ActionResponsesg101, global::gt_msg.ActionResponsesg101.Builder> internal__static_gt_msg_ActionResponsesg101__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_UserPaysg101__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserPaysg101, global::gt_msg.UserPaysg101.Builder> internal__static_gt_msg_UserPaysg101__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_TableUserStatssg101__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableUserStatssg101, global::gt_msg.TableUserStatssg101.Builder> internal__static_gt_msg_TableUserStatssg101__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_TableStatssg101__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableStatssg101, global::gt_msg.TableStatssg101.Builder> internal__static_gt_msg_TableStatssg101__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_TableUserResultsg101__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableUserResultsg101, global::gt_msg.TableUserResultsg101.Builder> internal__static_gt_msg_TableUserResultsg101__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_RoundEndedEventsg101__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.RoundEndedEventsg101, global::gt_msg.RoundEndedEventsg101.Builder> internal__static_gt_msg_RoundEndedEventsg101__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_ForceExitTableRequestsg101__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.ForceExitTableRequestsg101, global::gt_msg.ForceExitTableRequestsg101.Builder> internal__static_gt_msg_ForceExitTableRequestsg101__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_ForceExitTableResponsesg101__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.ForceExitTableResponsesg101, global::gt_msg.ForceExitTableResponsesg101.Builder> internal__static_gt_msg_ForceExitTableResponsesg101__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_GameLifeRequestsg101__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameLifeRequestsg101, global::gt_msg.GameLifeRequestsg101.Builder> internal__static_gt_msg_GameLifeRequestsg101__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_GameLifeResponsesg101__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameLifeResponsesg101, global::gt_msg.GameLifeResponsesg101.Builder> internal__static_gt_msg_GameLifeResponsesg101__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_GameRankListRequestsg101__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameRankListRequestsg101, global::gt_msg.GameRankListRequestsg101.Builder> internal__static_gt_msg_GameRankListRequestsg101__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_GameRankListResponsesg101__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameRankListResponsesg101, global::gt_msg.GameRankListResponsesg101.Builder> internal__static_gt_msg_GameRankListResponsesg101__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_HistoryLwRequestsg101__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.HistoryLwRequestsg101, global::gt_msg.HistoryLwRequestsg101.Builder> internal__static_gt_msg_HistoryLwRequestsg101__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_LwDatesg101__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.LwDatesg101, global::gt_msg.LwDatesg101.Builder> internal__static_gt_msg_LwDatesg101__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_HistoryLwResponsesg101__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.HistoryLwResponsesg101, global::gt_msg.HistoryLwResponsesg101.Builder> internal__static_gt_msg_HistoryLwResponsesg101__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_RankDayRequestsg101__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.RankDayRequestsg101, global::gt_msg.RankDayRequestsg101.Builder> internal__static_gt_msg_RankDayRequestsg101__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_RankDayResponsesg101__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.RankDayResponsesg101, global::gt_msg.RankDayResponsesg101.Builder> internal__static_gt_msg_RankDayResponsesg101__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_RankWeekRequestsg101__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.RankWeekRequestsg101, global::gt_msg.RankWeekRequestsg101.Builder> internal__static_gt_msg_RankWeekRequestsg101__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_RankWeekResponsesg101__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.RankWeekResponsesg101, global::gt_msg.RankWeekResponsesg101.Builder> internal__static_gt_msg_RankWeekResponsesg101__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static GtSg101() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5ndF9zZzEwMS5wcm90bxIGZ3RfbXNnGg1ndF9iYXNlLnByb3RvIl8KFEpv", 
            "aW5GcmVlUmVxdWVzdHNnMTAxEg8KB3VzZXJfaWQYASACKAkSGgoEcnVsZRgC", 
            "IAIoDjIMLmd0X21zZy5SdWxlEhoKBHJhbmsYAyABKA4yDC5ndF9tc2cuUmFu", 
            "ayKOBAoVSm9pbkZyZWVSZXNwb25zZXNnMTAxEkUKBGNvZGUYASACKA4yNy5n", 
            "dF9tc2cuSm9pbkZyZWVSZXNwb25zZXNnMTAxLkpvaW5GcmVlUmVzcG9uc2Vz", 
            "ZzEwMUNvZGUSGAoQcmVjb25uZWN0ZWRfdXNlchgCIAEoCBIRCgltaW5fY29p", 
            "bnMYAyABKAMSGAoQaGFzX2Jhc2ljX2xpdmluZxgEIAEoCBIeChZiYXNpY19s", 
            "aXZpbmdfYWxsX3RpbWVzGAUgASgFEh4KFmJhc2ljX2xpdmluZ191c2VfdGlt", 
            "ZXMYBiABKAUSGgoSYmFzaWNfbGl2aW5nX2NvaW5zGAcgASgFEiIKDHJhbmtf", 
            "cmVxdWVzdBgIIAEoDjIMLmd0X21zZy5SYW5rEhoKBHJhbmsYCSABKA4yDC5n", 
            "dF9tc2cuUmFuaxIrCgpnYW1lX3N0YXRzGAogASgLMhcuZ3RfbXNnLlRhYmxl", 
            "U3RhdHNzZzEwMRIUCgxQYXlNb25leUxpc3QYCyADKAUSEAoISXRlbVR5cGUY", 
            "DCACKAUidgoZSm9pbkZyZWVSZXNwb25zZXNnMTAxQ29kZRIGCgJPaxAAEhgK", 
            "FE1pbmltdW1Db2luc1JlcXVpcmVkEAESGgoWTWluaW11bURpYW1vbmRSZXF1", 
            "aXJlZBACEhAKDE5vVGFibGVBdmFpbBADEgkKBU90aGVyEAQirwEKEkFjdGlv", 
            "blJlcXVlc3RzZzEwMRI/CgRjb2RlGAEgAigOMjEuZ3RfbXNnLkFjdGlvblJl", 
            "cXVlc3RzZzEwMS5BY3Rpb25SZXF1ZXN0c2cxMDFDb2RlEhEKCVBheU51bU1p", 
            "bhgCIAEoAxIRCglQYXlOdW1NYXgYAyABKAUiMgoWQWN0aW9uUmVxdWVzdHNn", 
            "MTAxQ29kZRILCgdCdXlTZWF0EAESCwoHQXV0b0J1eRACIvwBChNBY3Rpb25S", 
            "ZXNwb25zZXNnMTAxEkEKBGNvZGUYASACKA4yMy5ndF9tc2cuQWN0aW9uUmVz", 
            "cG9uc2VzZzEwMS5BY3Rpb25SZXNwb25zZXNnMTAxQ29kZSKhAQoXQWN0aW9u", 
            "UmVzcG9uc2VzZzEwMUNvZGUSBgoCT0sQABIRCg1QbGF5ZXJOb0V4aXN0EAES", 
            "DgoKUGxheWVyRnVsbBACEhEKDUFjdGlvblR5cGVFcnIQAxIQCgxDYW5ub3RB", 
            "Y3Rpb24QBBIRCg1Nb25leU5vRW5vdWdoEAUSGAoUQXV0b0J1eU5vRW5vdWdo", 
            "TW9uZXkQBhIJCgVPdGhlchAHIjkKDFVzZXJQYXlzZzEwMRIMCgRzZWF0GAEg", 
            "AigDEgwKBHJhdGUYAiABKAUSDQoFdmFsdWUYAyACKAMilAEKE1RhYmxlVXNl", 
            "clN0YXRzc2cxMDESHwoJdXNlcl9pbmZvGAEgAigLMgwuZ3RfbXNnLlVzZXIS", 
            "KQoLUG9pbnRPblNlYXQYAiADKAsyFC5ndF9tc2cuVXNlclBheXNnMTAxEjEK", 
            "DU5ld0FjdGlvbkxpc3QYAyADKAsyGi5ndF9tc2cuQWN0aW9uUmVxdWVzdHNn", 
            "MTAxItUBCg9UYWJsZVN0YXRzc2cxMDESDwoHVGFibGVJRBgBIAIoBRINCgVT", 
            "dGFnZRgCIAIoBRIaCgRSYW5rGAMgAigOMgwuZ3RfbXNnLlJhbmsSGgoEUnVs", 
            "ZRgEIAIoDjIMLmd0X21zZy5SdWxlEhkKEU5leHRBY3Rpb25UaW1lT3V0GAUg", 
            "AigFEgwKBFN0ZXAYBiACKAUSLQoIVXNlclNlbGYYByABKAsyGy5ndF9tc2cu", 
            "VGFibGVVc2VyU3RhdHNzZzEwMRISCgpUYWJsZU1vbmV5GAggASgDIskBChRU", 
            "YWJsZVVzZXJSZXN1bHRzZzEwMRIfCgl1c2VyX2luZm8YASACKAsyDC5ndF9t", 
            "c2cuVXNlchIpCgtQb2ludE9uU2VhdBgCIAMoCzIULmd0X21zZy5Vc2VyUGF5", 
            "c2cxMDESJgoITFdPblNlYXQYAyADKAsyFC5ndF9tc2cuVXNlclBheXNnMTAx", 
            "Eg0KBWV4cGx3GAQgASgDEgsKA1RBWBgFIAEoAxITCgtDb250aW51ZVdpbhgG", 
            "IAEoBRIMCgRSYW5rGAcgASgFItsBChRSb3VuZEVuZGVkRXZlbnRzZzEwMRIP", 
            "CgdUYWJsZUlEGAEgAigFEhwKFE5leHRTdGFydFRpbWVvdXRTZWNzGAIgAigF", 
            "Ei4KCFVzZXJTZWxmGAMgASgLMhwuZ3RfbXNnLlRhYmxlVXNlclJlc3VsdHNn", 
            "MTAxEg8KB1dpbk5pY2sYBCADKAkSDgoGV2luTnVtGAUgAygDEg0KBUV4cGx3", 
            "GAYgAygDEhAKCE9wZW5TZWF0GAcgAygFEg8KB1dpblNlYXQYCCADKAUSEQoJ", 
            "QmVnaW5JdGVtGAkgAygFIhwKGkZvcmNlRXhpdFRhYmxlUmVxdWVzdHNnMTAx", 
            "ItQBChtGb3JjZUV4aXRUYWJsZVJlc3BvbnNlc2cxMDESNgoEY29kZRgBIAIo", 
            "DjIoLmd0X21zZy5Gb3JjZUV4aXRUYWJsZVJlc3BvbnNlc2cxMDEuQ29kZSJ9", 
            "CgRDb2RlEgoKBk5vcm1hbBAAEgoKBkdpdmVVcBABEhEKDU5vRW5vdWdoTW9u", 
            "ZXkQAhIPCgtDaGFuZ2VUYWJsZRADEhgKFENhbk5vdEV4aXRGb3JQbGF5aW5n", 
            "EAQSHwobQ2FuTm90Q2hhbmdlVGFibGVGb3JQbGF5aW5nEAUiIwoUR2FtZUxp", 
            "ZmVSZXF1ZXN0c2cxMDESCwoDdWlkGAEgAigJItwDChVHYW1lTGlmZVJlc3Bv", 
            "bnNlc2cxMDESMAoEY29kZRgBIAIoDjIiLmd0X21zZy5HYW1lTGlmZVJlc3Bv", 
            "bnNlc2cxMDEuQ29kZRIfCgl1c2VyX2luZm8YAiACKAsyDC5ndF9tc2cuVXNl", 
            "chIQCgh3aW5UaW1lcxgDIAEoBRIRCglsb3N0VGltZXMYBCABKAUSEwoLY29u", 
            "dGludWVXaW4YBSABKAUSFgoObGV2ZWwxV2luQ2hpcHMYBiABKAMSGgoSbGV2", 
            "ZWwxV2luQ2hpcHNSYW5rGAcgASgFEhYKDmxldmVsMldpbkNoaXBzGAggASgD", 
            "EhoKEmxldmVsMldpbkNoaXBzUmFuaxgJIAEoBRIWCg5sZXZlbDNXaW5DaGlw", 
            "cxgKIAEoAxIaChJsZXZlbDNXaW5DaGlwc1JhbmsYCyABKAUSFgoObGV2ZWw0", 
            "V2luQ2hpcHMYDCABKAMSGgoSbGV2ZWw0V2luQ2hpcHNSYW5rGA0gASgFEhYK", 
            "DmxldmVsNVdpbkNoaXBzGA4gASgDEhoKEmxldmVsNVdpbkNoaXBzUmFuaxgP", 
            "IAEoBRIWCg5nYW1lQWxsVXNlck51bRgQIAEoBSIaCgRDb2RlEgYKAk9rEAAS", 
            "CgoGRmFpbGVkEAEiGgoYR2FtZVJhbmtMaXN0UmVxdWVzdHNnMTAxIrcBChlH", 
            "YW1lUmFua0xpc3RSZXNwb25zZXNnMTAxEjQKBGNvZGUYASACKA4yJi5ndF9t", 
            "c2cuR2FtZVJhbmtMaXN0UmVzcG9uc2VzZzEwMS5Db2RlEgsKA3VpZBgCIAIo", 
            "CRIVCg1kYXlfd2luX2NoaXBzGAMgAygJEhEKCWFsbF90aW1lcxgEIAMoCRIR", 
            "CglhbGxfY2hpcHMYBSADKAkiGgoEQ29kZRIGCgJPaxAAEgoKBkZhaWxlZBAB", 
            "IhcKFUhpc3RvcnlMd1JlcXVlc3RzZzEwMSJUCgtMd0RhdGVzZzEwMRIKCgJp", 
            "ZBgBIAIoBRIMCgRuaWNrGAIgASgJEgoKAmx3GAMgASgDEg0KBWV4cGx3GAQg", 
            "ASgDEhAKCG9wZW5pdGVtGAUgAygFImYKFkhpc3RvcnlMd1Jlc3BvbnNlc2cx", 
            "MDESIAoDaGx3GAEgAygLMhMuZ3RfbXNnLkx3RGF0ZXNnMTAxEhQKDHBheWl0", 
            "ZW02dGltZRgCIAEoBRIUCgxwYXlpdGVtN3RpbWUYAyABKAUiFQoTUmFua0Rh", 
            "eVJlcXVlc3RzZzEwMSJEChRSYW5rRGF5UmVzcG9uc2VzZzEwMRIPCgdmYWNl", 
            "dXJsGAEgAygJEgwKBG5pY2sYAiADKAkSDQoFc2NvcmUYAyADKAMiFgoUUmFu", 
            "a1dlZWtSZXF1ZXN0c2cxMDEiVgoVUmFua1dlZWtSZXNwb25zZXNnMTAxEg8K", 
            "B2ZhY2V1cmwYASADKAkSDwoHdGhlZGF0ZRgCIAMoCRIMCgRuaWNrGAMgAygJ", 
          "Eg0KBXNjb3JlGAQgAygD"));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_gt_msg_JoinFreeRequestsg101__Descriptor = Descriptor.MessageTypes[0];
        internal__static_gt_msg_JoinFreeRequestsg101__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.JoinFreeRequestsg101, global::gt_msg.JoinFreeRequestsg101.Builder>(internal__static_gt_msg_JoinFreeRequestsg101__Descriptor,
                new string[] { "UserId", "Rule", "Rank", });
        internal__static_gt_msg_JoinFreeResponsesg101__Descriptor = Descriptor.MessageTypes[1];
        internal__static_gt_msg_JoinFreeResponsesg101__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.JoinFreeResponsesg101, global::gt_msg.JoinFreeResponsesg101.Builder>(internal__static_gt_msg_JoinFreeResponsesg101__Descriptor,
                new string[] { "Code", "ReconnectedUser", "MinCoins", "HasBasicLiving", "BasicLivingAllTimes", "BasicLivingUseTimes", "BasicLivingCoins", "RankRequest", "Rank", "GameStats", "PayMoneyList", "ItemType", });
        internal__static_gt_msg_ActionRequestsg101__Descriptor = Descriptor.MessageTypes[2];
        internal__static_gt_msg_ActionRequestsg101__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.ActionRequestsg101, global::gt_msg.ActionRequestsg101.Builder>(internal__static_gt_msg_ActionRequestsg101__Descriptor,
                new string[] { "Code", "PayNumMin", "PayNumMax", });
        internal__static_gt_msg_ActionResponsesg101__Descriptor = Descriptor.MessageTypes[3];
        internal__static_gt_msg_ActionResponsesg101__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.ActionResponsesg101, global::gt_msg.ActionResponsesg101.Builder>(internal__static_gt_msg_ActionResponsesg101__Descriptor,
                new string[] { "Code", });
        internal__static_gt_msg_UserPaysg101__Descriptor = Descriptor.MessageTypes[4];
        internal__static_gt_msg_UserPaysg101__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserPaysg101, global::gt_msg.UserPaysg101.Builder>(internal__static_gt_msg_UserPaysg101__Descriptor,
                new string[] { "Seat", "Rate", "Value", });
        internal__static_gt_msg_TableUserStatssg101__Descriptor = Descriptor.MessageTypes[5];
        internal__static_gt_msg_TableUserStatssg101__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableUserStatssg101, global::gt_msg.TableUserStatssg101.Builder>(internal__static_gt_msg_TableUserStatssg101__Descriptor,
                new string[] { "UserInfo", "PointOnSeat", "NewActionList", });
        internal__static_gt_msg_TableStatssg101__Descriptor = Descriptor.MessageTypes[6];
        internal__static_gt_msg_TableStatssg101__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableStatssg101, global::gt_msg.TableStatssg101.Builder>(internal__static_gt_msg_TableStatssg101__Descriptor,
                new string[] { "TableID", "Stage", "Rank", "Rule", "NextActionTimeOut", "Step", "UserSelf", "TableMoney", });
        internal__static_gt_msg_TableUserResultsg101__Descriptor = Descriptor.MessageTypes[7];
        internal__static_gt_msg_TableUserResultsg101__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableUserResultsg101, global::gt_msg.TableUserResultsg101.Builder>(internal__static_gt_msg_TableUserResultsg101__Descriptor,
                new string[] { "UserInfo", "PointOnSeat", "LWOnSeat", "Explw", "TAX", "ContinueWin", "Rank", });
        internal__static_gt_msg_RoundEndedEventsg101__Descriptor = Descriptor.MessageTypes[8];
        internal__static_gt_msg_RoundEndedEventsg101__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.RoundEndedEventsg101, global::gt_msg.RoundEndedEventsg101.Builder>(internal__static_gt_msg_RoundEndedEventsg101__Descriptor,
                new string[] { "TableID", "NextStartTimeoutSecs", "UserSelf", "WinNick", "WinNum", "Explw", "OpenSeat", "WinSeat", "BeginItem", });
        internal__static_gt_msg_ForceExitTableRequestsg101__Descriptor = Descriptor.MessageTypes[9];
        internal__static_gt_msg_ForceExitTableRequestsg101__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.ForceExitTableRequestsg101, global::gt_msg.ForceExitTableRequestsg101.Builder>(internal__static_gt_msg_ForceExitTableRequestsg101__Descriptor,
                new string[] { });
        internal__static_gt_msg_ForceExitTableResponsesg101__Descriptor = Descriptor.MessageTypes[10];
        internal__static_gt_msg_ForceExitTableResponsesg101__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.ForceExitTableResponsesg101, global::gt_msg.ForceExitTableResponsesg101.Builder>(internal__static_gt_msg_ForceExitTableResponsesg101__Descriptor,
                new string[] { "Code", });
        internal__static_gt_msg_GameLifeRequestsg101__Descriptor = Descriptor.MessageTypes[11];
        internal__static_gt_msg_GameLifeRequestsg101__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameLifeRequestsg101, global::gt_msg.GameLifeRequestsg101.Builder>(internal__static_gt_msg_GameLifeRequestsg101__Descriptor,
                new string[] { "Uid", });
        internal__static_gt_msg_GameLifeResponsesg101__Descriptor = Descriptor.MessageTypes[12];
        internal__static_gt_msg_GameLifeResponsesg101__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameLifeResponsesg101, global::gt_msg.GameLifeResponsesg101.Builder>(internal__static_gt_msg_GameLifeResponsesg101__Descriptor,
                new string[] { "Code", "UserInfo", "WinTimes", "LostTimes", "ContinueWin", "Level1WinChips", "Level1WinChipsRank", "Level2WinChips", "Level2WinChipsRank", "Level3WinChips", "Level3WinChipsRank", "Level4WinChips", "Level4WinChipsRank", "Level5WinChips", "Level5WinChipsRank", "GameAllUserNum", });
        internal__static_gt_msg_GameRankListRequestsg101__Descriptor = Descriptor.MessageTypes[13];
        internal__static_gt_msg_GameRankListRequestsg101__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameRankListRequestsg101, global::gt_msg.GameRankListRequestsg101.Builder>(internal__static_gt_msg_GameRankListRequestsg101__Descriptor,
                new string[] { });
        internal__static_gt_msg_GameRankListResponsesg101__Descriptor = Descriptor.MessageTypes[14];
        internal__static_gt_msg_GameRankListResponsesg101__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameRankListResponsesg101, global::gt_msg.GameRankListResponsesg101.Builder>(internal__static_gt_msg_GameRankListResponsesg101__Descriptor,
                new string[] { "Code", "Uid", "DayWinChips", "AllTimes", "AllChips", });
        internal__static_gt_msg_HistoryLwRequestsg101__Descriptor = Descriptor.MessageTypes[15];
        internal__static_gt_msg_HistoryLwRequestsg101__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.HistoryLwRequestsg101, global::gt_msg.HistoryLwRequestsg101.Builder>(internal__static_gt_msg_HistoryLwRequestsg101__Descriptor,
                new string[] { });
        internal__static_gt_msg_LwDatesg101__Descriptor = Descriptor.MessageTypes[16];
        internal__static_gt_msg_LwDatesg101__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.LwDatesg101, global::gt_msg.LwDatesg101.Builder>(internal__static_gt_msg_LwDatesg101__Descriptor,
                new string[] { "Id", "Nick", "Lw", "Explw", "Openitem", });
        internal__static_gt_msg_HistoryLwResponsesg101__Descriptor = Descriptor.MessageTypes[17];
        internal__static_gt_msg_HistoryLwResponsesg101__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.HistoryLwResponsesg101, global::gt_msg.HistoryLwResponsesg101.Builder>(internal__static_gt_msg_HistoryLwResponsesg101__Descriptor,
                new string[] { "Hlw", "Payitem6Time", "Payitem7Time", });
        internal__static_gt_msg_RankDayRequestsg101__Descriptor = Descriptor.MessageTypes[18];
        internal__static_gt_msg_RankDayRequestsg101__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.RankDayRequestsg101, global::gt_msg.RankDayRequestsg101.Builder>(internal__static_gt_msg_RankDayRequestsg101__Descriptor,
                new string[] { });
        internal__static_gt_msg_RankDayResponsesg101__Descriptor = Descriptor.MessageTypes[19];
        internal__static_gt_msg_RankDayResponsesg101__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.RankDayResponsesg101, global::gt_msg.RankDayResponsesg101.Builder>(internal__static_gt_msg_RankDayResponsesg101__Descriptor,
                new string[] { "Faceurl", "Nick", "Score", });
        internal__static_gt_msg_RankWeekRequestsg101__Descriptor = Descriptor.MessageTypes[20];
        internal__static_gt_msg_RankWeekRequestsg101__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.RankWeekRequestsg101, global::gt_msg.RankWeekRequestsg101.Builder>(internal__static_gt_msg_RankWeekRequestsg101__Descriptor,
                new string[] { });
        internal__static_gt_msg_RankWeekResponsesg101__Descriptor = Descriptor.MessageTypes[21];
        internal__static_gt_msg_RankWeekResponsesg101__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.RankWeekResponsesg101, global::gt_msg.RankWeekResponsesg101.Builder>(internal__static_gt_msg_RankWeekResponsesg101__Descriptor,
                new string[] { "Faceurl", "Thedate", "Nick", "Score", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::gt_msg.GtBase.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class JoinFreeRequestsg101 : pb::GeneratedMessage<JoinFreeRequestsg101, JoinFreeRequestsg101.Builder> {
    private JoinFreeRequestsg101() { }
    private static readonly JoinFreeRequestsg101 defaultInstance = new JoinFreeRequestsg101().MakeReadOnly();
    private static readonly string[] _joinFreeRequestsg101FieldNames = new string[] { "rank", "rule", "user_id" };
    private static readonly uint[] _joinFreeRequestsg101FieldTags = new uint[] { 24, 16, 10 };
    public static JoinFreeRequestsg101 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinFreeRequestsg101 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinFreeRequestsg101 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_JoinFreeRequestsg101__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinFreeRequestsg101, JoinFreeRequestsg101.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_JoinFreeRequestsg101__FieldAccessorTable; }
    }
    
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private string userId_ = "";
    public bool HasUserId {
      get { return hasUserId; }
    }
    public string UserId {
      get { return userId_; }
    }
    
    public const int RuleFieldNumber = 2;
    private bool hasRule;
    private global::gt_msg.Rule rule_ = global::gt_msg.Rule.RuleNormal;
    public bool HasRule {
      get { return hasRule; }
    }
    public global::gt_msg.Rule Rule {
      get { return rule_; }
    }
    
    public const int RankFieldNumber = 3;
    private bool hasRank;
    private global::gt_msg.Rank rank_ = global::gt_msg.Rank.LV0;
    public bool HasRank {
      get { return hasRank; }
    }
    public global::gt_msg.Rank Rank {
      get { return rank_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserId) return false;
        if (!hasRule) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _joinFreeRequestsg101FieldNames;
      if (hasUserId) {
        output.WriteString(1, field_names[2], UserId);
      }
      if (hasRule) {
        output.WriteEnum(2, field_names[1], (int) Rule, Rule);
      }
      if (hasRank) {
        output.WriteEnum(3, field_names[0], (int) Rank, Rank);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, UserId);
      }
      if (hasRule) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Rule);
      }
      if (hasRank) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Rank);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static JoinFreeRequestsg101 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinFreeRequestsg101 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeRequestsg101 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinFreeRequestsg101 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeRequestsg101 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinFreeRequestsg101 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeRequestsg101 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinFreeRequestsg101 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinFreeRequestsg101 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinFreeRequestsg101 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinFreeRequestsg101 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinFreeRequestsg101 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinFreeRequestsg101, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinFreeRequestsg101 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinFreeRequestsg101 result;
      
      private JoinFreeRequestsg101 PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinFreeRequestsg101 original = result;
          result = new JoinFreeRequestsg101();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinFreeRequestsg101 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.JoinFreeRequestsg101.Descriptor; }
      }
      
      public override JoinFreeRequestsg101 DefaultInstanceForType {
        get { return global::gt_msg.JoinFreeRequestsg101.DefaultInstance; }
      }
      
      public override JoinFreeRequestsg101 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is JoinFreeRequestsg101) {
          return MergeFrom((JoinFreeRequestsg101) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(JoinFreeRequestsg101 other) {
        if (other == global::gt_msg.JoinFreeRequestsg101.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasRule) {
          Rule = other.Rule;
        }
        if (other.HasRank) {
          Rank = other.Rank;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_joinFreeRequestsg101FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _joinFreeRequestsg101FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserId = input.ReadString(ref result.userId_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.rule_, out unknown)) {
                result.hasRule = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.rank_, out unknown)) {
                result.hasRank = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public string UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = "";
        return this;
      }
      
      public bool HasRule {
       get { return result.hasRule; }
      }
      public global::gt_msg.Rule Rule {
        get { return result.Rule; }
        set { SetRule(value); }
      }
      public Builder SetRule(global::gt_msg.Rule value) {
        PrepareBuilder();
        result.hasRule = true;
        result.rule_ = value;
        return this;
      }
      public Builder ClearRule() {
        PrepareBuilder();
        result.hasRule = false;
        result.rule_ = global::gt_msg.Rule.RuleNormal;
        return this;
      }
      
      public bool HasRank {
       get { return result.hasRank; }
      }
      public global::gt_msg.Rank Rank {
        get { return result.Rank; }
        set { SetRank(value); }
      }
      public Builder SetRank(global::gt_msg.Rank value) {
        PrepareBuilder();
        result.hasRank = true;
        result.rank_ = value;
        return this;
      }
      public Builder ClearRank() {
        PrepareBuilder();
        result.hasRank = false;
        result.rank_ = global::gt_msg.Rank.LV0;
        return this;
      }
    }
    static JoinFreeRequestsg101() {
      object.ReferenceEquals(global::gt_msg.GtSg101.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class JoinFreeResponsesg101 : pb::GeneratedMessage<JoinFreeResponsesg101, JoinFreeResponsesg101.Builder> {
    private JoinFreeResponsesg101() { }
    private static readonly JoinFreeResponsesg101 defaultInstance = new JoinFreeResponsesg101().MakeReadOnly();
    private static readonly string[] _joinFreeResponsesg101FieldNames = new string[] { "ItemType", "PayMoneyList", "basic_living_all_times", "basic_living_coins", "basic_living_use_times", "code", "game_stats", "has_basic_living", "min_coins", "rank", "rank_request", "reconnected_user" };
    private static readonly uint[] _joinFreeResponsesg101FieldTags = new uint[] { 96, 88, 40, 56, 48, 8, 82, 32, 24, 72, 64, 16 };
    public static JoinFreeResponsesg101 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinFreeResponsesg101 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinFreeResponsesg101 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_JoinFreeResponsesg101__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinFreeResponsesg101, JoinFreeResponsesg101.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_JoinFreeResponsesg101__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum JoinFreeResponsesg101Code {
        Ok = 0,
        MinimumCoinsRequired = 1,
        MinimumDiamondRequired = 2,
        NoTableAvail = 3,
        Other = 4,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.JoinFreeResponsesg101.Types.JoinFreeResponsesg101Code code_ = global::gt_msg.JoinFreeResponsesg101.Types.JoinFreeResponsesg101Code.Ok;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.JoinFreeResponsesg101.Types.JoinFreeResponsesg101Code Code {
      get { return code_; }
    }
    
    public const int ReconnectedUserFieldNumber = 2;
    private bool hasReconnectedUser;
    private bool reconnectedUser_;
    public bool HasReconnectedUser {
      get { return hasReconnectedUser; }
    }
    public bool ReconnectedUser {
      get { return reconnectedUser_; }
    }
    
    public const int MinCoinsFieldNumber = 3;
    private bool hasMinCoins;
    private long minCoins_;
    public bool HasMinCoins {
      get { return hasMinCoins; }
    }
    public long MinCoins {
      get { return minCoins_; }
    }
    
    public const int HasBasicLivingFieldNumber = 4;
    private bool hasHasBasicLiving;
    private bool hasBasicLiving_;
    public bool HasHasBasicLiving {
      get { return hasHasBasicLiving; }
    }
    public bool HasBasicLiving {
      get { return hasBasicLiving_; }
    }
    
    public const int BasicLivingAllTimesFieldNumber = 5;
    private bool hasBasicLivingAllTimes;
    private int basicLivingAllTimes_;
    public bool HasBasicLivingAllTimes {
      get { return hasBasicLivingAllTimes; }
    }
    public int BasicLivingAllTimes {
      get { return basicLivingAllTimes_; }
    }
    
    public const int BasicLivingUseTimesFieldNumber = 6;
    private bool hasBasicLivingUseTimes;
    private int basicLivingUseTimes_;
    public bool HasBasicLivingUseTimes {
      get { return hasBasicLivingUseTimes; }
    }
    public int BasicLivingUseTimes {
      get { return basicLivingUseTimes_; }
    }
    
    public const int BasicLivingCoinsFieldNumber = 7;
    private bool hasBasicLivingCoins;
    private int basicLivingCoins_;
    public bool HasBasicLivingCoins {
      get { return hasBasicLivingCoins; }
    }
    public int BasicLivingCoins {
      get { return basicLivingCoins_; }
    }
    
    public const int RankRequestFieldNumber = 8;
    private bool hasRankRequest;
    private global::gt_msg.Rank rankRequest_ = global::gt_msg.Rank.LV0;
    public bool HasRankRequest {
      get { return hasRankRequest; }
    }
    public global::gt_msg.Rank RankRequest {
      get { return rankRequest_; }
    }
    
    public const int RankFieldNumber = 9;
    private bool hasRank;
    private global::gt_msg.Rank rank_ = global::gt_msg.Rank.LV0;
    public bool HasRank {
      get { return hasRank; }
    }
    public global::gt_msg.Rank Rank {
      get { return rank_; }
    }
    
    public const int GameStatsFieldNumber = 10;
    private bool hasGameStats;
    private global::gt_msg.TableStatssg101 gameStats_;
    public bool HasGameStats {
      get { return hasGameStats; }
    }
    public global::gt_msg.TableStatssg101 GameStats {
      get { return gameStats_ ?? global::gt_msg.TableStatssg101.DefaultInstance; }
    }
    
    public const int PayMoneyListFieldNumber = 11;
    private pbc::PopsicleList<int> payMoneyList_ = new pbc::PopsicleList<int>();
    public scg::IList<int> PayMoneyListList {
      get { return pbc::Lists.AsReadOnly(payMoneyList_); }
    }
    public int PayMoneyListCount {
      get { return payMoneyList_.Count; }
    }
    public int GetPayMoneyList(int index) {
      return payMoneyList_[index];
    }
    
    public const int ItemTypeFieldNumber = 12;
    private bool hasItemType;
    private int itemType_;
    public bool HasItemType {
      get { return hasItemType; }
    }
    public int ItemType {
      get { return itemType_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        if (!hasItemType) return false;
        if (HasGameStats) {
          if (!GameStats.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _joinFreeResponsesg101FieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[5], (int) Code, Code);
      }
      if (hasReconnectedUser) {
        output.WriteBool(2, field_names[11], ReconnectedUser);
      }
      if (hasMinCoins) {
        output.WriteInt64(3, field_names[8], MinCoins);
      }
      if (hasHasBasicLiving) {
        output.WriteBool(4, field_names[7], HasBasicLiving);
      }
      if (hasBasicLivingAllTimes) {
        output.WriteInt32(5, field_names[2], BasicLivingAllTimes);
      }
      if (hasBasicLivingUseTimes) {
        output.WriteInt32(6, field_names[4], BasicLivingUseTimes);
      }
      if (hasBasicLivingCoins) {
        output.WriteInt32(7, field_names[3], BasicLivingCoins);
      }
      if (hasRankRequest) {
        output.WriteEnum(8, field_names[10], (int) RankRequest, RankRequest);
      }
      if (hasRank) {
        output.WriteEnum(9, field_names[9], (int) Rank, Rank);
      }
      if (hasGameStats) {
        output.WriteMessage(10, field_names[6], GameStats);
      }
      if (payMoneyList_.Count > 0) {
        output.WriteInt32Array(11, field_names[1], payMoneyList_);
      }
      if (hasItemType) {
        output.WriteInt32(12, field_names[0], ItemType);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasReconnectedUser) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, ReconnectedUser);
      }
      if (hasMinCoins) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, MinCoins);
      }
      if (hasHasBasicLiving) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, HasBasicLiving);
      }
      if (hasBasicLivingAllTimes) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, BasicLivingAllTimes);
      }
      if (hasBasicLivingUseTimes) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, BasicLivingUseTimes);
      }
      if (hasBasicLivingCoins) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, BasicLivingCoins);
      }
      if (hasRankRequest) {
        size += pb::CodedOutputStream.ComputeEnumSize(8, (int) RankRequest);
      }
      if (hasRank) {
        size += pb::CodedOutputStream.ComputeEnumSize(9, (int) Rank);
      }
      if (hasGameStats) {
        size += pb::CodedOutputStream.ComputeMessageSize(10, GameStats);
      }
      {
        int dataSize = 0;
        foreach (int element in PayMoneyListList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * payMoneyList_.Count;
      }
      if (hasItemType) {
        size += pb::CodedOutputStream.ComputeInt32Size(12, ItemType);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static JoinFreeResponsesg101 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinFreeResponsesg101 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeResponsesg101 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinFreeResponsesg101 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeResponsesg101 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinFreeResponsesg101 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeResponsesg101 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinFreeResponsesg101 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinFreeResponsesg101 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinFreeResponsesg101 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinFreeResponsesg101 MakeReadOnly() {
      payMoneyList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinFreeResponsesg101 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinFreeResponsesg101, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinFreeResponsesg101 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinFreeResponsesg101 result;
      
      private JoinFreeResponsesg101 PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinFreeResponsesg101 original = result;
          result = new JoinFreeResponsesg101();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinFreeResponsesg101 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.JoinFreeResponsesg101.Descriptor; }
      }
      
      public override JoinFreeResponsesg101 DefaultInstanceForType {
        get { return global::gt_msg.JoinFreeResponsesg101.DefaultInstance; }
      }
      
      public override JoinFreeResponsesg101 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is JoinFreeResponsesg101) {
          return MergeFrom((JoinFreeResponsesg101) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(JoinFreeResponsesg101 other) {
        if (other == global::gt_msg.JoinFreeResponsesg101.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasReconnectedUser) {
          ReconnectedUser = other.ReconnectedUser;
        }
        if (other.HasMinCoins) {
          MinCoins = other.MinCoins;
        }
        if (other.HasHasBasicLiving) {
          HasBasicLiving = other.HasBasicLiving;
        }
        if (other.HasBasicLivingAllTimes) {
          BasicLivingAllTimes = other.BasicLivingAllTimes;
        }
        if (other.HasBasicLivingUseTimes) {
          BasicLivingUseTimes = other.BasicLivingUseTimes;
        }
        if (other.HasBasicLivingCoins) {
          BasicLivingCoins = other.BasicLivingCoins;
        }
        if (other.HasRankRequest) {
          RankRequest = other.RankRequest;
        }
        if (other.HasRank) {
          Rank = other.Rank;
        }
        if (other.HasGameStats) {
          MergeGameStats(other.GameStats);
        }
        if (other.payMoneyList_.Count != 0) {
          result.payMoneyList_.Add(other.payMoneyList_);
        }
        if (other.HasItemType) {
          ItemType = other.ItemType;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_joinFreeResponsesg101FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _joinFreeResponsesg101FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasReconnectedUser = input.ReadBool(ref result.reconnectedUser_);
              break;
            }
            case 24: {
              result.hasMinCoins = input.ReadInt64(ref result.minCoins_);
              break;
            }
            case 32: {
              result.hasHasBasicLiving = input.ReadBool(ref result.hasBasicLiving_);
              break;
            }
            case 40: {
              result.hasBasicLivingAllTimes = input.ReadInt32(ref result.basicLivingAllTimes_);
              break;
            }
            case 48: {
              result.hasBasicLivingUseTimes = input.ReadInt32(ref result.basicLivingUseTimes_);
              break;
            }
            case 56: {
              result.hasBasicLivingCoins = input.ReadInt32(ref result.basicLivingCoins_);
              break;
            }
            case 64: {
              object unknown;
              if(input.ReadEnum(ref result.rankRequest_, out unknown)) {
                result.hasRankRequest = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(8, (ulong)(int)unknown);
              }
              break;
            }
            case 72: {
              object unknown;
              if(input.ReadEnum(ref result.rank_, out unknown)) {
                result.hasRank = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(9, (ulong)(int)unknown);
              }
              break;
            }
            case 82: {
              global::gt_msg.TableStatssg101.Builder subBuilder = global::gt_msg.TableStatssg101.CreateBuilder();
              if (result.hasGameStats) {
                subBuilder.MergeFrom(GameStats);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameStats = subBuilder.BuildPartial();
              break;
            }
            case 90:
            case 88: {
              input.ReadInt32Array(tag, field_name, result.payMoneyList_);
              break;
            }
            case 96: {
              result.hasItemType = input.ReadInt32(ref result.itemType_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.JoinFreeResponsesg101.Types.JoinFreeResponsesg101Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.JoinFreeResponsesg101.Types.JoinFreeResponsesg101Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.JoinFreeResponsesg101.Types.JoinFreeResponsesg101Code.Ok;
        return this;
      }
      
      public bool HasReconnectedUser {
        get { return result.hasReconnectedUser; }
      }
      public bool ReconnectedUser {
        get { return result.ReconnectedUser; }
        set { SetReconnectedUser(value); }
      }
      public Builder SetReconnectedUser(bool value) {
        PrepareBuilder();
        result.hasReconnectedUser = true;
        result.reconnectedUser_ = value;
        return this;
      }
      public Builder ClearReconnectedUser() {
        PrepareBuilder();
        result.hasReconnectedUser = false;
        result.reconnectedUser_ = false;
        return this;
      }
      
      public bool HasMinCoins {
        get { return result.hasMinCoins; }
      }
      public long MinCoins {
        get { return result.MinCoins; }
        set { SetMinCoins(value); }
      }
      public Builder SetMinCoins(long value) {
        PrepareBuilder();
        result.hasMinCoins = true;
        result.minCoins_ = value;
        return this;
      }
      public Builder ClearMinCoins() {
        PrepareBuilder();
        result.hasMinCoins = false;
        result.minCoins_ = 0L;
        return this;
      }
      
      public bool HasHasBasicLiving {
        get { return result.hasHasBasicLiving; }
      }
      public bool HasBasicLiving {
        get { return result.HasBasicLiving; }
        set { SetHasBasicLiving(value); }
      }
      public Builder SetHasBasicLiving(bool value) {
        PrepareBuilder();
        result.hasHasBasicLiving = true;
        result.hasBasicLiving_ = value;
        return this;
      }
      public Builder ClearHasBasicLiving() {
        PrepareBuilder();
        result.hasHasBasicLiving = false;
        result.hasBasicLiving_ = false;
        return this;
      }
      
      public bool HasBasicLivingAllTimes {
        get { return result.hasBasicLivingAllTimes; }
      }
      public int BasicLivingAllTimes {
        get { return result.BasicLivingAllTimes; }
        set { SetBasicLivingAllTimes(value); }
      }
      public Builder SetBasicLivingAllTimes(int value) {
        PrepareBuilder();
        result.hasBasicLivingAllTimes = true;
        result.basicLivingAllTimes_ = value;
        return this;
      }
      public Builder ClearBasicLivingAllTimes() {
        PrepareBuilder();
        result.hasBasicLivingAllTimes = false;
        result.basicLivingAllTimes_ = 0;
        return this;
      }
      
      public bool HasBasicLivingUseTimes {
        get { return result.hasBasicLivingUseTimes; }
      }
      public int BasicLivingUseTimes {
        get { return result.BasicLivingUseTimes; }
        set { SetBasicLivingUseTimes(value); }
      }
      public Builder SetBasicLivingUseTimes(int value) {
        PrepareBuilder();
        result.hasBasicLivingUseTimes = true;
        result.basicLivingUseTimes_ = value;
        return this;
      }
      public Builder ClearBasicLivingUseTimes() {
        PrepareBuilder();
        result.hasBasicLivingUseTimes = false;
        result.basicLivingUseTimes_ = 0;
        return this;
      }
      
      public bool HasBasicLivingCoins {
        get { return result.hasBasicLivingCoins; }
      }
      public int BasicLivingCoins {
        get { return result.BasicLivingCoins; }
        set { SetBasicLivingCoins(value); }
      }
      public Builder SetBasicLivingCoins(int value) {
        PrepareBuilder();
        result.hasBasicLivingCoins = true;
        result.basicLivingCoins_ = value;
        return this;
      }
      public Builder ClearBasicLivingCoins() {
        PrepareBuilder();
        result.hasBasicLivingCoins = false;
        result.basicLivingCoins_ = 0;
        return this;
      }
      
      public bool HasRankRequest {
       get { return result.hasRankRequest; }
      }
      public global::gt_msg.Rank RankRequest {
        get { return result.RankRequest; }
        set { SetRankRequest(value); }
      }
      public Builder SetRankRequest(global::gt_msg.Rank value) {
        PrepareBuilder();
        result.hasRankRequest = true;
        result.rankRequest_ = value;
        return this;
      }
      public Builder ClearRankRequest() {
        PrepareBuilder();
        result.hasRankRequest = false;
        result.rankRequest_ = global::gt_msg.Rank.LV0;
        return this;
      }
      
      public bool HasRank {
       get { return result.hasRank; }
      }
      public global::gt_msg.Rank Rank {
        get { return result.Rank; }
        set { SetRank(value); }
      }
      public Builder SetRank(global::gt_msg.Rank value) {
        PrepareBuilder();
        result.hasRank = true;
        result.rank_ = value;
        return this;
      }
      public Builder ClearRank() {
        PrepareBuilder();
        result.hasRank = false;
        result.rank_ = global::gt_msg.Rank.LV0;
        return this;
      }
      
      public bool HasGameStats {
       get { return result.hasGameStats; }
      }
      public global::gt_msg.TableStatssg101 GameStats {
        get { return result.GameStats; }
        set { SetGameStats(value); }
      }
      public Builder SetGameStats(global::gt_msg.TableStatssg101 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameStats = true;
        result.gameStats_ = value;
        return this;
      }
      public Builder SetGameStats(global::gt_msg.TableStatssg101.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameStats = true;
        result.gameStats_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameStats(global::gt_msg.TableStatssg101 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameStats &&
            result.gameStats_ != global::gt_msg.TableStatssg101.DefaultInstance) {
            result.gameStats_ = global::gt_msg.TableStatssg101.CreateBuilder(result.gameStats_).MergeFrom(value).BuildPartial();
        } else {
          result.gameStats_ = value;
        }
        result.hasGameStats = true;
        return this;
      }
      public Builder ClearGameStats() {
        PrepareBuilder();
        result.hasGameStats = false;
        result.gameStats_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<int> PayMoneyListList {
        get { return PrepareBuilder().payMoneyList_; }
      }
      public int PayMoneyListCount {
        get { return result.PayMoneyListCount; }
      }
      public int GetPayMoneyList(int index) {
        return result.GetPayMoneyList(index);
      }
      public Builder SetPayMoneyList(int index, int value) {
        PrepareBuilder();
        result.payMoneyList_[index] = value;
        return this;
      }
      public Builder AddPayMoneyList(int value) {
        PrepareBuilder();
        result.payMoneyList_.Add(value);
        return this;
      }
      public Builder AddRangePayMoneyList(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.payMoneyList_.Add(values);
        return this;
      }
      public Builder ClearPayMoneyList() {
        PrepareBuilder();
        result.payMoneyList_.Clear();
        return this;
      }
      
      public bool HasItemType {
        get { return result.hasItemType; }
      }
      public int ItemType {
        get { return result.ItemType; }
        set { SetItemType(value); }
      }
      public Builder SetItemType(int value) {
        PrepareBuilder();
        result.hasItemType = true;
        result.itemType_ = value;
        return this;
      }
      public Builder ClearItemType() {
        PrepareBuilder();
        result.hasItemType = false;
        result.itemType_ = 0;
        return this;
      }
    }
    static JoinFreeResponsesg101() {
      object.ReferenceEquals(global::gt_msg.GtSg101.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ActionRequestsg101 : pb::GeneratedMessage<ActionRequestsg101, ActionRequestsg101.Builder> {
    private ActionRequestsg101() { }
    private static readonly ActionRequestsg101 defaultInstance = new ActionRequestsg101().MakeReadOnly();
    private static readonly string[] _actionRequestsg101FieldNames = new string[] { "PayNumMax", "PayNumMin", "code" };
    private static readonly uint[] _actionRequestsg101FieldTags = new uint[] { 24, 16, 8 };
    public static ActionRequestsg101 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ActionRequestsg101 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ActionRequestsg101 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_ActionRequestsg101__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ActionRequestsg101, ActionRequestsg101.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_ActionRequestsg101__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum ActionRequestsg101Code {
        BuySeat = 1,
        AutoBuy = 2,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.ActionRequestsg101.Types.ActionRequestsg101Code code_ = global::gt_msg.ActionRequestsg101.Types.ActionRequestsg101Code.BuySeat;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.ActionRequestsg101.Types.ActionRequestsg101Code Code {
      get { return code_; }
    }
    
    public const int PayNumMinFieldNumber = 2;
    private bool hasPayNumMin;
    private long payNumMin_;
    public bool HasPayNumMin {
      get { return hasPayNumMin; }
    }
    public long PayNumMin {
      get { return payNumMin_; }
    }
    
    public const int PayNumMaxFieldNumber = 3;
    private bool hasPayNumMax;
    private int payNumMax_;
    public bool HasPayNumMax {
      get { return hasPayNumMax; }
    }
    public int PayNumMax {
      get { return payNumMax_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _actionRequestsg101FieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[2], (int) Code, Code);
      }
      if (hasPayNumMin) {
        output.WriteInt64(2, field_names[1], PayNumMin);
      }
      if (hasPayNumMax) {
        output.WriteInt32(3, field_names[0], PayNumMax);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasPayNumMin) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, PayNumMin);
      }
      if (hasPayNumMax) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, PayNumMax);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ActionRequestsg101 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActionRequestsg101 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActionRequestsg101 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActionRequestsg101 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActionRequestsg101 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActionRequestsg101 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ActionRequestsg101 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ActionRequestsg101 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ActionRequestsg101 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActionRequestsg101 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ActionRequestsg101 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ActionRequestsg101 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ActionRequestsg101, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ActionRequestsg101 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ActionRequestsg101 result;
      
      private ActionRequestsg101 PrepareBuilder() {
        if (resultIsReadOnly) {
          ActionRequestsg101 original = result;
          result = new ActionRequestsg101();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ActionRequestsg101 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.ActionRequestsg101.Descriptor; }
      }
      
      public override ActionRequestsg101 DefaultInstanceForType {
        get { return global::gt_msg.ActionRequestsg101.DefaultInstance; }
      }
      
      public override ActionRequestsg101 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ActionRequestsg101) {
          return MergeFrom((ActionRequestsg101) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ActionRequestsg101 other) {
        if (other == global::gt_msg.ActionRequestsg101.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasPayNumMin) {
          PayNumMin = other.PayNumMin;
        }
        if (other.HasPayNumMax) {
          PayNumMax = other.PayNumMax;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_actionRequestsg101FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _actionRequestsg101FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasPayNumMin = input.ReadInt64(ref result.payNumMin_);
              break;
            }
            case 24: {
              result.hasPayNumMax = input.ReadInt32(ref result.payNumMax_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.ActionRequestsg101.Types.ActionRequestsg101Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.ActionRequestsg101.Types.ActionRequestsg101Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.ActionRequestsg101.Types.ActionRequestsg101Code.BuySeat;
        return this;
      }
      
      public bool HasPayNumMin {
        get { return result.hasPayNumMin; }
      }
      public long PayNumMin {
        get { return result.PayNumMin; }
        set { SetPayNumMin(value); }
      }
      public Builder SetPayNumMin(long value) {
        PrepareBuilder();
        result.hasPayNumMin = true;
        result.payNumMin_ = value;
        return this;
      }
      public Builder ClearPayNumMin() {
        PrepareBuilder();
        result.hasPayNumMin = false;
        result.payNumMin_ = 0L;
        return this;
      }
      
      public bool HasPayNumMax {
        get { return result.hasPayNumMax; }
      }
      public int PayNumMax {
        get { return result.PayNumMax; }
        set { SetPayNumMax(value); }
      }
      public Builder SetPayNumMax(int value) {
        PrepareBuilder();
        result.hasPayNumMax = true;
        result.payNumMax_ = value;
        return this;
      }
      public Builder ClearPayNumMax() {
        PrepareBuilder();
        result.hasPayNumMax = false;
        result.payNumMax_ = 0;
        return this;
      }
    }
    static ActionRequestsg101() {
      object.ReferenceEquals(global::gt_msg.GtSg101.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ActionResponsesg101 : pb::GeneratedMessage<ActionResponsesg101, ActionResponsesg101.Builder> {
    private ActionResponsesg101() { }
    private static readonly ActionResponsesg101 defaultInstance = new ActionResponsesg101().MakeReadOnly();
    private static readonly string[] _actionResponsesg101FieldNames = new string[] { "code" };
    private static readonly uint[] _actionResponsesg101FieldTags = new uint[] { 8 };
    public static ActionResponsesg101 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ActionResponsesg101 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ActionResponsesg101 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_ActionResponsesg101__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ActionResponsesg101, ActionResponsesg101.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_ActionResponsesg101__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum ActionResponsesg101Code {
        OK = 0,
        PlayerNoExist = 1,
        PlayerFull = 2,
        ActionTypeErr = 3,
        CannotAction = 4,
        MoneyNoEnough = 5,
        AutoBuyNoEnoughMoney = 6,
        Other = 7,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.ActionResponsesg101.Types.ActionResponsesg101Code code_ = global::gt_msg.ActionResponsesg101.Types.ActionResponsesg101Code.OK;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.ActionResponsesg101.Types.ActionResponsesg101Code Code {
      get { return code_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _actionResponsesg101FieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[0], (int) Code, Code);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ActionResponsesg101 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActionResponsesg101 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActionResponsesg101 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActionResponsesg101 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActionResponsesg101 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActionResponsesg101 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ActionResponsesg101 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ActionResponsesg101 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ActionResponsesg101 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActionResponsesg101 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ActionResponsesg101 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ActionResponsesg101 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ActionResponsesg101, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ActionResponsesg101 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ActionResponsesg101 result;
      
      private ActionResponsesg101 PrepareBuilder() {
        if (resultIsReadOnly) {
          ActionResponsesg101 original = result;
          result = new ActionResponsesg101();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ActionResponsesg101 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.ActionResponsesg101.Descriptor; }
      }
      
      public override ActionResponsesg101 DefaultInstanceForType {
        get { return global::gt_msg.ActionResponsesg101.DefaultInstance; }
      }
      
      public override ActionResponsesg101 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ActionResponsesg101) {
          return MergeFrom((ActionResponsesg101) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ActionResponsesg101 other) {
        if (other == global::gt_msg.ActionResponsesg101.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_actionResponsesg101FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _actionResponsesg101FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.ActionResponsesg101.Types.ActionResponsesg101Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.ActionResponsesg101.Types.ActionResponsesg101Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.ActionResponsesg101.Types.ActionResponsesg101Code.OK;
        return this;
      }
    }
    static ActionResponsesg101() {
      object.ReferenceEquals(global::gt_msg.GtSg101.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserPaysg101 : pb::GeneratedMessage<UserPaysg101, UserPaysg101.Builder> {
    private UserPaysg101() { }
    private static readonly UserPaysg101 defaultInstance = new UserPaysg101().MakeReadOnly();
    private static readonly string[] _userPaysg101FieldNames = new string[] { "rate", "seat", "value" };
    private static readonly uint[] _userPaysg101FieldTags = new uint[] { 16, 8, 24 };
    public static UserPaysg101 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserPaysg101 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserPaysg101 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_UserPaysg101__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserPaysg101, UserPaysg101.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_UserPaysg101__FieldAccessorTable; }
    }
    
    public const int SeatFieldNumber = 1;
    private bool hasSeat;
    private long seat_;
    public bool HasSeat {
      get { return hasSeat; }
    }
    public long Seat {
      get { return seat_; }
    }
    
    public const int RateFieldNumber = 2;
    private bool hasRate;
    private int rate_;
    public bool HasRate {
      get { return hasRate; }
    }
    public int Rate {
      get { return rate_; }
    }
    
    public const int ValueFieldNumber = 3;
    private bool hasValue;
    private long value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public long Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSeat) return false;
        if (!hasValue) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userPaysg101FieldNames;
      if (hasSeat) {
        output.WriteInt64(1, field_names[1], Seat);
      }
      if (hasRate) {
        output.WriteInt32(2, field_names[0], Rate);
      }
      if (hasValue) {
        output.WriteInt64(3, field_names[2], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSeat) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, Seat);
      }
      if (hasRate) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Rate);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserPaysg101 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserPaysg101 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserPaysg101 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserPaysg101 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserPaysg101 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserPaysg101 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserPaysg101 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserPaysg101 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserPaysg101 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserPaysg101 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserPaysg101 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserPaysg101 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserPaysg101, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserPaysg101 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserPaysg101 result;
      
      private UserPaysg101 PrepareBuilder() {
        if (resultIsReadOnly) {
          UserPaysg101 original = result;
          result = new UserPaysg101();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserPaysg101 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.UserPaysg101.Descriptor; }
      }
      
      public override UserPaysg101 DefaultInstanceForType {
        get { return global::gt_msg.UserPaysg101.DefaultInstance; }
      }
      
      public override UserPaysg101 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserPaysg101) {
          return MergeFrom((UserPaysg101) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserPaysg101 other) {
        if (other == global::gt_msg.UserPaysg101.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSeat) {
          Seat = other.Seat;
        }
        if (other.HasRate) {
          Rate = other.Rate;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userPaysg101FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userPaysg101FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSeat = input.ReadInt64(ref result.seat_);
              break;
            }
            case 16: {
              result.hasRate = input.ReadInt32(ref result.rate_);
              break;
            }
            case 24: {
              result.hasValue = input.ReadInt64(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSeat {
        get { return result.hasSeat; }
      }
      public long Seat {
        get { return result.Seat; }
        set { SetSeat(value); }
      }
      public Builder SetSeat(long value) {
        PrepareBuilder();
        result.hasSeat = true;
        result.seat_ = value;
        return this;
      }
      public Builder ClearSeat() {
        PrepareBuilder();
        result.hasSeat = false;
        result.seat_ = 0L;
        return this;
      }
      
      public bool HasRate {
        get { return result.hasRate; }
      }
      public int Rate {
        get { return result.Rate; }
        set { SetRate(value); }
      }
      public Builder SetRate(int value) {
        PrepareBuilder();
        result.hasRate = true;
        result.rate_ = value;
        return this;
      }
      public Builder ClearRate() {
        PrepareBuilder();
        result.hasRate = false;
        result.rate_ = 0;
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public long Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(long value) {
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = 0L;
        return this;
      }
    }
    static UserPaysg101() {
      object.ReferenceEquals(global::gt_msg.GtSg101.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableUserStatssg101 : pb::GeneratedMessage<TableUserStatssg101, TableUserStatssg101.Builder> {
    private TableUserStatssg101() { }
    private static readonly TableUserStatssg101 defaultInstance = new TableUserStatssg101().MakeReadOnly();
    private static readonly string[] _tableUserStatssg101FieldNames = new string[] { "NewActionList", "PointOnSeat", "user_info" };
    private static readonly uint[] _tableUserStatssg101FieldTags = new uint[] { 26, 18, 10 };
    public static TableUserStatssg101 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableUserStatssg101 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableUserStatssg101 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_TableUserStatssg101__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableUserStatssg101, TableUserStatssg101.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_TableUserStatssg101__FieldAccessorTable; }
    }
    
    public const int UserInfoFieldNumber = 1;
    private bool hasUserInfo;
    private global::gt_msg.User userInfo_;
    public bool HasUserInfo {
      get { return hasUserInfo; }
    }
    public global::gt_msg.User UserInfo {
      get { return userInfo_ ?? global::gt_msg.User.DefaultInstance; }
    }
    
    public const int PointOnSeatFieldNumber = 2;
    private pbc::PopsicleList<global::gt_msg.UserPaysg101> pointOnSeat_ = new pbc::PopsicleList<global::gt_msg.UserPaysg101>();
    public scg::IList<global::gt_msg.UserPaysg101> PointOnSeatList {
      get { return pointOnSeat_; }
    }
    public int PointOnSeatCount {
      get { return pointOnSeat_.Count; }
    }
    public global::gt_msg.UserPaysg101 GetPointOnSeat(int index) {
      return pointOnSeat_[index];
    }
    
    public const int NewActionListFieldNumber = 3;
    private pbc::PopsicleList<global::gt_msg.ActionRequestsg101> newActionList_ = new pbc::PopsicleList<global::gt_msg.ActionRequestsg101>();
    public scg::IList<global::gt_msg.ActionRequestsg101> NewActionListList {
      get { return newActionList_; }
    }
    public int NewActionListCount {
      get { return newActionList_.Count; }
    }
    public global::gt_msg.ActionRequestsg101 GetNewActionList(int index) {
      return newActionList_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserInfo) return false;
        if (!UserInfo.IsInitialized) return false;
        foreach (global::gt_msg.UserPaysg101 element in PointOnSeatList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::gt_msg.ActionRequestsg101 element in NewActionListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tableUserStatssg101FieldNames;
      if (hasUserInfo) {
        output.WriteMessage(1, field_names[2], UserInfo);
      }
      if (pointOnSeat_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], pointOnSeat_);
      }
      if (newActionList_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], newActionList_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserInfo) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, UserInfo);
      }
      foreach (global::gt_msg.UserPaysg101 element in PointOnSeatList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      foreach (global::gt_msg.ActionRequestsg101 element in NewActionListList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TableUserStatssg101 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableUserStatssg101 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableUserStatssg101 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableUserStatssg101 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableUserStatssg101 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableUserStatssg101 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableUserStatssg101 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableUserStatssg101 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableUserStatssg101 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableUserStatssg101 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableUserStatssg101 MakeReadOnly() {
      pointOnSeat_.MakeReadOnly();
      newActionList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableUserStatssg101 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableUserStatssg101, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableUserStatssg101 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableUserStatssg101 result;
      
      private TableUserStatssg101 PrepareBuilder() {
        if (resultIsReadOnly) {
          TableUserStatssg101 original = result;
          result = new TableUserStatssg101();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableUserStatssg101 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.TableUserStatssg101.Descriptor; }
      }
      
      public override TableUserStatssg101 DefaultInstanceForType {
        get { return global::gt_msg.TableUserStatssg101.DefaultInstance; }
      }
      
      public override TableUserStatssg101 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableUserStatssg101) {
          return MergeFrom((TableUserStatssg101) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableUserStatssg101 other) {
        if (other == global::gt_msg.TableUserStatssg101.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserInfo) {
          MergeUserInfo(other.UserInfo);
        }
        if (other.pointOnSeat_.Count != 0) {
          result.pointOnSeat_.Add(other.pointOnSeat_);
        }
        if (other.newActionList_.Count != 0) {
          result.newActionList_.Add(other.newActionList_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableUserStatssg101FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableUserStatssg101FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::gt_msg.User.Builder subBuilder = global::gt_msg.User.CreateBuilder();
              if (result.hasUserInfo) {
                subBuilder.MergeFrom(UserInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserInfo = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.pointOnSeat_, global::gt_msg.UserPaysg101.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.newActionList_, global::gt_msg.ActionRequestsg101.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserInfo {
       get { return result.hasUserInfo; }
      }
      public global::gt_msg.User UserInfo {
        get { return result.UserInfo; }
        set { SetUserInfo(value); }
      }
      public Builder SetUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = value;
        return this;
      }
      public Builder SetUserInfo(global::gt_msg.User.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserInfo &&
            result.userInfo_ != global::gt_msg.User.DefaultInstance) {
            result.userInfo_ = global::gt_msg.User.CreateBuilder(result.userInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.userInfo_ = value;
        }
        result.hasUserInfo = true;
        return this;
      }
      public Builder ClearUserInfo() {
        PrepareBuilder();
        result.hasUserInfo = false;
        result.userInfo_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::gt_msg.UserPaysg101> PointOnSeatList {
        get { return PrepareBuilder().pointOnSeat_; }
      }
      public int PointOnSeatCount {
        get { return result.PointOnSeatCount; }
      }
      public global::gt_msg.UserPaysg101 GetPointOnSeat(int index) {
        return result.GetPointOnSeat(index);
      }
      public Builder SetPointOnSeat(int index, global::gt_msg.UserPaysg101 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.pointOnSeat_[index] = value;
        return this;
      }
      public Builder SetPointOnSeat(int index, global::gt_msg.UserPaysg101.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.pointOnSeat_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPointOnSeat(global::gt_msg.UserPaysg101 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.pointOnSeat_.Add(value);
        return this;
      }
      public Builder AddPointOnSeat(global::gt_msg.UserPaysg101.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.pointOnSeat_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePointOnSeat(scg::IEnumerable<global::gt_msg.UserPaysg101> values) {
        PrepareBuilder();
        result.pointOnSeat_.Add(values);
        return this;
      }
      public Builder ClearPointOnSeat() {
        PrepareBuilder();
        result.pointOnSeat_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::gt_msg.ActionRequestsg101> NewActionListList {
        get { return PrepareBuilder().newActionList_; }
      }
      public int NewActionListCount {
        get { return result.NewActionListCount; }
      }
      public global::gt_msg.ActionRequestsg101 GetNewActionList(int index) {
        return result.GetNewActionList(index);
      }
      public Builder SetNewActionList(int index, global::gt_msg.ActionRequestsg101 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.newActionList_[index] = value;
        return this;
      }
      public Builder SetNewActionList(int index, global::gt_msg.ActionRequestsg101.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.newActionList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddNewActionList(global::gt_msg.ActionRequestsg101 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.newActionList_.Add(value);
        return this;
      }
      public Builder AddNewActionList(global::gt_msg.ActionRequestsg101.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.newActionList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeNewActionList(scg::IEnumerable<global::gt_msg.ActionRequestsg101> values) {
        PrepareBuilder();
        result.newActionList_.Add(values);
        return this;
      }
      public Builder ClearNewActionList() {
        PrepareBuilder();
        result.newActionList_.Clear();
        return this;
      }
    }
    static TableUserStatssg101() {
      object.ReferenceEquals(global::gt_msg.GtSg101.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableStatssg101 : pb::GeneratedMessage<TableStatssg101, TableStatssg101.Builder> {
    private TableStatssg101() { }
    private static readonly TableStatssg101 defaultInstance = new TableStatssg101().MakeReadOnly();
    private static readonly string[] _tableStatssg101FieldNames = new string[] { "NextActionTimeOut", "Rank", "Rule", "Stage", "Step", "TableID", "TableMoney", "UserSelf" };
    private static readonly uint[] _tableStatssg101FieldTags = new uint[] { 40, 24, 32, 16, 48, 8, 64, 58 };
    public static TableStatssg101 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableStatssg101 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableStatssg101 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_TableStatssg101__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableStatssg101, TableStatssg101.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_TableStatssg101__FieldAccessorTable; }
    }
    
    public const int TableIDFieldNumber = 1;
    private bool hasTableID;
    private int tableID_;
    public bool HasTableID {
      get { return hasTableID; }
    }
    public int TableID {
      get { return tableID_; }
    }
    
    public const int StageFieldNumber = 2;
    private bool hasStage;
    private int stage_;
    public bool HasStage {
      get { return hasStage; }
    }
    public int Stage {
      get { return stage_; }
    }
    
    public const int RankFieldNumber = 3;
    private bool hasRank;
    private global::gt_msg.Rank rank_ = global::gt_msg.Rank.LV0;
    public bool HasRank {
      get { return hasRank; }
    }
    public global::gt_msg.Rank Rank {
      get { return rank_; }
    }
    
    public const int RuleFieldNumber = 4;
    private bool hasRule;
    private global::gt_msg.Rule rule_ = global::gt_msg.Rule.RuleNormal;
    public bool HasRule {
      get { return hasRule; }
    }
    public global::gt_msg.Rule Rule {
      get { return rule_; }
    }
    
    public const int NextActionTimeOutFieldNumber = 5;
    private bool hasNextActionTimeOut;
    private int nextActionTimeOut_;
    public bool HasNextActionTimeOut {
      get { return hasNextActionTimeOut; }
    }
    public int NextActionTimeOut {
      get { return nextActionTimeOut_; }
    }
    
    public const int StepFieldNumber = 6;
    private bool hasStep;
    private int step_;
    public bool HasStep {
      get { return hasStep; }
    }
    public int Step {
      get { return step_; }
    }
    
    public const int UserSelfFieldNumber = 7;
    private bool hasUserSelf;
    private global::gt_msg.TableUserStatssg101 userSelf_;
    public bool HasUserSelf {
      get { return hasUserSelf; }
    }
    public global::gt_msg.TableUserStatssg101 UserSelf {
      get { return userSelf_ ?? global::gt_msg.TableUserStatssg101.DefaultInstance; }
    }
    
    public const int TableMoneyFieldNumber = 8;
    private bool hasTableMoney;
    private long tableMoney_;
    public bool HasTableMoney {
      get { return hasTableMoney; }
    }
    public long TableMoney {
      get { return tableMoney_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableID) return false;
        if (!hasStage) return false;
        if (!hasRank) return false;
        if (!hasRule) return false;
        if (!hasNextActionTimeOut) return false;
        if (!hasStep) return false;
        if (HasUserSelf) {
          if (!UserSelf.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tableStatssg101FieldNames;
      if (hasTableID) {
        output.WriteInt32(1, field_names[5], TableID);
      }
      if (hasStage) {
        output.WriteInt32(2, field_names[3], Stage);
      }
      if (hasRank) {
        output.WriteEnum(3, field_names[1], (int) Rank, Rank);
      }
      if (hasRule) {
        output.WriteEnum(4, field_names[2], (int) Rule, Rule);
      }
      if (hasNextActionTimeOut) {
        output.WriteInt32(5, field_names[0], NextActionTimeOut);
      }
      if (hasStep) {
        output.WriteInt32(6, field_names[4], Step);
      }
      if (hasUserSelf) {
        output.WriteMessage(7, field_names[7], UserSelf);
      }
      if (hasTableMoney) {
        output.WriteInt64(8, field_names[6], TableMoney);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableID) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, TableID);
      }
      if (hasStage) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Stage);
      }
      if (hasRank) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Rank);
      }
      if (hasRule) {
        size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Rule);
      }
      if (hasNextActionTimeOut) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, NextActionTimeOut);
      }
      if (hasStep) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, Step);
      }
      if (hasUserSelf) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, UserSelf);
      }
      if (hasTableMoney) {
        size += pb::CodedOutputStream.ComputeInt64Size(8, TableMoney);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TableStatssg101 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableStatssg101 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableStatssg101 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableStatssg101 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableStatssg101 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableStatssg101 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableStatssg101 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableStatssg101 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableStatssg101 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableStatssg101 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableStatssg101 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableStatssg101 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableStatssg101, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableStatssg101 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableStatssg101 result;
      
      private TableStatssg101 PrepareBuilder() {
        if (resultIsReadOnly) {
          TableStatssg101 original = result;
          result = new TableStatssg101();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableStatssg101 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.TableStatssg101.Descriptor; }
      }
      
      public override TableStatssg101 DefaultInstanceForType {
        get { return global::gt_msg.TableStatssg101.DefaultInstance; }
      }
      
      public override TableStatssg101 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableStatssg101) {
          return MergeFrom((TableStatssg101) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableStatssg101 other) {
        if (other == global::gt_msg.TableStatssg101.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableID) {
          TableID = other.TableID;
        }
        if (other.HasStage) {
          Stage = other.Stage;
        }
        if (other.HasRank) {
          Rank = other.Rank;
        }
        if (other.HasRule) {
          Rule = other.Rule;
        }
        if (other.HasNextActionTimeOut) {
          NextActionTimeOut = other.NextActionTimeOut;
        }
        if (other.HasStep) {
          Step = other.Step;
        }
        if (other.HasUserSelf) {
          MergeUserSelf(other.UserSelf);
        }
        if (other.HasTableMoney) {
          TableMoney = other.TableMoney;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableStatssg101FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableStatssg101FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTableID = input.ReadInt32(ref result.tableID_);
              break;
            }
            case 16: {
              result.hasStage = input.ReadInt32(ref result.stage_);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.rank_, out unknown)) {
                result.hasRank = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.rule_, out unknown)) {
                result.hasRule = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
            case 40: {
              result.hasNextActionTimeOut = input.ReadInt32(ref result.nextActionTimeOut_);
              break;
            }
            case 48: {
              result.hasStep = input.ReadInt32(ref result.step_);
              break;
            }
            case 58: {
              global::gt_msg.TableUserStatssg101.Builder subBuilder = global::gt_msg.TableUserStatssg101.CreateBuilder();
              if (result.hasUserSelf) {
                subBuilder.MergeFrom(UserSelf);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserSelf = subBuilder.BuildPartial();
              break;
            }
            case 64: {
              result.hasTableMoney = input.ReadInt64(ref result.tableMoney_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableID {
        get { return result.hasTableID; }
      }
      public int TableID {
        get { return result.TableID; }
        set { SetTableID(value); }
      }
      public Builder SetTableID(int value) {
        PrepareBuilder();
        result.hasTableID = true;
        result.tableID_ = value;
        return this;
      }
      public Builder ClearTableID() {
        PrepareBuilder();
        result.hasTableID = false;
        result.tableID_ = 0;
        return this;
      }
      
      public bool HasStage {
        get { return result.hasStage; }
      }
      public int Stage {
        get { return result.Stage; }
        set { SetStage(value); }
      }
      public Builder SetStage(int value) {
        PrepareBuilder();
        result.hasStage = true;
        result.stage_ = value;
        return this;
      }
      public Builder ClearStage() {
        PrepareBuilder();
        result.hasStage = false;
        result.stage_ = 0;
        return this;
      }
      
      public bool HasRank {
       get { return result.hasRank; }
      }
      public global::gt_msg.Rank Rank {
        get { return result.Rank; }
        set { SetRank(value); }
      }
      public Builder SetRank(global::gt_msg.Rank value) {
        PrepareBuilder();
        result.hasRank = true;
        result.rank_ = value;
        return this;
      }
      public Builder ClearRank() {
        PrepareBuilder();
        result.hasRank = false;
        result.rank_ = global::gt_msg.Rank.LV0;
        return this;
      }
      
      public bool HasRule {
       get { return result.hasRule; }
      }
      public global::gt_msg.Rule Rule {
        get { return result.Rule; }
        set { SetRule(value); }
      }
      public Builder SetRule(global::gt_msg.Rule value) {
        PrepareBuilder();
        result.hasRule = true;
        result.rule_ = value;
        return this;
      }
      public Builder ClearRule() {
        PrepareBuilder();
        result.hasRule = false;
        result.rule_ = global::gt_msg.Rule.RuleNormal;
        return this;
      }
      
      public bool HasNextActionTimeOut {
        get { return result.hasNextActionTimeOut; }
      }
      public int NextActionTimeOut {
        get { return result.NextActionTimeOut; }
        set { SetNextActionTimeOut(value); }
      }
      public Builder SetNextActionTimeOut(int value) {
        PrepareBuilder();
        result.hasNextActionTimeOut = true;
        result.nextActionTimeOut_ = value;
        return this;
      }
      public Builder ClearNextActionTimeOut() {
        PrepareBuilder();
        result.hasNextActionTimeOut = false;
        result.nextActionTimeOut_ = 0;
        return this;
      }
      
      public bool HasStep {
        get { return result.hasStep; }
      }
      public int Step {
        get { return result.Step; }
        set { SetStep(value); }
      }
      public Builder SetStep(int value) {
        PrepareBuilder();
        result.hasStep = true;
        result.step_ = value;
        return this;
      }
      public Builder ClearStep() {
        PrepareBuilder();
        result.hasStep = false;
        result.step_ = 0;
        return this;
      }
      
      public bool HasUserSelf {
       get { return result.hasUserSelf; }
      }
      public global::gt_msg.TableUserStatssg101 UserSelf {
        get { return result.UserSelf; }
        set { SetUserSelf(value); }
      }
      public Builder SetUserSelf(global::gt_msg.TableUserStatssg101 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserSelf = true;
        result.userSelf_ = value;
        return this;
      }
      public Builder SetUserSelf(global::gt_msg.TableUserStatssg101.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserSelf = true;
        result.userSelf_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserSelf(global::gt_msg.TableUserStatssg101 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserSelf &&
            result.userSelf_ != global::gt_msg.TableUserStatssg101.DefaultInstance) {
            result.userSelf_ = global::gt_msg.TableUserStatssg101.CreateBuilder(result.userSelf_).MergeFrom(value).BuildPartial();
        } else {
          result.userSelf_ = value;
        }
        result.hasUserSelf = true;
        return this;
      }
      public Builder ClearUserSelf() {
        PrepareBuilder();
        result.hasUserSelf = false;
        result.userSelf_ = null;
        return this;
      }
      
      public bool HasTableMoney {
        get { return result.hasTableMoney; }
      }
      public long TableMoney {
        get { return result.TableMoney; }
        set { SetTableMoney(value); }
      }
      public Builder SetTableMoney(long value) {
        PrepareBuilder();
        result.hasTableMoney = true;
        result.tableMoney_ = value;
        return this;
      }
      public Builder ClearTableMoney() {
        PrepareBuilder();
        result.hasTableMoney = false;
        result.tableMoney_ = 0L;
        return this;
      }
    }
    static TableStatssg101() {
      object.ReferenceEquals(global::gt_msg.GtSg101.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableUserResultsg101 : pb::GeneratedMessage<TableUserResultsg101, TableUserResultsg101.Builder> {
    private TableUserResultsg101() { }
    private static readonly TableUserResultsg101 defaultInstance = new TableUserResultsg101().MakeReadOnly();
    private static readonly string[] _tableUserResultsg101FieldNames = new string[] { "ContinueWin", "LWOnSeat", "PointOnSeat", "Rank", "TAX", "explw", "user_info" };
    private static readonly uint[] _tableUserResultsg101FieldTags = new uint[] { 48, 26, 18, 56, 40, 32, 10 };
    public static TableUserResultsg101 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableUserResultsg101 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableUserResultsg101 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_TableUserResultsg101__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableUserResultsg101, TableUserResultsg101.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_TableUserResultsg101__FieldAccessorTable; }
    }
    
    public const int UserInfoFieldNumber = 1;
    private bool hasUserInfo;
    private global::gt_msg.User userInfo_;
    public bool HasUserInfo {
      get { return hasUserInfo; }
    }
    public global::gt_msg.User UserInfo {
      get { return userInfo_ ?? global::gt_msg.User.DefaultInstance; }
    }
    
    public const int PointOnSeatFieldNumber = 2;
    private pbc::PopsicleList<global::gt_msg.UserPaysg101> pointOnSeat_ = new pbc::PopsicleList<global::gt_msg.UserPaysg101>();
    public scg::IList<global::gt_msg.UserPaysg101> PointOnSeatList {
      get { return pointOnSeat_; }
    }
    public int PointOnSeatCount {
      get { return pointOnSeat_.Count; }
    }
    public global::gt_msg.UserPaysg101 GetPointOnSeat(int index) {
      return pointOnSeat_[index];
    }
    
    public const int LWOnSeatFieldNumber = 3;
    private pbc::PopsicleList<global::gt_msg.UserPaysg101> lWOnSeat_ = new pbc::PopsicleList<global::gt_msg.UserPaysg101>();
    public scg::IList<global::gt_msg.UserPaysg101> LWOnSeatList {
      get { return lWOnSeat_; }
    }
    public int LWOnSeatCount {
      get { return lWOnSeat_.Count; }
    }
    public global::gt_msg.UserPaysg101 GetLWOnSeat(int index) {
      return lWOnSeat_[index];
    }
    
    public const int ExplwFieldNumber = 4;
    private bool hasExplw;
    private long explw_;
    public bool HasExplw {
      get { return hasExplw; }
    }
    public long Explw {
      get { return explw_; }
    }
    
    public const int TAXFieldNumber = 5;
    private bool hasTAX;
    private long tAX_;
    public bool HasTAX {
      get { return hasTAX; }
    }
    public long TAX {
      get { return tAX_; }
    }
    
    public const int ContinueWinFieldNumber = 6;
    private bool hasContinueWin;
    private int continueWin_;
    public bool HasContinueWin {
      get { return hasContinueWin; }
    }
    public int ContinueWin {
      get { return continueWin_; }
    }
    
    public const int RankFieldNumber = 7;
    private bool hasRank;
    private int rank_;
    public bool HasRank {
      get { return hasRank; }
    }
    public int Rank {
      get { return rank_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserInfo) return false;
        if (!UserInfo.IsInitialized) return false;
        foreach (global::gt_msg.UserPaysg101 element in PointOnSeatList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::gt_msg.UserPaysg101 element in LWOnSeatList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tableUserResultsg101FieldNames;
      if (hasUserInfo) {
        output.WriteMessage(1, field_names[6], UserInfo);
      }
      if (pointOnSeat_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], pointOnSeat_);
      }
      if (lWOnSeat_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], lWOnSeat_);
      }
      if (hasExplw) {
        output.WriteInt64(4, field_names[5], Explw);
      }
      if (hasTAX) {
        output.WriteInt64(5, field_names[4], TAX);
      }
      if (hasContinueWin) {
        output.WriteInt32(6, field_names[0], ContinueWin);
      }
      if (hasRank) {
        output.WriteInt32(7, field_names[3], Rank);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserInfo) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, UserInfo);
      }
      foreach (global::gt_msg.UserPaysg101 element in PointOnSeatList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      foreach (global::gt_msg.UserPaysg101 element in LWOnSeatList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      if (hasExplw) {
        size += pb::CodedOutputStream.ComputeInt64Size(4, Explw);
      }
      if (hasTAX) {
        size += pb::CodedOutputStream.ComputeInt64Size(5, TAX);
      }
      if (hasContinueWin) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, ContinueWin);
      }
      if (hasRank) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, Rank);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TableUserResultsg101 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableUserResultsg101 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableUserResultsg101 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableUserResultsg101 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableUserResultsg101 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableUserResultsg101 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableUserResultsg101 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableUserResultsg101 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableUserResultsg101 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableUserResultsg101 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableUserResultsg101 MakeReadOnly() {
      pointOnSeat_.MakeReadOnly();
      lWOnSeat_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableUserResultsg101 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableUserResultsg101, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableUserResultsg101 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableUserResultsg101 result;
      
      private TableUserResultsg101 PrepareBuilder() {
        if (resultIsReadOnly) {
          TableUserResultsg101 original = result;
          result = new TableUserResultsg101();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableUserResultsg101 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.TableUserResultsg101.Descriptor; }
      }
      
      public override TableUserResultsg101 DefaultInstanceForType {
        get { return global::gt_msg.TableUserResultsg101.DefaultInstance; }
      }
      
      public override TableUserResultsg101 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableUserResultsg101) {
          return MergeFrom((TableUserResultsg101) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableUserResultsg101 other) {
        if (other == global::gt_msg.TableUserResultsg101.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserInfo) {
          MergeUserInfo(other.UserInfo);
        }
        if (other.pointOnSeat_.Count != 0) {
          result.pointOnSeat_.Add(other.pointOnSeat_);
        }
        if (other.lWOnSeat_.Count != 0) {
          result.lWOnSeat_.Add(other.lWOnSeat_);
        }
        if (other.HasExplw) {
          Explw = other.Explw;
        }
        if (other.HasTAX) {
          TAX = other.TAX;
        }
        if (other.HasContinueWin) {
          ContinueWin = other.ContinueWin;
        }
        if (other.HasRank) {
          Rank = other.Rank;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableUserResultsg101FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableUserResultsg101FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::gt_msg.User.Builder subBuilder = global::gt_msg.User.CreateBuilder();
              if (result.hasUserInfo) {
                subBuilder.MergeFrom(UserInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserInfo = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.pointOnSeat_, global::gt_msg.UserPaysg101.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.lWOnSeat_, global::gt_msg.UserPaysg101.DefaultInstance, extensionRegistry);
              break;
            }
            case 32: {
              result.hasExplw = input.ReadInt64(ref result.explw_);
              break;
            }
            case 40: {
              result.hasTAX = input.ReadInt64(ref result.tAX_);
              break;
            }
            case 48: {
              result.hasContinueWin = input.ReadInt32(ref result.continueWin_);
              break;
            }
            case 56: {
              result.hasRank = input.ReadInt32(ref result.rank_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserInfo {
       get { return result.hasUserInfo; }
      }
      public global::gt_msg.User UserInfo {
        get { return result.UserInfo; }
        set { SetUserInfo(value); }
      }
      public Builder SetUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = value;
        return this;
      }
      public Builder SetUserInfo(global::gt_msg.User.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserInfo &&
            result.userInfo_ != global::gt_msg.User.DefaultInstance) {
            result.userInfo_ = global::gt_msg.User.CreateBuilder(result.userInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.userInfo_ = value;
        }
        result.hasUserInfo = true;
        return this;
      }
      public Builder ClearUserInfo() {
        PrepareBuilder();
        result.hasUserInfo = false;
        result.userInfo_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::gt_msg.UserPaysg101> PointOnSeatList {
        get { return PrepareBuilder().pointOnSeat_; }
      }
      public int PointOnSeatCount {
        get { return result.PointOnSeatCount; }
      }
      public global::gt_msg.UserPaysg101 GetPointOnSeat(int index) {
        return result.GetPointOnSeat(index);
      }
      public Builder SetPointOnSeat(int index, global::gt_msg.UserPaysg101 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.pointOnSeat_[index] = value;
        return this;
      }
      public Builder SetPointOnSeat(int index, global::gt_msg.UserPaysg101.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.pointOnSeat_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPointOnSeat(global::gt_msg.UserPaysg101 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.pointOnSeat_.Add(value);
        return this;
      }
      public Builder AddPointOnSeat(global::gt_msg.UserPaysg101.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.pointOnSeat_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePointOnSeat(scg::IEnumerable<global::gt_msg.UserPaysg101> values) {
        PrepareBuilder();
        result.pointOnSeat_.Add(values);
        return this;
      }
      public Builder ClearPointOnSeat() {
        PrepareBuilder();
        result.pointOnSeat_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::gt_msg.UserPaysg101> LWOnSeatList {
        get { return PrepareBuilder().lWOnSeat_; }
      }
      public int LWOnSeatCount {
        get { return result.LWOnSeatCount; }
      }
      public global::gt_msg.UserPaysg101 GetLWOnSeat(int index) {
        return result.GetLWOnSeat(index);
      }
      public Builder SetLWOnSeat(int index, global::gt_msg.UserPaysg101 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.lWOnSeat_[index] = value;
        return this;
      }
      public Builder SetLWOnSeat(int index, global::gt_msg.UserPaysg101.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.lWOnSeat_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLWOnSeat(global::gt_msg.UserPaysg101 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.lWOnSeat_.Add(value);
        return this;
      }
      public Builder AddLWOnSeat(global::gt_msg.UserPaysg101.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.lWOnSeat_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLWOnSeat(scg::IEnumerable<global::gt_msg.UserPaysg101> values) {
        PrepareBuilder();
        result.lWOnSeat_.Add(values);
        return this;
      }
      public Builder ClearLWOnSeat() {
        PrepareBuilder();
        result.lWOnSeat_.Clear();
        return this;
      }
      
      public bool HasExplw {
        get { return result.hasExplw; }
      }
      public long Explw {
        get { return result.Explw; }
        set { SetExplw(value); }
      }
      public Builder SetExplw(long value) {
        PrepareBuilder();
        result.hasExplw = true;
        result.explw_ = value;
        return this;
      }
      public Builder ClearExplw() {
        PrepareBuilder();
        result.hasExplw = false;
        result.explw_ = 0L;
        return this;
      }
      
      public bool HasTAX {
        get { return result.hasTAX; }
      }
      public long TAX {
        get { return result.TAX; }
        set { SetTAX(value); }
      }
      public Builder SetTAX(long value) {
        PrepareBuilder();
        result.hasTAX = true;
        result.tAX_ = value;
        return this;
      }
      public Builder ClearTAX() {
        PrepareBuilder();
        result.hasTAX = false;
        result.tAX_ = 0L;
        return this;
      }
      
      public bool HasContinueWin {
        get { return result.hasContinueWin; }
      }
      public int ContinueWin {
        get { return result.ContinueWin; }
        set { SetContinueWin(value); }
      }
      public Builder SetContinueWin(int value) {
        PrepareBuilder();
        result.hasContinueWin = true;
        result.continueWin_ = value;
        return this;
      }
      public Builder ClearContinueWin() {
        PrepareBuilder();
        result.hasContinueWin = false;
        result.continueWin_ = 0;
        return this;
      }
      
      public bool HasRank {
        get { return result.hasRank; }
      }
      public int Rank {
        get { return result.Rank; }
        set { SetRank(value); }
      }
      public Builder SetRank(int value) {
        PrepareBuilder();
        result.hasRank = true;
        result.rank_ = value;
        return this;
      }
      public Builder ClearRank() {
        PrepareBuilder();
        result.hasRank = false;
        result.rank_ = 0;
        return this;
      }
    }
    static TableUserResultsg101() {
      object.ReferenceEquals(global::gt_msg.GtSg101.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RoundEndedEventsg101 : pb::GeneratedMessage<RoundEndedEventsg101, RoundEndedEventsg101.Builder> {
    private RoundEndedEventsg101() { }
    private static readonly RoundEndedEventsg101 defaultInstance = new RoundEndedEventsg101().MakeReadOnly();
    private static readonly string[] _roundEndedEventsg101FieldNames = new string[] { "BeginItem", "Explw", "NextStartTimeoutSecs", "OpenSeat", "TableID", "UserSelf", "WinNick", "WinNum", "WinSeat" };
    private static readonly uint[] _roundEndedEventsg101FieldTags = new uint[] { 72, 48, 16, 56, 8, 26, 34, 40, 64 };
    public static RoundEndedEventsg101 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RoundEndedEventsg101 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RoundEndedEventsg101 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_RoundEndedEventsg101__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RoundEndedEventsg101, RoundEndedEventsg101.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_RoundEndedEventsg101__FieldAccessorTable; }
    }
    
    public const int TableIDFieldNumber = 1;
    private bool hasTableID;
    private int tableID_;
    public bool HasTableID {
      get { return hasTableID; }
    }
    public int TableID {
      get { return tableID_; }
    }
    
    public const int NextStartTimeoutSecsFieldNumber = 2;
    private bool hasNextStartTimeoutSecs;
    private int nextStartTimeoutSecs_;
    public bool HasNextStartTimeoutSecs {
      get { return hasNextStartTimeoutSecs; }
    }
    public int NextStartTimeoutSecs {
      get { return nextStartTimeoutSecs_; }
    }
    
    public const int UserSelfFieldNumber = 3;
    private bool hasUserSelf;
    private global::gt_msg.TableUserResultsg101 userSelf_;
    public bool HasUserSelf {
      get { return hasUserSelf; }
    }
    public global::gt_msg.TableUserResultsg101 UserSelf {
      get { return userSelf_ ?? global::gt_msg.TableUserResultsg101.DefaultInstance; }
    }
    
    public const int WinNickFieldNumber = 4;
    private pbc::PopsicleList<string> winNick_ = new pbc::PopsicleList<string>();
    public scg::IList<string> WinNickList {
      get { return pbc::Lists.AsReadOnly(winNick_); }
    }
    public int WinNickCount {
      get { return winNick_.Count; }
    }
    public string GetWinNick(int index) {
      return winNick_[index];
    }
    
    public const int WinNumFieldNumber = 5;
    private pbc::PopsicleList<long> winNum_ = new pbc::PopsicleList<long>();
    public scg::IList<long> WinNumList {
      get { return pbc::Lists.AsReadOnly(winNum_); }
    }
    public int WinNumCount {
      get { return winNum_.Count; }
    }
    public long GetWinNum(int index) {
      return winNum_[index];
    }
    
    public const int ExplwFieldNumber = 6;
    private pbc::PopsicleList<long> explw_ = new pbc::PopsicleList<long>();
    public scg::IList<long> ExplwList {
      get { return pbc::Lists.AsReadOnly(explw_); }
    }
    public int ExplwCount {
      get { return explw_.Count; }
    }
    public long GetExplw(int index) {
      return explw_[index];
    }
    
    public const int OpenSeatFieldNumber = 7;
    private pbc::PopsicleList<int> openSeat_ = new pbc::PopsicleList<int>();
    public scg::IList<int> OpenSeatList {
      get { return pbc::Lists.AsReadOnly(openSeat_); }
    }
    public int OpenSeatCount {
      get { return openSeat_.Count; }
    }
    public int GetOpenSeat(int index) {
      return openSeat_[index];
    }
    
    public const int WinSeatFieldNumber = 8;
    private pbc::PopsicleList<int> winSeat_ = new pbc::PopsicleList<int>();
    public scg::IList<int> WinSeatList {
      get { return pbc::Lists.AsReadOnly(winSeat_); }
    }
    public int WinSeatCount {
      get { return winSeat_.Count; }
    }
    public int GetWinSeat(int index) {
      return winSeat_[index];
    }
    
    public const int BeginItemFieldNumber = 9;
    private pbc::PopsicleList<int> beginItem_ = new pbc::PopsicleList<int>();
    public scg::IList<int> BeginItemList {
      get { return pbc::Lists.AsReadOnly(beginItem_); }
    }
    public int BeginItemCount {
      get { return beginItem_.Count; }
    }
    public int GetBeginItem(int index) {
      return beginItem_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableID) return false;
        if (!hasNextStartTimeoutSecs) return false;
        if (HasUserSelf) {
          if (!UserSelf.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _roundEndedEventsg101FieldNames;
      if (hasTableID) {
        output.WriteInt32(1, field_names[4], TableID);
      }
      if (hasNextStartTimeoutSecs) {
        output.WriteInt32(2, field_names[2], NextStartTimeoutSecs);
      }
      if (hasUserSelf) {
        output.WriteMessage(3, field_names[5], UserSelf);
      }
      if (winNick_.Count > 0) {
        output.WriteStringArray(4, field_names[6], winNick_);
      }
      if (winNum_.Count > 0) {
        output.WriteInt64Array(5, field_names[7], winNum_);
      }
      if (explw_.Count > 0) {
        output.WriteInt64Array(6, field_names[1], explw_);
      }
      if (openSeat_.Count > 0) {
        output.WriteInt32Array(7, field_names[3], openSeat_);
      }
      if (winSeat_.Count > 0) {
        output.WriteInt32Array(8, field_names[8], winSeat_);
      }
      if (beginItem_.Count > 0) {
        output.WriteInt32Array(9, field_names[0], beginItem_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableID) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, TableID);
      }
      if (hasNextStartTimeoutSecs) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, NextStartTimeoutSecs);
      }
      if (hasUserSelf) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, UserSelf);
      }
      {
        int dataSize = 0;
        foreach (string element in WinNickList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * winNick_.Count;
      }
      {
        int dataSize = 0;
        foreach (long element in WinNumList) {
          dataSize += pb::CodedOutputStream.ComputeInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * winNum_.Count;
      }
      {
        int dataSize = 0;
        foreach (long element in ExplwList) {
          dataSize += pb::CodedOutputStream.ComputeInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * explw_.Count;
      }
      {
        int dataSize = 0;
        foreach (int element in OpenSeatList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * openSeat_.Count;
      }
      {
        int dataSize = 0;
        foreach (int element in WinSeatList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * winSeat_.Count;
      }
      {
        int dataSize = 0;
        foreach (int element in BeginItemList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * beginItem_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RoundEndedEventsg101 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RoundEndedEventsg101 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RoundEndedEventsg101 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RoundEndedEventsg101 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RoundEndedEventsg101 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RoundEndedEventsg101 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RoundEndedEventsg101 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RoundEndedEventsg101 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RoundEndedEventsg101 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RoundEndedEventsg101 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RoundEndedEventsg101 MakeReadOnly() {
      winNick_.MakeReadOnly();
      winNum_.MakeReadOnly();
      explw_.MakeReadOnly();
      openSeat_.MakeReadOnly();
      winSeat_.MakeReadOnly();
      beginItem_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RoundEndedEventsg101 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RoundEndedEventsg101, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RoundEndedEventsg101 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RoundEndedEventsg101 result;
      
      private RoundEndedEventsg101 PrepareBuilder() {
        if (resultIsReadOnly) {
          RoundEndedEventsg101 original = result;
          result = new RoundEndedEventsg101();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RoundEndedEventsg101 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.RoundEndedEventsg101.Descriptor; }
      }
      
      public override RoundEndedEventsg101 DefaultInstanceForType {
        get { return global::gt_msg.RoundEndedEventsg101.DefaultInstance; }
      }
      
      public override RoundEndedEventsg101 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RoundEndedEventsg101) {
          return MergeFrom((RoundEndedEventsg101) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RoundEndedEventsg101 other) {
        if (other == global::gt_msg.RoundEndedEventsg101.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableID) {
          TableID = other.TableID;
        }
        if (other.HasNextStartTimeoutSecs) {
          NextStartTimeoutSecs = other.NextStartTimeoutSecs;
        }
        if (other.HasUserSelf) {
          MergeUserSelf(other.UserSelf);
        }
        if (other.winNick_.Count != 0) {
          result.winNick_.Add(other.winNick_);
        }
        if (other.winNum_.Count != 0) {
          result.winNum_.Add(other.winNum_);
        }
        if (other.explw_.Count != 0) {
          result.explw_.Add(other.explw_);
        }
        if (other.openSeat_.Count != 0) {
          result.openSeat_.Add(other.openSeat_);
        }
        if (other.winSeat_.Count != 0) {
          result.winSeat_.Add(other.winSeat_);
        }
        if (other.beginItem_.Count != 0) {
          result.beginItem_.Add(other.beginItem_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_roundEndedEventsg101FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _roundEndedEventsg101FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTableID = input.ReadInt32(ref result.tableID_);
              break;
            }
            case 16: {
              result.hasNextStartTimeoutSecs = input.ReadInt32(ref result.nextStartTimeoutSecs_);
              break;
            }
            case 26: {
              global::gt_msg.TableUserResultsg101.Builder subBuilder = global::gt_msg.TableUserResultsg101.CreateBuilder();
              if (result.hasUserSelf) {
                subBuilder.MergeFrom(UserSelf);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserSelf = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              input.ReadStringArray(tag, field_name, result.winNick_);
              break;
            }
            case 42:
            case 40: {
              input.ReadInt64Array(tag, field_name, result.winNum_);
              break;
            }
            case 50:
            case 48: {
              input.ReadInt64Array(tag, field_name, result.explw_);
              break;
            }
            case 58:
            case 56: {
              input.ReadInt32Array(tag, field_name, result.openSeat_);
              break;
            }
            case 66:
            case 64: {
              input.ReadInt32Array(tag, field_name, result.winSeat_);
              break;
            }
            case 74:
            case 72: {
              input.ReadInt32Array(tag, field_name, result.beginItem_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableID {
        get { return result.hasTableID; }
      }
      public int TableID {
        get { return result.TableID; }
        set { SetTableID(value); }
      }
      public Builder SetTableID(int value) {
        PrepareBuilder();
        result.hasTableID = true;
        result.tableID_ = value;
        return this;
      }
      public Builder ClearTableID() {
        PrepareBuilder();
        result.hasTableID = false;
        result.tableID_ = 0;
        return this;
      }
      
      public bool HasNextStartTimeoutSecs {
        get { return result.hasNextStartTimeoutSecs; }
      }
      public int NextStartTimeoutSecs {
        get { return result.NextStartTimeoutSecs; }
        set { SetNextStartTimeoutSecs(value); }
      }
      public Builder SetNextStartTimeoutSecs(int value) {
        PrepareBuilder();
        result.hasNextStartTimeoutSecs = true;
        result.nextStartTimeoutSecs_ = value;
        return this;
      }
      public Builder ClearNextStartTimeoutSecs() {
        PrepareBuilder();
        result.hasNextStartTimeoutSecs = false;
        result.nextStartTimeoutSecs_ = 0;
        return this;
      }
      
      public bool HasUserSelf {
       get { return result.hasUserSelf; }
      }
      public global::gt_msg.TableUserResultsg101 UserSelf {
        get { return result.UserSelf; }
        set { SetUserSelf(value); }
      }
      public Builder SetUserSelf(global::gt_msg.TableUserResultsg101 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserSelf = true;
        result.userSelf_ = value;
        return this;
      }
      public Builder SetUserSelf(global::gt_msg.TableUserResultsg101.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserSelf = true;
        result.userSelf_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserSelf(global::gt_msg.TableUserResultsg101 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserSelf &&
            result.userSelf_ != global::gt_msg.TableUserResultsg101.DefaultInstance) {
            result.userSelf_ = global::gt_msg.TableUserResultsg101.CreateBuilder(result.userSelf_).MergeFrom(value).BuildPartial();
        } else {
          result.userSelf_ = value;
        }
        result.hasUserSelf = true;
        return this;
      }
      public Builder ClearUserSelf() {
        PrepareBuilder();
        result.hasUserSelf = false;
        result.userSelf_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<string> WinNickList {
        get { return PrepareBuilder().winNick_; }
      }
      public int WinNickCount {
        get { return result.WinNickCount; }
      }
      public string GetWinNick(int index) {
        return result.GetWinNick(index);
      }
      public Builder SetWinNick(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.winNick_[index] = value;
        return this;
      }
      public Builder AddWinNick(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.winNick_.Add(value);
        return this;
      }
      public Builder AddRangeWinNick(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.winNick_.Add(values);
        return this;
      }
      public Builder ClearWinNick() {
        PrepareBuilder();
        result.winNick_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<long> WinNumList {
        get { return PrepareBuilder().winNum_; }
      }
      public int WinNumCount {
        get { return result.WinNumCount; }
      }
      public long GetWinNum(int index) {
        return result.GetWinNum(index);
      }
      public Builder SetWinNum(int index, long value) {
        PrepareBuilder();
        result.winNum_[index] = value;
        return this;
      }
      public Builder AddWinNum(long value) {
        PrepareBuilder();
        result.winNum_.Add(value);
        return this;
      }
      public Builder AddRangeWinNum(scg::IEnumerable<long> values) {
        PrepareBuilder();
        result.winNum_.Add(values);
        return this;
      }
      public Builder ClearWinNum() {
        PrepareBuilder();
        result.winNum_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<long> ExplwList {
        get { return PrepareBuilder().explw_; }
      }
      public int ExplwCount {
        get { return result.ExplwCount; }
      }
      public long GetExplw(int index) {
        return result.GetExplw(index);
      }
      public Builder SetExplw(int index, long value) {
        PrepareBuilder();
        result.explw_[index] = value;
        return this;
      }
      public Builder AddExplw(long value) {
        PrepareBuilder();
        result.explw_.Add(value);
        return this;
      }
      public Builder AddRangeExplw(scg::IEnumerable<long> values) {
        PrepareBuilder();
        result.explw_.Add(values);
        return this;
      }
      public Builder ClearExplw() {
        PrepareBuilder();
        result.explw_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<int> OpenSeatList {
        get { return PrepareBuilder().openSeat_; }
      }
      public int OpenSeatCount {
        get { return result.OpenSeatCount; }
      }
      public int GetOpenSeat(int index) {
        return result.GetOpenSeat(index);
      }
      public Builder SetOpenSeat(int index, int value) {
        PrepareBuilder();
        result.openSeat_[index] = value;
        return this;
      }
      public Builder AddOpenSeat(int value) {
        PrepareBuilder();
        result.openSeat_.Add(value);
        return this;
      }
      public Builder AddRangeOpenSeat(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.openSeat_.Add(values);
        return this;
      }
      public Builder ClearOpenSeat() {
        PrepareBuilder();
        result.openSeat_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<int> WinSeatList {
        get { return PrepareBuilder().winSeat_; }
      }
      public int WinSeatCount {
        get { return result.WinSeatCount; }
      }
      public int GetWinSeat(int index) {
        return result.GetWinSeat(index);
      }
      public Builder SetWinSeat(int index, int value) {
        PrepareBuilder();
        result.winSeat_[index] = value;
        return this;
      }
      public Builder AddWinSeat(int value) {
        PrepareBuilder();
        result.winSeat_.Add(value);
        return this;
      }
      public Builder AddRangeWinSeat(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.winSeat_.Add(values);
        return this;
      }
      public Builder ClearWinSeat() {
        PrepareBuilder();
        result.winSeat_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<int> BeginItemList {
        get { return PrepareBuilder().beginItem_; }
      }
      public int BeginItemCount {
        get { return result.BeginItemCount; }
      }
      public int GetBeginItem(int index) {
        return result.GetBeginItem(index);
      }
      public Builder SetBeginItem(int index, int value) {
        PrepareBuilder();
        result.beginItem_[index] = value;
        return this;
      }
      public Builder AddBeginItem(int value) {
        PrepareBuilder();
        result.beginItem_.Add(value);
        return this;
      }
      public Builder AddRangeBeginItem(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.beginItem_.Add(values);
        return this;
      }
      public Builder ClearBeginItem() {
        PrepareBuilder();
        result.beginItem_.Clear();
        return this;
      }
    }
    static RoundEndedEventsg101() {
      object.ReferenceEquals(global::gt_msg.GtSg101.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ForceExitTableRequestsg101 : pb::GeneratedMessage<ForceExitTableRequestsg101, ForceExitTableRequestsg101.Builder> {
    private ForceExitTableRequestsg101() { }
    private static readonly ForceExitTableRequestsg101 defaultInstance = new ForceExitTableRequestsg101().MakeReadOnly();
    private static readonly string[] _forceExitTableRequestsg101FieldNames = new string[] {  };
    private static readonly uint[] _forceExitTableRequestsg101FieldTags = new uint[] {  };
    public static ForceExitTableRequestsg101 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ForceExitTableRequestsg101 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ForceExitTableRequestsg101 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_ForceExitTableRequestsg101__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ForceExitTableRequestsg101, ForceExitTableRequestsg101.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_ForceExitTableRequestsg101__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _forceExitTableRequestsg101FieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ForceExitTableRequestsg101 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ForceExitTableRequestsg101 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableRequestsg101 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ForceExitTableRequestsg101 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableRequestsg101 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ForceExitTableRequestsg101 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableRequestsg101 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ForceExitTableRequestsg101 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ForceExitTableRequestsg101 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ForceExitTableRequestsg101 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ForceExitTableRequestsg101 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ForceExitTableRequestsg101 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ForceExitTableRequestsg101, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ForceExitTableRequestsg101 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ForceExitTableRequestsg101 result;
      
      private ForceExitTableRequestsg101 PrepareBuilder() {
        if (resultIsReadOnly) {
          ForceExitTableRequestsg101 original = result;
          result = new ForceExitTableRequestsg101();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ForceExitTableRequestsg101 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.ForceExitTableRequestsg101.Descriptor; }
      }
      
      public override ForceExitTableRequestsg101 DefaultInstanceForType {
        get { return global::gt_msg.ForceExitTableRequestsg101.DefaultInstance; }
      }
      
      public override ForceExitTableRequestsg101 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ForceExitTableRequestsg101) {
          return MergeFrom((ForceExitTableRequestsg101) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ForceExitTableRequestsg101 other) {
        if (other == global::gt_msg.ForceExitTableRequestsg101.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_forceExitTableRequestsg101FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _forceExitTableRequestsg101FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static ForceExitTableRequestsg101() {
      object.ReferenceEquals(global::gt_msg.GtSg101.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ForceExitTableResponsesg101 : pb::GeneratedMessage<ForceExitTableResponsesg101, ForceExitTableResponsesg101.Builder> {
    private ForceExitTableResponsesg101() { }
    private static readonly ForceExitTableResponsesg101 defaultInstance = new ForceExitTableResponsesg101().MakeReadOnly();
    private static readonly string[] _forceExitTableResponsesg101FieldNames = new string[] { "code" };
    private static readonly uint[] _forceExitTableResponsesg101FieldTags = new uint[] { 8 };
    public static ForceExitTableResponsesg101 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ForceExitTableResponsesg101 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ForceExitTableResponsesg101 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_ForceExitTableResponsesg101__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ForceExitTableResponsesg101, ForceExitTableResponsesg101.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_ForceExitTableResponsesg101__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Code {
        Normal = 0,
        GiveUp = 1,
        NoEnoughMoney = 2,
        ChangeTable = 3,
        CanNotExitForPlaying = 4,
        CanNotChangeTableForPlaying = 5,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.ForceExitTableResponsesg101.Types.Code code_ = global::gt_msg.ForceExitTableResponsesg101.Types.Code.Normal;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.ForceExitTableResponsesg101.Types.Code Code {
      get { return code_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _forceExitTableResponsesg101FieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[0], (int) Code, Code);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ForceExitTableResponsesg101 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ForceExitTableResponsesg101 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableResponsesg101 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ForceExitTableResponsesg101 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableResponsesg101 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ForceExitTableResponsesg101 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableResponsesg101 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ForceExitTableResponsesg101 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ForceExitTableResponsesg101 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ForceExitTableResponsesg101 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ForceExitTableResponsesg101 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ForceExitTableResponsesg101 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ForceExitTableResponsesg101, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ForceExitTableResponsesg101 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ForceExitTableResponsesg101 result;
      
      private ForceExitTableResponsesg101 PrepareBuilder() {
        if (resultIsReadOnly) {
          ForceExitTableResponsesg101 original = result;
          result = new ForceExitTableResponsesg101();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ForceExitTableResponsesg101 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.ForceExitTableResponsesg101.Descriptor; }
      }
      
      public override ForceExitTableResponsesg101 DefaultInstanceForType {
        get { return global::gt_msg.ForceExitTableResponsesg101.DefaultInstance; }
      }
      
      public override ForceExitTableResponsesg101 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ForceExitTableResponsesg101) {
          return MergeFrom((ForceExitTableResponsesg101) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ForceExitTableResponsesg101 other) {
        if (other == global::gt_msg.ForceExitTableResponsesg101.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_forceExitTableResponsesg101FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _forceExitTableResponsesg101FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.ForceExitTableResponsesg101.Types.Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.ForceExitTableResponsesg101.Types.Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.ForceExitTableResponsesg101.Types.Code.Normal;
        return this;
      }
    }
    static ForceExitTableResponsesg101() {
      object.ReferenceEquals(global::gt_msg.GtSg101.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GameLifeRequestsg101 : pb::GeneratedMessage<GameLifeRequestsg101, GameLifeRequestsg101.Builder> {
    private GameLifeRequestsg101() { }
    private static readonly GameLifeRequestsg101 defaultInstance = new GameLifeRequestsg101().MakeReadOnly();
    private static readonly string[] _gameLifeRequestsg101FieldNames = new string[] { "uid" };
    private static readonly uint[] _gameLifeRequestsg101FieldTags = new uint[] { 10 };
    public static GameLifeRequestsg101 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameLifeRequestsg101 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameLifeRequestsg101 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_GameLifeRequestsg101__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameLifeRequestsg101, GameLifeRequestsg101.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_GameLifeRequestsg101__FieldAccessorTable; }
    }
    
    public const int UidFieldNumber = 1;
    private bool hasUid;
    private string uid_ = "";
    public bool HasUid {
      get { return hasUid; }
    }
    public string Uid {
      get { return uid_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUid) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _gameLifeRequestsg101FieldNames;
      if (hasUid) {
        output.WriteString(1, field_names[0], Uid);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Uid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GameLifeRequestsg101 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameLifeRequestsg101 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameLifeRequestsg101 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameLifeRequestsg101 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameLifeRequestsg101 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameLifeRequestsg101 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameLifeRequestsg101 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameLifeRequestsg101 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameLifeRequestsg101 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameLifeRequestsg101 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameLifeRequestsg101 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameLifeRequestsg101 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GameLifeRequestsg101, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameLifeRequestsg101 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameLifeRequestsg101 result;
      
      private GameLifeRequestsg101 PrepareBuilder() {
        if (resultIsReadOnly) {
          GameLifeRequestsg101 original = result;
          result = new GameLifeRequestsg101();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameLifeRequestsg101 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.GameLifeRequestsg101.Descriptor; }
      }
      
      public override GameLifeRequestsg101 DefaultInstanceForType {
        get { return global::gt_msg.GameLifeRequestsg101.DefaultInstance; }
      }
      
      public override GameLifeRequestsg101 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameLifeRequestsg101) {
          return MergeFrom((GameLifeRequestsg101) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameLifeRequestsg101 other) {
        if (other == global::gt_msg.GameLifeRequestsg101.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUid) {
          Uid = other.Uid;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameLifeRequestsg101FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameLifeRequestsg101FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUid = input.ReadString(ref result.uid_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUid {
        get { return result.hasUid; }
      }
      public string Uid {
        get { return result.Uid; }
        set { SetUid(value); }
      }
      public Builder SetUid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder ClearUid() {
        PrepareBuilder();
        result.hasUid = false;
        result.uid_ = "";
        return this;
      }
    }
    static GameLifeRequestsg101() {
      object.ReferenceEquals(global::gt_msg.GtSg101.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GameLifeResponsesg101 : pb::GeneratedMessage<GameLifeResponsesg101, GameLifeResponsesg101.Builder> {
    private GameLifeResponsesg101() { }
    private static readonly GameLifeResponsesg101 defaultInstance = new GameLifeResponsesg101().MakeReadOnly();
    private static readonly string[] _gameLifeResponsesg101FieldNames = new string[] { "code", "continueWin", "gameAllUserNum", "level1WinChips", "level1WinChipsRank", "level2WinChips", "level2WinChipsRank", "level3WinChips", "level3WinChipsRank", "level4WinChips", "level4WinChipsRank", "level5WinChips", "level5WinChipsRank", "lostTimes", "user_info", "winTimes" };
    private static readonly uint[] _gameLifeResponsesg101FieldTags = new uint[] { 8, 40, 128, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 32, 18, 24 };
    public static GameLifeResponsesg101 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameLifeResponsesg101 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameLifeResponsesg101 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_GameLifeResponsesg101__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameLifeResponsesg101, GameLifeResponsesg101.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_GameLifeResponsesg101__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Code {
        Ok = 0,
        Failed = 1,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.GameLifeResponsesg101.Types.Code code_ = global::gt_msg.GameLifeResponsesg101.Types.Code.Ok;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.GameLifeResponsesg101.Types.Code Code {
      get { return code_; }
    }
    
    public const int UserInfoFieldNumber = 2;
    private bool hasUserInfo;
    private global::gt_msg.User userInfo_;
    public bool HasUserInfo {
      get { return hasUserInfo; }
    }
    public global::gt_msg.User UserInfo {
      get { return userInfo_ ?? global::gt_msg.User.DefaultInstance; }
    }
    
    public const int WinTimesFieldNumber = 3;
    private bool hasWinTimes;
    private int winTimes_;
    public bool HasWinTimes {
      get { return hasWinTimes; }
    }
    public int WinTimes {
      get { return winTimes_; }
    }
    
    public const int LostTimesFieldNumber = 4;
    private bool hasLostTimes;
    private int lostTimes_;
    public bool HasLostTimes {
      get { return hasLostTimes; }
    }
    public int LostTimes {
      get { return lostTimes_; }
    }
    
    public const int ContinueWinFieldNumber = 5;
    private bool hasContinueWin;
    private int continueWin_;
    public bool HasContinueWin {
      get { return hasContinueWin; }
    }
    public int ContinueWin {
      get { return continueWin_; }
    }
    
    public const int Level1WinChipsFieldNumber = 6;
    private bool hasLevel1WinChips;
    private long level1WinChips_;
    public bool HasLevel1WinChips {
      get { return hasLevel1WinChips; }
    }
    public long Level1WinChips {
      get { return level1WinChips_; }
    }
    
    public const int Level1WinChipsRankFieldNumber = 7;
    private bool hasLevel1WinChipsRank;
    private int level1WinChipsRank_;
    public bool HasLevel1WinChipsRank {
      get { return hasLevel1WinChipsRank; }
    }
    public int Level1WinChipsRank {
      get { return level1WinChipsRank_; }
    }
    
    public const int Level2WinChipsFieldNumber = 8;
    private bool hasLevel2WinChips;
    private long level2WinChips_;
    public bool HasLevel2WinChips {
      get { return hasLevel2WinChips; }
    }
    public long Level2WinChips {
      get { return level2WinChips_; }
    }
    
    public const int Level2WinChipsRankFieldNumber = 9;
    private bool hasLevel2WinChipsRank;
    private int level2WinChipsRank_;
    public bool HasLevel2WinChipsRank {
      get { return hasLevel2WinChipsRank; }
    }
    public int Level2WinChipsRank {
      get { return level2WinChipsRank_; }
    }
    
    public const int Level3WinChipsFieldNumber = 10;
    private bool hasLevel3WinChips;
    private long level3WinChips_;
    public bool HasLevel3WinChips {
      get { return hasLevel3WinChips; }
    }
    public long Level3WinChips {
      get { return level3WinChips_; }
    }
    
    public const int Level3WinChipsRankFieldNumber = 11;
    private bool hasLevel3WinChipsRank;
    private int level3WinChipsRank_;
    public bool HasLevel3WinChipsRank {
      get { return hasLevel3WinChipsRank; }
    }
    public int Level3WinChipsRank {
      get { return level3WinChipsRank_; }
    }
    
    public const int Level4WinChipsFieldNumber = 12;
    private bool hasLevel4WinChips;
    private long level4WinChips_;
    public bool HasLevel4WinChips {
      get { return hasLevel4WinChips; }
    }
    public long Level4WinChips {
      get { return level4WinChips_; }
    }
    
    public const int Level4WinChipsRankFieldNumber = 13;
    private bool hasLevel4WinChipsRank;
    private int level4WinChipsRank_;
    public bool HasLevel4WinChipsRank {
      get { return hasLevel4WinChipsRank; }
    }
    public int Level4WinChipsRank {
      get { return level4WinChipsRank_; }
    }
    
    public const int Level5WinChipsFieldNumber = 14;
    private bool hasLevel5WinChips;
    private long level5WinChips_;
    public bool HasLevel5WinChips {
      get { return hasLevel5WinChips; }
    }
    public long Level5WinChips {
      get { return level5WinChips_; }
    }
    
    public const int Level5WinChipsRankFieldNumber = 15;
    private bool hasLevel5WinChipsRank;
    private int level5WinChipsRank_;
    public bool HasLevel5WinChipsRank {
      get { return hasLevel5WinChipsRank; }
    }
    public int Level5WinChipsRank {
      get { return level5WinChipsRank_; }
    }
    
    public const int GameAllUserNumFieldNumber = 16;
    private bool hasGameAllUserNum;
    private int gameAllUserNum_;
    public bool HasGameAllUserNum {
      get { return hasGameAllUserNum; }
    }
    public int GameAllUserNum {
      get { return gameAllUserNum_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        if (!hasUserInfo) return false;
        if (!UserInfo.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _gameLifeResponsesg101FieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[0], (int) Code, Code);
      }
      if (hasUserInfo) {
        output.WriteMessage(2, field_names[14], UserInfo);
      }
      if (hasWinTimes) {
        output.WriteInt32(3, field_names[15], WinTimes);
      }
      if (hasLostTimes) {
        output.WriteInt32(4, field_names[13], LostTimes);
      }
      if (hasContinueWin) {
        output.WriteInt32(5, field_names[1], ContinueWin);
      }
      if (hasLevel1WinChips) {
        output.WriteInt64(6, field_names[3], Level1WinChips);
      }
      if (hasLevel1WinChipsRank) {
        output.WriteInt32(7, field_names[4], Level1WinChipsRank);
      }
      if (hasLevel2WinChips) {
        output.WriteInt64(8, field_names[5], Level2WinChips);
      }
      if (hasLevel2WinChipsRank) {
        output.WriteInt32(9, field_names[6], Level2WinChipsRank);
      }
      if (hasLevel3WinChips) {
        output.WriteInt64(10, field_names[7], Level3WinChips);
      }
      if (hasLevel3WinChipsRank) {
        output.WriteInt32(11, field_names[8], Level3WinChipsRank);
      }
      if (hasLevel4WinChips) {
        output.WriteInt64(12, field_names[9], Level4WinChips);
      }
      if (hasLevel4WinChipsRank) {
        output.WriteInt32(13, field_names[10], Level4WinChipsRank);
      }
      if (hasLevel5WinChips) {
        output.WriteInt64(14, field_names[11], Level5WinChips);
      }
      if (hasLevel5WinChipsRank) {
        output.WriteInt32(15, field_names[12], Level5WinChipsRank);
      }
      if (hasGameAllUserNum) {
        output.WriteInt32(16, field_names[2], GameAllUserNum);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasUserInfo) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, UserInfo);
      }
      if (hasWinTimes) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, WinTimes);
      }
      if (hasLostTimes) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, LostTimes);
      }
      if (hasContinueWin) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, ContinueWin);
      }
      if (hasLevel1WinChips) {
        size += pb::CodedOutputStream.ComputeInt64Size(6, Level1WinChips);
      }
      if (hasLevel1WinChipsRank) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, Level1WinChipsRank);
      }
      if (hasLevel2WinChips) {
        size += pb::CodedOutputStream.ComputeInt64Size(8, Level2WinChips);
      }
      if (hasLevel2WinChipsRank) {
        size += pb::CodedOutputStream.ComputeInt32Size(9, Level2WinChipsRank);
      }
      if (hasLevel3WinChips) {
        size += pb::CodedOutputStream.ComputeInt64Size(10, Level3WinChips);
      }
      if (hasLevel3WinChipsRank) {
        size += pb::CodedOutputStream.ComputeInt32Size(11, Level3WinChipsRank);
      }
      if (hasLevel4WinChips) {
        size += pb::CodedOutputStream.ComputeInt64Size(12, Level4WinChips);
      }
      if (hasLevel4WinChipsRank) {
        size += pb::CodedOutputStream.ComputeInt32Size(13, Level4WinChipsRank);
      }
      if (hasLevel5WinChips) {
        size += pb::CodedOutputStream.ComputeInt64Size(14, Level5WinChips);
      }
      if (hasLevel5WinChipsRank) {
        size += pb::CodedOutputStream.ComputeInt32Size(15, Level5WinChipsRank);
      }
      if (hasGameAllUserNum) {
        size += pb::CodedOutputStream.ComputeInt32Size(16, GameAllUserNum);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GameLifeResponsesg101 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameLifeResponsesg101 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameLifeResponsesg101 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameLifeResponsesg101 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameLifeResponsesg101 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameLifeResponsesg101 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameLifeResponsesg101 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameLifeResponsesg101 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameLifeResponsesg101 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameLifeResponsesg101 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameLifeResponsesg101 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameLifeResponsesg101 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GameLifeResponsesg101, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameLifeResponsesg101 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameLifeResponsesg101 result;
      
      private GameLifeResponsesg101 PrepareBuilder() {
        if (resultIsReadOnly) {
          GameLifeResponsesg101 original = result;
          result = new GameLifeResponsesg101();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameLifeResponsesg101 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.GameLifeResponsesg101.Descriptor; }
      }
      
      public override GameLifeResponsesg101 DefaultInstanceForType {
        get { return global::gt_msg.GameLifeResponsesg101.DefaultInstance; }
      }
      
      public override GameLifeResponsesg101 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameLifeResponsesg101) {
          return MergeFrom((GameLifeResponsesg101) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameLifeResponsesg101 other) {
        if (other == global::gt_msg.GameLifeResponsesg101.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasUserInfo) {
          MergeUserInfo(other.UserInfo);
        }
        if (other.HasWinTimes) {
          WinTimes = other.WinTimes;
        }
        if (other.HasLostTimes) {
          LostTimes = other.LostTimes;
        }
        if (other.HasContinueWin) {
          ContinueWin = other.ContinueWin;
        }
        if (other.HasLevel1WinChips) {
          Level1WinChips = other.Level1WinChips;
        }
        if (other.HasLevel1WinChipsRank) {
          Level1WinChipsRank = other.Level1WinChipsRank;
        }
        if (other.HasLevel2WinChips) {
          Level2WinChips = other.Level2WinChips;
        }
        if (other.HasLevel2WinChipsRank) {
          Level2WinChipsRank = other.Level2WinChipsRank;
        }
        if (other.HasLevel3WinChips) {
          Level3WinChips = other.Level3WinChips;
        }
        if (other.HasLevel3WinChipsRank) {
          Level3WinChipsRank = other.Level3WinChipsRank;
        }
        if (other.HasLevel4WinChips) {
          Level4WinChips = other.Level4WinChips;
        }
        if (other.HasLevel4WinChipsRank) {
          Level4WinChipsRank = other.Level4WinChipsRank;
        }
        if (other.HasLevel5WinChips) {
          Level5WinChips = other.Level5WinChips;
        }
        if (other.HasLevel5WinChipsRank) {
          Level5WinChipsRank = other.Level5WinChipsRank;
        }
        if (other.HasGameAllUserNum) {
          GameAllUserNum = other.GameAllUserNum;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameLifeResponsesg101FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameLifeResponsesg101FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              global::gt_msg.User.Builder subBuilder = global::gt_msg.User.CreateBuilder();
              if (result.hasUserInfo) {
                subBuilder.MergeFrom(UserInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserInfo = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasWinTimes = input.ReadInt32(ref result.winTimes_);
              break;
            }
            case 32: {
              result.hasLostTimes = input.ReadInt32(ref result.lostTimes_);
              break;
            }
            case 40: {
              result.hasContinueWin = input.ReadInt32(ref result.continueWin_);
              break;
            }
            case 48: {
              result.hasLevel1WinChips = input.ReadInt64(ref result.level1WinChips_);
              break;
            }
            case 56: {
              result.hasLevel1WinChipsRank = input.ReadInt32(ref result.level1WinChipsRank_);
              break;
            }
            case 64: {
              result.hasLevel2WinChips = input.ReadInt64(ref result.level2WinChips_);
              break;
            }
            case 72: {
              result.hasLevel2WinChipsRank = input.ReadInt32(ref result.level2WinChipsRank_);
              break;
            }
            case 80: {
              result.hasLevel3WinChips = input.ReadInt64(ref result.level3WinChips_);
              break;
            }
            case 88: {
              result.hasLevel3WinChipsRank = input.ReadInt32(ref result.level3WinChipsRank_);
              break;
            }
            case 96: {
              result.hasLevel4WinChips = input.ReadInt64(ref result.level4WinChips_);
              break;
            }
            case 104: {
              result.hasLevel4WinChipsRank = input.ReadInt32(ref result.level4WinChipsRank_);
              break;
            }
            case 112: {
              result.hasLevel5WinChips = input.ReadInt64(ref result.level5WinChips_);
              break;
            }
            case 120: {
              result.hasLevel5WinChipsRank = input.ReadInt32(ref result.level5WinChipsRank_);
              break;
            }
            case 128: {
              result.hasGameAllUserNum = input.ReadInt32(ref result.gameAllUserNum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.GameLifeResponsesg101.Types.Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.GameLifeResponsesg101.Types.Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.GameLifeResponsesg101.Types.Code.Ok;
        return this;
      }
      
      public bool HasUserInfo {
       get { return result.hasUserInfo; }
      }
      public global::gt_msg.User UserInfo {
        get { return result.UserInfo; }
        set { SetUserInfo(value); }
      }
      public Builder SetUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = value;
        return this;
      }
      public Builder SetUserInfo(global::gt_msg.User.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserInfo &&
            result.userInfo_ != global::gt_msg.User.DefaultInstance) {
            result.userInfo_ = global::gt_msg.User.CreateBuilder(result.userInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.userInfo_ = value;
        }
        result.hasUserInfo = true;
        return this;
      }
      public Builder ClearUserInfo() {
        PrepareBuilder();
        result.hasUserInfo = false;
        result.userInfo_ = null;
        return this;
      }
      
      public bool HasWinTimes {
        get { return result.hasWinTimes; }
      }
      public int WinTimes {
        get { return result.WinTimes; }
        set { SetWinTimes(value); }
      }
      public Builder SetWinTimes(int value) {
        PrepareBuilder();
        result.hasWinTimes = true;
        result.winTimes_ = value;
        return this;
      }
      public Builder ClearWinTimes() {
        PrepareBuilder();
        result.hasWinTimes = false;
        result.winTimes_ = 0;
        return this;
      }
      
      public bool HasLostTimes {
        get { return result.hasLostTimes; }
      }
      public int LostTimes {
        get { return result.LostTimes; }
        set { SetLostTimes(value); }
      }
      public Builder SetLostTimes(int value) {
        PrepareBuilder();
        result.hasLostTimes = true;
        result.lostTimes_ = value;
        return this;
      }
      public Builder ClearLostTimes() {
        PrepareBuilder();
        result.hasLostTimes = false;
        result.lostTimes_ = 0;
        return this;
      }
      
      public bool HasContinueWin {
        get { return result.hasContinueWin; }
      }
      public int ContinueWin {
        get { return result.ContinueWin; }
        set { SetContinueWin(value); }
      }
      public Builder SetContinueWin(int value) {
        PrepareBuilder();
        result.hasContinueWin = true;
        result.continueWin_ = value;
        return this;
      }
      public Builder ClearContinueWin() {
        PrepareBuilder();
        result.hasContinueWin = false;
        result.continueWin_ = 0;
        return this;
      }
      
      public bool HasLevel1WinChips {
        get { return result.hasLevel1WinChips; }
      }
      public long Level1WinChips {
        get { return result.Level1WinChips; }
        set { SetLevel1WinChips(value); }
      }
      public Builder SetLevel1WinChips(long value) {
        PrepareBuilder();
        result.hasLevel1WinChips = true;
        result.level1WinChips_ = value;
        return this;
      }
      public Builder ClearLevel1WinChips() {
        PrepareBuilder();
        result.hasLevel1WinChips = false;
        result.level1WinChips_ = 0L;
        return this;
      }
      
      public bool HasLevel1WinChipsRank {
        get { return result.hasLevel1WinChipsRank; }
      }
      public int Level1WinChipsRank {
        get { return result.Level1WinChipsRank; }
        set { SetLevel1WinChipsRank(value); }
      }
      public Builder SetLevel1WinChipsRank(int value) {
        PrepareBuilder();
        result.hasLevel1WinChipsRank = true;
        result.level1WinChipsRank_ = value;
        return this;
      }
      public Builder ClearLevel1WinChipsRank() {
        PrepareBuilder();
        result.hasLevel1WinChipsRank = false;
        result.level1WinChipsRank_ = 0;
        return this;
      }
      
      public bool HasLevel2WinChips {
        get { return result.hasLevel2WinChips; }
      }
      public long Level2WinChips {
        get { return result.Level2WinChips; }
        set { SetLevel2WinChips(value); }
      }
      public Builder SetLevel2WinChips(long value) {
        PrepareBuilder();
        result.hasLevel2WinChips = true;
        result.level2WinChips_ = value;
        return this;
      }
      public Builder ClearLevel2WinChips() {
        PrepareBuilder();
        result.hasLevel2WinChips = false;
        result.level2WinChips_ = 0L;
        return this;
      }
      
      public bool HasLevel2WinChipsRank {
        get { return result.hasLevel2WinChipsRank; }
      }
      public int Level2WinChipsRank {
        get { return result.Level2WinChipsRank; }
        set { SetLevel2WinChipsRank(value); }
      }
      public Builder SetLevel2WinChipsRank(int value) {
        PrepareBuilder();
        result.hasLevel2WinChipsRank = true;
        result.level2WinChipsRank_ = value;
        return this;
      }
      public Builder ClearLevel2WinChipsRank() {
        PrepareBuilder();
        result.hasLevel2WinChipsRank = false;
        result.level2WinChipsRank_ = 0;
        return this;
      }
      
      public bool HasLevel3WinChips {
        get { return result.hasLevel3WinChips; }
      }
      public long Level3WinChips {
        get { return result.Level3WinChips; }
        set { SetLevel3WinChips(value); }
      }
      public Builder SetLevel3WinChips(long value) {
        PrepareBuilder();
        result.hasLevel3WinChips = true;
        result.level3WinChips_ = value;
        return this;
      }
      public Builder ClearLevel3WinChips() {
        PrepareBuilder();
        result.hasLevel3WinChips = false;
        result.level3WinChips_ = 0L;
        return this;
      }
      
      public bool HasLevel3WinChipsRank {
        get { return result.hasLevel3WinChipsRank; }
      }
      public int Level3WinChipsRank {
        get { return result.Level3WinChipsRank; }
        set { SetLevel3WinChipsRank(value); }
      }
      public Builder SetLevel3WinChipsRank(int value) {
        PrepareBuilder();
        result.hasLevel3WinChipsRank = true;
        result.level3WinChipsRank_ = value;
        return this;
      }
      public Builder ClearLevel3WinChipsRank() {
        PrepareBuilder();
        result.hasLevel3WinChipsRank = false;
        result.level3WinChipsRank_ = 0;
        return this;
      }
      
      public bool HasLevel4WinChips {
        get { return result.hasLevel4WinChips; }
      }
      public long Level4WinChips {
        get { return result.Level4WinChips; }
        set { SetLevel4WinChips(value); }
      }
      public Builder SetLevel4WinChips(long value) {
        PrepareBuilder();
        result.hasLevel4WinChips = true;
        result.level4WinChips_ = value;
        return this;
      }
      public Builder ClearLevel4WinChips() {
        PrepareBuilder();
        result.hasLevel4WinChips = false;
        result.level4WinChips_ = 0L;
        return this;
      }
      
      public bool HasLevel4WinChipsRank {
        get { return result.hasLevel4WinChipsRank; }
      }
      public int Level4WinChipsRank {
        get { return result.Level4WinChipsRank; }
        set { SetLevel4WinChipsRank(value); }
      }
      public Builder SetLevel4WinChipsRank(int value) {
        PrepareBuilder();
        result.hasLevel4WinChipsRank = true;
        result.level4WinChipsRank_ = value;
        return this;
      }
      public Builder ClearLevel4WinChipsRank() {
        PrepareBuilder();
        result.hasLevel4WinChipsRank = false;
        result.level4WinChipsRank_ = 0;
        return this;
      }
      
      public bool HasLevel5WinChips {
        get { return result.hasLevel5WinChips; }
      }
      public long Level5WinChips {
        get { return result.Level5WinChips; }
        set { SetLevel5WinChips(value); }
      }
      public Builder SetLevel5WinChips(long value) {
        PrepareBuilder();
        result.hasLevel5WinChips = true;
        result.level5WinChips_ = value;
        return this;
      }
      public Builder ClearLevel5WinChips() {
        PrepareBuilder();
        result.hasLevel5WinChips = false;
        result.level5WinChips_ = 0L;
        return this;
      }
      
      public bool HasLevel5WinChipsRank {
        get { return result.hasLevel5WinChipsRank; }
      }
      public int Level5WinChipsRank {
        get { return result.Level5WinChipsRank; }
        set { SetLevel5WinChipsRank(value); }
      }
      public Builder SetLevel5WinChipsRank(int value) {
        PrepareBuilder();
        result.hasLevel5WinChipsRank = true;
        result.level5WinChipsRank_ = value;
        return this;
      }
      public Builder ClearLevel5WinChipsRank() {
        PrepareBuilder();
        result.hasLevel5WinChipsRank = false;
        result.level5WinChipsRank_ = 0;
        return this;
      }
      
      public bool HasGameAllUserNum {
        get { return result.hasGameAllUserNum; }
      }
      public int GameAllUserNum {
        get { return result.GameAllUserNum; }
        set { SetGameAllUserNum(value); }
      }
      public Builder SetGameAllUserNum(int value) {
        PrepareBuilder();
        result.hasGameAllUserNum = true;
        result.gameAllUserNum_ = value;
        return this;
      }
      public Builder ClearGameAllUserNum() {
        PrepareBuilder();
        result.hasGameAllUserNum = false;
        result.gameAllUserNum_ = 0;
        return this;
      }
    }
    static GameLifeResponsesg101() {
      object.ReferenceEquals(global::gt_msg.GtSg101.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GameRankListRequestsg101 : pb::GeneratedMessage<GameRankListRequestsg101, GameRankListRequestsg101.Builder> {
    private GameRankListRequestsg101() { }
    private static readonly GameRankListRequestsg101 defaultInstance = new GameRankListRequestsg101().MakeReadOnly();
    private static readonly string[] _gameRankListRequestsg101FieldNames = new string[] {  };
    private static readonly uint[] _gameRankListRequestsg101FieldTags = new uint[] {  };
    public static GameRankListRequestsg101 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameRankListRequestsg101 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameRankListRequestsg101 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_GameRankListRequestsg101__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameRankListRequestsg101, GameRankListRequestsg101.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_GameRankListRequestsg101__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _gameRankListRequestsg101FieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GameRankListRequestsg101 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameRankListRequestsg101 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameRankListRequestsg101 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameRankListRequestsg101 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameRankListRequestsg101 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameRankListRequestsg101 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameRankListRequestsg101 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameRankListRequestsg101 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameRankListRequestsg101 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameRankListRequestsg101 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameRankListRequestsg101 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameRankListRequestsg101 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GameRankListRequestsg101, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameRankListRequestsg101 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameRankListRequestsg101 result;
      
      private GameRankListRequestsg101 PrepareBuilder() {
        if (resultIsReadOnly) {
          GameRankListRequestsg101 original = result;
          result = new GameRankListRequestsg101();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameRankListRequestsg101 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.GameRankListRequestsg101.Descriptor; }
      }
      
      public override GameRankListRequestsg101 DefaultInstanceForType {
        get { return global::gt_msg.GameRankListRequestsg101.DefaultInstance; }
      }
      
      public override GameRankListRequestsg101 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameRankListRequestsg101) {
          return MergeFrom((GameRankListRequestsg101) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameRankListRequestsg101 other) {
        if (other == global::gt_msg.GameRankListRequestsg101.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameRankListRequestsg101FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameRankListRequestsg101FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static GameRankListRequestsg101() {
      object.ReferenceEquals(global::gt_msg.GtSg101.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GameRankListResponsesg101 : pb::GeneratedMessage<GameRankListResponsesg101, GameRankListResponsesg101.Builder> {
    private GameRankListResponsesg101() { }
    private static readonly GameRankListResponsesg101 defaultInstance = new GameRankListResponsesg101().MakeReadOnly();
    private static readonly string[] _gameRankListResponsesg101FieldNames = new string[] { "all_chips", "all_times", "code", "day_win_chips", "uid" };
    private static readonly uint[] _gameRankListResponsesg101FieldTags = new uint[] { 42, 34, 8, 26, 18 };
    public static GameRankListResponsesg101 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameRankListResponsesg101 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameRankListResponsesg101 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_GameRankListResponsesg101__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameRankListResponsesg101, GameRankListResponsesg101.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_GameRankListResponsesg101__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Code {
        Ok = 0,
        Failed = 1,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.GameRankListResponsesg101.Types.Code code_ = global::gt_msg.GameRankListResponsesg101.Types.Code.Ok;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.GameRankListResponsesg101.Types.Code Code {
      get { return code_; }
    }
    
    public const int UidFieldNumber = 2;
    private bool hasUid;
    private string uid_ = "";
    public bool HasUid {
      get { return hasUid; }
    }
    public string Uid {
      get { return uid_; }
    }
    
    public const int DayWinChipsFieldNumber = 3;
    private pbc::PopsicleList<string> dayWinChips_ = new pbc::PopsicleList<string>();
    public scg::IList<string> DayWinChipsList {
      get { return pbc::Lists.AsReadOnly(dayWinChips_); }
    }
    public int DayWinChipsCount {
      get { return dayWinChips_.Count; }
    }
    public string GetDayWinChips(int index) {
      return dayWinChips_[index];
    }
    
    public const int AllTimesFieldNumber = 4;
    private pbc::PopsicleList<string> allTimes_ = new pbc::PopsicleList<string>();
    public scg::IList<string> AllTimesList {
      get { return pbc::Lists.AsReadOnly(allTimes_); }
    }
    public int AllTimesCount {
      get { return allTimes_.Count; }
    }
    public string GetAllTimes(int index) {
      return allTimes_[index];
    }
    
    public const int AllChipsFieldNumber = 5;
    private pbc::PopsicleList<string> allChips_ = new pbc::PopsicleList<string>();
    public scg::IList<string> AllChipsList {
      get { return pbc::Lists.AsReadOnly(allChips_); }
    }
    public int AllChipsCount {
      get { return allChips_.Count; }
    }
    public string GetAllChips(int index) {
      return allChips_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        if (!hasUid) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _gameRankListResponsesg101FieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[2], (int) Code, Code);
      }
      if (hasUid) {
        output.WriteString(2, field_names[4], Uid);
      }
      if (dayWinChips_.Count > 0) {
        output.WriteStringArray(3, field_names[3], dayWinChips_);
      }
      if (allTimes_.Count > 0) {
        output.WriteStringArray(4, field_names[1], allTimes_);
      }
      if (allChips_.Count > 0) {
        output.WriteStringArray(5, field_names[0], allChips_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Uid);
      }
      {
        int dataSize = 0;
        foreach (string element in DayWinChipsList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * dayWinChips_.Count;
      }
      {
        int dataSize = 0;
        foreach (string element in AllTimesList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * allTimes_.Count;
      }
      {
        int dataSize = 0;
        foreach (string element in AllChipsList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * allChips_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GameRankListResponsesg101 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameRankListResponsesg101 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameRankListResponsesg101 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameRankListResponsesg101 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameRankListResponsesg101 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameRankListResponsesg101 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameRankListResponsesg101 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameRankListResponsesg101 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameRankListResponsesg101 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameRankListResponsesg101 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameRankListResponsesg101 MakeReadOnly() {
      dayWinChips_.MakeReadOnly();
      allTimes_.MakeReadOnly();
      allChips_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameRankListResponsesg101 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GameRankListResponsesg101, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameRankListResponsesg101 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameRankListResponsesg101 result;
      
      private GameRankListResponsesg101 PrepareBuilder() {
        if (resultIsReadOnly) {
          GameRankListResponsesg101 original = result;
          result = new GameRankListResponsesg101();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameRankListResponsesg101 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.GameRankListResponsesg101.Descriptor; }
      }
      
      public override GameRankListResponsesg101 DefaultInstanceForType {
        get { return global::gt_msg.GameRankListResponsesg101.DefaultInstance; }
      }
      
      public override GameRankListResponsesg101 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameRankListResponsesg101) {
          return MergeFrom((GameRankListResponsesg101) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameRankListResponsesg101 other) {
        if (other == global::gt_msg.GameRankListResponsesg101.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasUid) {
          Uid = other.Uid;
        }
        if (other.dayWinChips_.Count != 0) {
          result.dayWinChips_.Add(other.dayWinChips_);
        }
        if (other.allTimes_.Count != 0) {
          result.allTimes_.Add(other.allTimes_);
        }
        if (other.allChips_.Count != 0) {
          result.allChips_.Add(other.allChips_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameRankListResponsesg101FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameRankListResponsesg101FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasUid = input.ReadString(ref result.uid_);
              break;
            }
            case 26: {
              input.ReadStringArray(tag, field_name, result.dayWinChips_);
              break;
            }
            case 34: {
              input.ReadStringArray(tag, field_name, result.allTimes_);
              break;
            }
            case 42: {
              input.ReadStringArray(tag, field_name, result.allChips_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.GameRankListResponsesg101.Types.Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.GameRankListResponsesg101.Types.Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.GameRankListResponsesg101.Types.Code.Ok;
        return this;
      }
      
      public bool HasUid {
        get { return result.hasUid; }
      }
      public string Uid {
        get { return result.Uid; }
        set { SetUid(value); }
      }
      public Builder SetUid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder ClearUid() {
        PrepareBuilder();
        result.hasUid = false;
        result.uid_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<string> DayWinChipsList {
        get { return PrepareBuilder().dayWinChips_; }
      }
      public int DayWinChipsCount {
        get { return result.DayWinChipsCount; }
      }
      public string GetDayWinChips(int index) {
        return result.GetDayWinChips(index);
      }
      public Builder SetDayWinChips(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.dayWinChips_[index] = value;
        return this;
      }
      public Builder AddDayWinChips(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.dayWinChips_.Add(value);
        return this;
      }
      public Builder AddRangeDayWinChips(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.dayWinChips_.Add(values);
        return this;
      }
      public Builder ClearDayWinChips() {
        PrepareBuilder();
        result.dayWinChips_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> AllTimesList {
        get { return PrepareBuilder().allTimes_; }
      }
      public int AllTimesCount {
        get { return result.AllTimesCount; }
      }
      public string GetAllTimes(int index) {
        return result.GetAllTimes(index);
      }
      public Builder SetAllTimes(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.allTimes_[index] = value;
        return this;
      }
      public Builder AddAllTimes(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.allTimes_.Add(value);
        return this;
      }
      public Builder AddRangeAllTimes(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.allTimes_.Add(values);
        return this;
      }
      public Builder ClearAllTimes() {
        PrepareBuilder();
        result.allTimes_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> AllChipsList {
        get { return PrepareBuilder().allChips_; }
      }
      public int AllChipsCount {
        get { return result.AllChipsCount; }
      }
      public string GetAllChips(int index) {
        return result.GetAllChips(index);
      }
      public Builder SetAllChips(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.allChips_[index] = value;
        return this;
      }
      public Builder AddAllChips(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.allChips_.Add(value);
        return this;
      }
      public Builder AddRangeAllChips(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.allChips_.Add(values);
        return this;
      }
      public Builder ClearAllChips() {
        PrepareBuilder();
        result.allChips_.Clear();
        return this;
      }
    }
    static GameRankListResponsesg101() {
      object.ReferenceEquals(global::gt_msg.GtSg101.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class HistoryLwRequestsg101 : pb::GeneratedMessage<HistoryLwRequestsg101, HistoryLwRequestsg101.Builder> {
    private HistoryLwRequestsg101() { }
    private static readonly HistoryLwRequestsg101 defaultInstance = new HistoryLwRequestsg101().MakeReadOnly();
    private static readonly string[] _historyLwRequestsg101FieldNames = new string[] {  };
    private static readonly uint[] _historyLwRequestsg101FieldTags = new uint[] {  };
    public static HistoryLwRequestsg101 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override HistoryLwRequestsg101 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override HistoryLwRequestsg101 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_HistoryLwRequestsg101__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<HistoryLwRequestsg101, HistoryLwRequestsg101.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_HistoryLwRequestsg101__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _historyLwRequestsg101FieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static HistoryLwRequestsg101 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HistoryLwRequestsg101 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HistoryLwRequestsg101 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HistoryLwRequestsg101 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HistoryLwRequestsg101 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HistoryLwRequestsg101 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static HistoryLwRequestsg101 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static HistoryLwRequestsg101 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static HistoryLwRequestsg101 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HistoryLwRequestsg101 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private HistoryLwRequestsg101 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(HistoryLwRequestsg101 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<HistoryLwRequestsg101, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(HistoryLwRequestsg101 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private HistoryLwRequestsg101 result;
      
      private HistoryLwRequestsg101 PrepareBuilder() {
        if (resultIsReadOnly) {
          HistoryLwRequestsg101 original = result;
          result = new HistoryLwRequestsg101();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override HistoryLwRequestsg101 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.HistoryLwRequestsg101.Descriptor; }
      }
      
      public override HistoryLwRequestsg101 DefaultInstanceForType {
        get { return global::gt_msg.HistoryLwRequestsg101.DefaultInstance; }
      }
      
      public override HistoryLwRequestsg101 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is HistoryLwRequestsg101) {
          return MergeFrom((HistoryLwRequestsg101) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(HistoryLwRequestsg101 other) {
        if (other == global::gt_msg.HistoryLwRequestsg101.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_historyLwRequestsg101FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _historyLwRequestsg101FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static HistoryLwRequestsg101() {
      object.ReferenceEquals(global::gt_msg.GtSg101.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LwDatesg101 : pb::GeneratedMessage<LwDatesg101, LwDatesg101.Builder> {
    private LwDatesg101() { }
    private static readonly LwDatesg101 defaultInstance = new LwDatesg101().MakeReadOnly();
    private static readonly string[] _lwDatesg101FieldNames = new string[] { "explw", "id", "lw", "nick", "openitem" };
    private static readonly uint[] _lwDatesg101FieldTags = new uint[] { 32, 8, 24, 18, 40 };
    public static LwDatesg101 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LwDatesg101 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LwDatesg101 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_LwDatesg101__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LwDatesg101, LwDatesg101.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_LwDatesg101__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int NickFieldNumber = 2;
    private bool hasNick;
    private string nick_ = "";
    public bool HasNick {
      get { return hasNick; }
    }
    public string Nick {
      get { return nick_; }
    }
    
    public const int LwFieldNumber = 3;
    private bool hasLw;
    private long lw_;
    public bool HasLw {
      get { return hasLw; }
    }
    public long Lw {
      get { return lw_; }
    }
    
    public const int ExplwFieldNumber = 4;
    private bool hasExplw;
    private long explw_;
    public bool HasExplw {
      get { return hasExplw; }
    }
    public long Explw {
      get { return explw_; }
    }
    
    public const int OpenitemFieldNumber = 5;
    private pbc::PopsicleList<int> openitem_ = new pbc::PopsicleList<int>();
    public scg::IList<int> OpenitemList {
      get { return pbc::Lists.AsReadOnly(openitem_); }
    }
    public int OpenitemCount {
      get { return openitem_.Count; }
    }
    public int GetOpenitem(int index) {
      return openitem_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _lwDatesg101FieldNames;
      if (hasId) {
        output.WriteInt32(1, field_names[1], Id);
      }
      if (hasNick) {
        output.WriteString(2, field_names[3], Nick);
      }
      if (hasLw) {
        output.WriteInt64(3, field_names[2], Lw);
      }
      if (hasExplw) {
        output.WriteInt64(4, field_names[0], Explw);
      }
      if (openitem_.Count > 0) {
        output.WriteInt32Array(5, field_names[4], openitem_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
      }
      if (hasNick) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Nick);
      }
      if (hasLw) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, Lw);
      }
      if (hasExplw) {
        size += pb::CodedOutputStream.ComputeInt64Size(4, Explw);
      }
      {
        int dataSize = 0;
        foreach (int element in OpenitemList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * openitem_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LwDatesg101 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LwDatesg101 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LwDatesg101 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LwDatesg101 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LwDatesg101 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LwDatesg101 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LwDatesg101 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LwDatesg101 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LwDatesg101 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LwDatesg101 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LwDatesg101 MakeReadOnly() {
      openitem_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LwDatesg101 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LwDatesg101, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LwDatesg101 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LwDatesg101 result;
      
      private LwDatesg101 PrepareBuilder() {
        if (resultIsReadOnly) {
          LwDatesg101 original = result;
          result = new LwDatesg101();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LwDatesg101 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.LwDatesg101.Descriptor; }
      }
      
      public override LwDatesg101 DefaultInstanceForType {
        get { return global::gt_msg.LwDatesg101.DefaultInstance; }
      }
      
      public override LwDatesg101 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LwDatesg101) {
          return MergeFrom((LwDatesg101) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LwDatesg101 other) {
        if (other == global::gt_msg.LwDatesg101.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasNick) {
          Nick = other.Nick;
        }
        if (other.HasLw) {
          Lw = other.Lw;
        }
        if (other.HasExplw) {
          Explw = other.Explw;
        }
        if (other.openitem_.Count != 0) {
          result.openitem_.Add(other.openitem_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_lwDatesg101FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _lwDatesg101FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
            case 18: {
              result.hasNick = input.ReadString(ref result.nick_);
              break;
            }
            case 24: {
              result.hasLw = input.ReadInt64(ref result.lw_);
              break;
            }
            case 32: {
              result.hasExplw = input.ReadInt64(ref result.explw_);
              break;
            }
            case 42:
            case 40: {
              input.ReadInt32Array(tag, field_name, result.openitem_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasNick {
        get { return result.hasNick; }
      }
      public string Nick {
        get { return result.Nick; }
        set { SetNick(value); }
      }
      public Builder SetNick(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNick = true;
        result.nick_ = value;
        return this;
      }
      public Builder ClearNick() {
        PrepareBuilder();
        result.hasNick = false;
        result.nick_ = "";
        return this;
      }
      
      public bool HasLw {
        get { return result.hasLw; }
      }
      public long Lw {
        get { return result.Lw; }
        set { SetLw(value); }
      }
      public Builder SetLw(long value) {
        PrepareBuilder();
        result.hasLw = true;
        result.lw_ = value;
        return this;
      }
      public Builder ClearLw() {
        PrepareBuilder();
        result.hasLw = false;
        result.lw_ = 0L;
        return this;
      }
      
      public bool HasExplw {
        get { return result.hasExplw; }
      }
      public long Explw {
        get { return result.Explw; }
        set { SetExplw(value); }
      }
      public Builder SetExplw(long value) {
        PrepareBuilder();
        result.hasExplw = true;
        result.explw_ = value;
        return this;
      }
      public Builder ClearExplw() {
        PrepareBuilder();
        result.hasExplw = false;
        result.explw_ = 0L;
        return this;
      }
      
      public pbc::IPopsicleList<int> OpenitemList {
        get { return PrepareBuilder().openitem_; }
      }
      public int OpenitemCount {
        get { return result.OpenitemCount; }
      }
      public int GetOpenitem(int index) {
        return result.GetOpenitem(index);
      }
      public Builder SetOpenitem(int index, int value) {
        PrepareBuilder();
        result.openitem_[index] = value;
        return this;
      }
      public Builder AddOpenitem(int value) {
        PrepareBuilder();
        result.openitem_.Add(value);
        return this;
      }
      public Builder AddRangeOpenitem(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.openitem_.Add(values);
        return this;
      }
      public Builder ClearOpenitem() {
        PrepareBuilder();
        result.openitem_.Clear();
        return this;
      }
    }
    static LwDatesg101() {
      object.ReferenceEquals(global::gt_msg.GtSg101.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class HistoryLwResponsesg101 : pb::GeneratedMessage<HistoryLwResponsesg101, HistoryLwResponsesg101.Builder> {
    private HistoryLwResponsesg101() { }
    private static readonly HistoryLwResponsesg101 defaultInstance = new HistoryLwResponsesg101().MakeReadOnly();
    private static readonly string[] _historyLwResponsesg101FieldNames = new string[] { "hlw", "payitem6time", "payitem7time" };
    private static readonly uint[] _historyLwResponsesg101FieldTags = new uint[] { 10, 16, 24 };
    public static HistoryLwResponsesg101 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override HistoryLwResponsesg101 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override HistoryLwResponsesg101 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_HistoryLwResponsesg101__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<HistoryLwResponsesg101, HistoryLwResponsesg101.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_HistoryLwResponsesg101__FieldAccessorTable; }
    }
    
    public const int HlwFieldNumber = 1;
    private pbc::PopsicleList<global::gt_msg.LwDatesg101> hlw_ = new pbc::PopsicleList<global::gt_msg.LwDatesg101>();
    public scg::IList<global::gt_msg.LwDatesg101> HlwList {
      get { return hlw_; }
    }
    public int HlwCount {
      get { return hlw_.Count; }
    }
    public global::gt_msg.LwDatesg101 GetHlw(int index) {
      return hlw_[index];
    }
    
    public const int Payitem6TimeFieldNumber = 2;
    private bool hasPayitem6Time;
    private int payitem6Time_;
    public bool HasPayitem6Time {
      get { return hasPayitem6Time; }
    }
    public int Payitem6Time {
      get { return payitem6Time_; }
    }
    
    public const int Payitem7TimeFieldNumber = 3;
    private bool hasPayitem7Time;
    private int payitem7Time_;
    public bool HasPayitem7Time {
      get { return hasPayitem7Time; }
    }
    public int Payitem7Time {
      get { return payitem7Time_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::gt_msg.LwDatesg101 element in HlwList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _historyLwResponsesg101FieldNames;
      if (hlw_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], hlw_);
      }
      if (hasPayitem6Time) {
        output.WriteInt32(2, field_names[1], Payitem6Time);
      }
      if (hasPayitem7Time) {
        output.WriteInt32(3, field_names[2], Payitem7Time);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::gt_msg.LwDatesg101 element in HlwList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      if (hasPayitem6Time) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Payitem6Time);
      }
      if (hasPayitem7Time) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Payitem7Time);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static HistoryLwResponsesg101 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HistoryLwResponsesg101 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HistoryLwResponsesg101 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HistoryLwResponsesg101 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HistoryLwResponsesg101 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HistoryLwResponsesg101 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static HistoryLwResponsesg101 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static HistoryLwResponsesg101 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static HistoryLwResponsesg101 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HistoryLwResponsesg101 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private HistoryLwResponsesg101 MakeReadOnly() {
      hlw_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(HistoryLwResponsesg101 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<HistoryLwResponsesg101, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(HistoryLwResponsesg101 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private HistoryLwResponsesg101 result;
      
      private HistoryLwResponsesg101 PrepareBuilder() {
        if (resultIsReadOnly) {
          HistoryLwResponsesg101 original = result;
          result = new HistoryLwResponsesg101();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override HistoryLwResponsesg101 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.HistoryLwResponsesg101.Descriptor; }
      }
      
      public override HistoryLwResponsesg101 DefaultInstanceForType {
        get { return global::gt_msg.HistoryLwResponsesg101.DefaultInstance; }
      }
      
      public override HistoryLwResponsesg101 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is HistoryLwResponsesg101) {
          return MergeFrom((HistoryLwResponsesg101) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(HistoryLwResponsesg101 other) {
        if (other == global::gt_msg.HistoryLwResponsesg101.DefaultInstance) return this;
        PrepareBuilder();
        if (other.hlw_.Count != 0) {
          result.hlw_.Add(other.hlw_);
        }
        if (other.HasPayitem6Time) {
          Payitem6Time = other.Payitem6Time;
        }
        if (other.HasPayitem7Time) {
          Payitem7Time = other.Payitem7Time;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_historyLwResponsesg101FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _historyLwResponsesg101FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.hlw_, global::gt_msg.LwDatesg101.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasPayitem6Time = input.ReadInt32(ref result.payitem6Time_);
              break;
            }
            case 24: {
              result.hasPayitem7Time = input.ReadInt32(ref result.payitem7Time_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::gt_msg.LwDatesg101> HlwList {
        get { return PrepareBuilder().hlw_; }
      }
      public int HlwCount {
        get { return result.HlwCount; }
      }
      public global::gt_msg.LwDatesg101 GetHlw(int index) {
        return result.GetHlw(index);
      }
      public Builder SetHlw(int index, global::gt_msg.LwDatesg101 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hlw_[index] = value;
        return this;
      }
      public Builder SetHlw(int index, global::gt_msg.LwDatesg101.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hlw_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddHlw(global::gt_msg.LwDatesg101 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hlw_.Add(value);
        return this;
      }
      public Builder AddHlw(global::gt_msg.LwDatesg101.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hlw_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeHlw(scg::IEnumerable<global::gt_msg.LwDatesg101> values) {
        PrepareBuilder();
        result.hlw_.Add(values);
        return this;
      }
      public Builder ClearHlw() {
        PrepareBuilder();
        result.hlw_.Clear();
        return this;
      }
      
      public bool HasPayitem6Time {
        get { return result.hasPayitem6Time; }
      }
      public int Payitem6Time {
        get { return result.Payitem6Time; }
        set { SetPayitem6Time(value); }
      }
      public Builder SetPayitem6Time(int value) {
        PrepareBuilder();
        result.hasPayitem6Time = true;
        result.payitem6Time_ = value;
        return this;
      }
      public Builder ClearPayitem6Time() {
        PrepareBuilder();
        result.hasPayitem6Time = false;
        result.payitem6Time_ = 0;
        return this;
      }
      
      public bool HasPayitem7Time {
        get { return result.hasPayitem7Time; }
      }
      public int Payitem7Time {
        get { return result.Payitem7Time; }
        set { SetPayitem7Time(value); }
      }
      public Builder SetPayitem7Time(int value) {
        PrepareBuilder();
        result.hasPayitem7Time = true;
        result.payitem7Time_ = value;
        return this;
      }
      public Builder ClearPayitem7Time() {
        PrepareBuilder();
        result.hasPayitem7Time = false;
        result.payitem7Time_ = 0;
        return this;
      }
    }
    static HistoryLwResponsesg101() {
      object.ReferenceEquals(global::gt_msg.GtSg101.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RankDayRequestsg101 : pb::GeneratedMessage<RankDayRequestsg101, RankDayRequestsg101.Builder> {
    private RankDayRequestsg101() { }
    private static readonly RankDayRequestsg101 defaultInstance = new RankDayRequestsg101().MakeReadOnly();
    private static readonly string[] _rankDayRequestsg101FieldNames = new string[] {  };
    private static readonly uint[] _rankDayRequestsg101FieldTags = new uint[] {  };
    public static RankDayRequestsg101 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RankDayRequestsg101 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RankDayRequestsg101 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_RankDayRequestsg101__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RankDayRequestsg101, RankDayRequestsg101.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_RankDayRequestsg101__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _rankDayRequestsg101FieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RankDayRequestsg101 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RankDayRequestsg101 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RankDayRequestsg101 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RankDayRequestsg101 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RankDayRequestsg101 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RankDayRequestsg101 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RankDayRequestsg101 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RankDayRequestsg101 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RankDayRequestsg101 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RankDayRequestsg101 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RankDayRequestsg101 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RankDayRequestsg101 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RankDayRequestsg101, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RankDayRequestsg101 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RankDayRequestsg101 result;
      
      private RankDayRequestsg101 PrepareBuilder() {
        if (resultIsReadOnly) {
          RankDayRequestsg101 original = result;
          result = new RankDayRequestsg101();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RankDayRequestsg101 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.RankDayRequestsg101.Descriptor; }
      }
      
      public override RankDayRequestsg101 DefaultInstanceForType {
        get { return global::gt_msg.RankDayRequestsg101.DefaultInstance; }
      }
      
      public override RankDayRequestsg101 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RankDayRequestsg101) {
          return MergeFrom((RankDayRequestsg101) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RankDayRequestsg101 other) {
        if (other == global::gt_msg.RankDayRequestsg101.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_rankDayRequestsg101FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _rankDayRequestsg101FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static RankDayRequestsg101() {
      object.ReferenceEquals(global::gt_msg.GtSg101.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RankDayResponsesg101 : pb::GeneratedMessage<RankDayResponsesg101, RankDayResponsesg101.Builder> {
    private RankDayResponsesg101() { }
    private static readonly RankDayResponsesg101 defaultInstance = new RankDayResponsesg101().MakeReadOnly();
    private static readonly string[] _rankDayResponsesg101FieldNames = new string[] { "faceurl", "nick", "score" };
    private static readonly uint[] _rankDayResponsesg101FieldTags = new uint[] { 10, 18, 24 };
    public static RankDayResponsesg101 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RankDayResponsesg101 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RankDayResponsesg101 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_RankDayResponsesg101__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RankDayResponsesg101, RankDayResponsesg101.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_RankDayResponsesg101__FieldAccessorTable; }
    }
    
    public const int FaceurlFieldNumber = 1;
    private pbc::PopsicleList<string> faceurl_ = new pbc::PopsicleList<string>();
    public scg::IList<string> FaceurlList {
      get { return pbc::Lists.AsReadOnly(faceurl_); }
    }
    public int FaceurlCount {
      get { return faceurl_.Count; }
    }
    public string GetFaceurl(int index) {
      return faceurl_[index];
    }
    
    public const int NickFieldNumber = 2;
    private pbc::PopsicleList<string> nick_ = new pbc::PopsicleList<string>();
    public scg::IList<string> NickList {
      get { return pbc::Lists.AsReadOnly(nick_); }
    }
    public int NickCount {
      get { return nick_.Count; }
    }
    public string GetNick(int index) {
      return nick_[index];
    }
    
    public const int ScoreFieldNumber = 3;
    private pbc::PopsicleList<long> score_ = new pbc::PopsicleList<long>();
    public scg::IList<long> ScoreList {
      get { return pbc::Lists.AsReadOnly(score_); }
    }
    public int ScoreCount {
      get { return score_.Count; }
    }
    public long GetScore(int index) {
      return score_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _rankDayResponsesg101FieldNames;
      if (faceurl_.Count > 0) {
        output.WriteStringArray(1, field_names[0], faceurl_);
      }
      if (nick_.Count > 0) {
        output.WriteStringArray(2, field_names[1], nick_);
      }
      if (score_.Count > 0) {
        output.WriteInt64Array(3, field_names[2], score_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (string element in FaceurlList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * faceurl_.Count;
      }
      {
        int dataSize = 0;
        foreach (string element in NickList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * nick_.Count;
      }
      {
        int dataSize = 0;
        foreach (long element in ScoreList) {
          dataSize += pb::CodedOutputStream.ComputeInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * score_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RankDayResponsesg101 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RankDayResponsesg101 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RankDayResponsesg101 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RankDayResponsesg101 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RankDayResponsesg101 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RankDayResponsesg101 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RankDayResponsesg101 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RankDayResponsesg101 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RankDayResponsesg101 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RankDayResponsesg101 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RankDayResponsesg101 MakeReadOnly() {
      faceurl_.MakeReadOnly();
      nick_.MakeReadOnly();
      score_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RankDayResponsesg101 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RankDayResponsesg101, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RankDayResponsesg101 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RankDayResponsesg101 result;
      
      private RankDayResponsesg101 PrepareBuilder() {
        if (resultIsReadOnly) {
          RankDayResponsesg101 original = result;
          result = new RankDayResponsesg101();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RankDayResponsesg101 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.RankDayResponsesg101.Descriptor; }
      }
      
      public override RankDayResponsesg101 DefaultInstanceForType {
        get { return global::gt_msg.RankDayResponsesg101.DefaultInstance; }
      }
      
      public override RankDayResponsesg101 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RankDayResponsesg101) {
          return MergeFrom((RankDayResponsesg101) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RankDayResponsesg101 other) {
        if (other == global::gt_msg.RankDayResponsesg101.DefaultInstance) return this;
        PrepareBuilder();
        if (other.faceurl_.Count != 0) {
          result.faceurl_.Add(other.faceurl_);
        }
        if (other.nick_.Count != 0) {
          result.nick_.Add(other.nick_);
        }
        if (other.score_.Count != 0) {
          result.score_.Add(other.score_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_rankDayResponsesg101FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _rankDayResponsesg101FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadStringArray(tag, field_name, result.faceurl_);
              break;
            }
            case 18: {
              input.ReadStringArray(tag, field_name, result.nick_);
              break;
            }
            case 26:
            case 24: {
              input.ReadInt64Array(tag, field_name, result.score_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<string> FaceurlList {
        get { return PrepareBuilder().faceurl_; }
      }
      public int FaceurlCount {
        get { return result.FaceurlCount; }
      }
      public string GetFaceurl(int index) {
        return result.GetFaceurl(index);
      }
      public Builder SetFaceurl(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.faceurl_[index] = value;
        return this;
      }
      public Builder AddFaceurl(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.faceurl_.Add(value);
        return this;
      }
      public Builder AddRangeFaceurl(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.faceurl_.Add(values);
        return this;
      }
      public Builder ClearFaceurl() {
        PrepareBuilder();
        result.faceurl_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> NickList {
        get { return PrepareBuilder().nick_; }
      }
      public int NickCount {
        get { return result.NickCount; }
      }
      public string GetNick(int index) {
        return result.GetNick(index);
      }
      public Builder SetNick(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.nick_[index] = value;
        return this;
      }
      public Builder AddNick(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.nick_.Add(value);
        return this;
      }
      public Builder AddRangeNick(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.nick_.Add(values);
        return this;
      }
      public Builder ClearNick() {
        PrepareBuilder();
        result.nick_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<long> ScoreList {
        get { return PrepareBuilder().score_; }
      }
      public int ScoreCount {
        get { return result.ScoreCount; }
      }
      public long GetScore(int index) {
        return result.GetScore(index);
      }
      public Builder SetScore(int index, long value) {
        PrepareBuilder();
        result.score_[index] = value;
        return this;
      }
      public Builder AddScore(long value) {
        PrepareBuilder();
        result.score_.Add(value);
        return this;
      }
      public Builder AddRangeScore(scg::IEnumerable<long> values) {
        PrepareBuilder();
        result.score_.Add(values);
        return this;
      }
      public Builder ClearScore() {
        PrepareBuilder();
        result.score_.Clear();
        return this;
      }
    }
    static RankDayResponsesg101() {
      object.ReferenceEquals(global::gt_msg.GtSg101.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RankWeekRequestsg101 : pb::GeneratedMessage<RankWeekRequestsg101, RankWeekRequestsg101.Builder> {
    private RankWeekRequestsg101() { }
    private static readonly RankWeekRequestsg101 defaultInstance = new RankWeekRequestsg101().MakeReadOnly();
    private static readonly string[] _rankWeekRequestsg101FieldNames = new string[] {  };
    private static readonly uint[] _rankWeekRequestsg101FieldTags = new uint[] {  };
    public static RankWeekRequestsg101 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RankWeekRequestsg101 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RankWeekRequestsg101 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_RankWeekRequestsg101__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RankWeekRequestsg101, RankWeekRequestsg101.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_RankWeekRequestsg101__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _rankWeekRequestsg101FieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RankWeekRequestsg101 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RankWeekRequestsg101 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RankWeekRequestsg101 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RankWeekRequestsg101 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RankWeekRequestsg101 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RankWeekRequestsg101 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RankWeekRequestsg101 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RankWeekRequestsg101 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RankWeekRequestsg101 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RankWeekRequestsg101 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RankWeekRequestsg101 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RankWeekRequestsg101 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RankWeekRequestsg101, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RankWeekRequestsg101 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RankWeekRequestsg101 result;
      
      private RankWeekRequestsg101 PrepareBuilder() {
        if (resultIsReadOnly) {
          RankWeekRequestsg101 original = result;
          result = new RankWeekRequestsg101();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RankWeekRequestsg101 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.RankWeekRequestsg101.Descriptor; }
      }
      
      public override RankWeekRequestsg101 DefaultInstanceForType {
        get { return global::gt_msg.RankWeekRequestsg101.DefaultInstance; }
      }
      
      public override RankWeekRequestsg101 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RankWeekRequestsg101) {
          return MergeFrom((RankWeekRequestsg101) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RankWeekRequestsg101 other) {
        if (other == global::gt_msg.RankWeekRequestsg101.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_rankWeekRequestsg101FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _rankWeekRequestsg101FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static RankWeekRequestsg101() {
      object.ReferenceEquals(global::gt_msg.GtSg101.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RankWeekResponsesg101 : pb::GeneratedMessage<RankWeekResponsesg101, RankWeekResponsesg101.Builder> {
    private RankWeekResponsesg101() { }
    private static readonly RankWeekResponsesg101 defaultInstance = new RankWeekResponsesg101().MakeReadOnly();
    private static readonly string[] _rankWeekResponsesg101FieldNames = new string[] { "faceurl", "nick", "score", "thedate" };
    private static readonly uint[] _rankWeekResponsesg101FieldTags = new uint[] { 10, 26, 32, 18 };
    public static RankWeekResponsesg101 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RankWeekResponsesg101 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RankWeekResponsesg101 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_RankWeekResponsesg101__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RankWeekResponsesg101, RankWeekResponsesg101.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg101.internal__static_gt_msg_RankWeekResponsesg101__FieldAccessorTable; }
    }
    
    public const int FaceurlFieldNumber = 1;
    private pbc::PopsicleList<string> faceurl_ = new pbc::PopsicleList<string>();
    public scg::IList<string> FaceurlList {
      get { return pbc::Lists.AsReadOnly(faceurl_); }
    }
    public int FaceurlCount {
      get { return faceurl_.Count; }
    }
    public string GetFaceurl(int index) {
      return faceurl_[index];
    }
    
    public const int ThedateFieldNumber = 2;
    private pbc::PopsicleList<string> thedate_ = new pbc::PopsicleList<string>();
    public scg::IList<string> ThedateList {
      get { return pbc::Lists.AsReadOnly(thedate_); }
    }
    public int ThedateCount {
      get { return thedate_.Count; }
    }
    public string GetThedate(int index) {
      return thedate_[index];
    }
    
    public const int NickFieldNumber = 3;
    private pbc::PopsicleList<string> nick_ = new pbc::PopsicleList<string>();
    public scg::IList<string> NickList {
      get { return pbc::Lists.AsReadOnly(nick_); }
    }
    public int NickCount {
      get { return nick_.Count; }
    }
    public string GetNick(int index) {
      return nick_[index];
    }
    
    public const int ScoreFieldNumber = 4;
    private pbc::PopsicleList<long> score_ = new pbc::PopsicleList<long>();
    public scg::IList<long> ScoreList {
      get { return pbc::Lists.AsReadOnly(score_); }
    }
    public int ScoreCount {
      get { return score_.Count; }
    }
    public long GetScore(int index) {
      return score_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _rankWeekResponsesg101FieldNames;
      if (faceurl_.Count > 0) {
        output.WriteStringArray(1, field_names[0], faceurl_);
      }
      if (thedate_.Count > 0) {
        output.WriteStringArray(2, field_names[3], thedate_);
      }
      if (nick_.Count > 0) {
        output.WriteStringArray(3, field_names[1], nick_);
      }
      if (score_.Count > 0) {
        output.WriteInt64Array(4, field_names[2], score_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (string element in FaceurlList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * faceurl_.Count;
      }
      {
        int dataSize = 0;
        foreach (string element in ThedateList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * thedate_.Count;
      }
      {
        int dataSize = 0;
        foreach (string element in NickList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * nick_.Count;
      }
      {
        int dataSize = 0;
        foreach (long element in ScoreList) {
          dataSize += pb::CodedOutputStream.ComputeInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * score_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RankWeekResponsesg101 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RankWeekResponsesg101 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RankWeekResponsesg101 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RankWeekResponsesg101 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RankWeekResponsesg101 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RankWeekResponsesg101 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RankWeekResponsesg101 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RankWeekResponsesg101 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RankWeekResponsesg101 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RankWeekResponsesg101 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RankWeekResponsesg101 MakeReadOnly() {
      faceurl_.MakeReadOnly();
      thedate_.MakeReadOnly();
      nick_.MakeReadOnly();
      score_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RankWeekResponsesg101 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RankWeekResponsesg101, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RankWeekResponsesg101 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RankWeekResponsesg101 result;
      
      private RankWeekResponsesg101 PrepareBuilder() {
        if (resultIsReadOnly) {
          RankWeekResponsesg101 original = result;
          result = new RankWeekResponsesg101();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RankWeekResponsesg101 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.RankWeekResponsesg101.Descriptor; }
      }
      
      public override RankWeekResponsesg101 DefaultInstanceForType {
        get { return global::gt_msg.RankWeekResponsesg101.DefaultInstance; }
      }
      
      public override RankWeekResponsesg101 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RankWeekResponsesg101) {
          return MergeFrom((RankWeekResponsesg101) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RankWeekResponsesg101 other) {
        if (other == global::gt_msg.RankWeekResponsesg101.DefaultInstance) return this;
        PrepareBuilder();
        if (other.faceurl_.Count != 0) {
          result.faceurl_.Add(other.faceurl_);
        }
        if (other.thedate_.Count != 0) {
          result.thedate_.Add(other.thedate_);
        }
        if (other.nick_.Count != 0) {
          result.nick_.Add(other.nick_);
        }
        if (other.score_.Count != 0) {
          result.score_.Add(other.score_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_rankWeekResponsesg101FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _rankWeekResponsesg101FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadStringArray(tag, field_name, result.faceurl_);
              break;
            }
            case 18: {
              input.ReadStringArray(tag, field_name, result.thedate_);
              break;
            }
            case 26: {
              input.ReadStringArray(tag, field_name, result.nick_);
              break;
            }
            case 34:
            case 32: {
              input.ReadInt64Array(tag, field_name, result.score_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<string> FaceurlList {
        get { return PrepareBuilder().faceurl_; }
      }
      public int FaceurlCount {
        get { return result.FaceurlCount; }
      }
      public string GetFaceurl(int index) {
        return result.GetFaceurl(index);
      }
      public Builder SetFaceurl(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.faceurl_[index] = value;
        return this;
      }
      public Builder AddFaceurl(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.faceurl_.Add(value);
        return this;
      }
      public Builder AddRangeFaceurl(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.faceurl_.Add(values);
        return this;
      }
      public Builder ClearFaceurl() {
        PrepareBuilder();
        result.faceurl_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> ThedateList {
        get { return PrepareBuilder().thedate_; }
      }
      public int ThedateCount {
        get { return result.ThedateCount; }
      }
      public string GetThedate(int index) {
        return result.GetThedate(index);
      }
      public Builder SetThedate(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.thedate_[index] = value;
        return this;
      }
      public Builder AddThedate(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.thedate_.Add(value);
        return this;
      }
      public Builder AddRangeThedate(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.thedate_.Add(values);
        return this;
      }
      public Builder ClearThedate() {
        PrepareBuilder();
        result.thedate_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> NickList {
        get { return PrepareBuilder().nick_; }
      }
      public int NickCount {
        get { return result.NickCount; }
      }
      public string GetNick(int index) {
        return result.GetNick(index);
      }
      public Builder SetNick(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.nick_[index] = value;
        return this;
      }
      public Builder AddNick(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.nick_.Add(value);
        return this;
      }
      public Builder AddRangeNick(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.nick_.Add(values);
        return this;
      }
      public Builder ClearNick() {
        PrepareBuilder();
        result.nick_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<long> ScoreList {
        get { return PrepareBuilder().score_; }
      }
      public int ScoreCount {
        get { return result.ScoreCount; }
      }
      public long GetScore(int index) {
        return result.GetScore(index);
      }
      public Builder SetScore(int index, long value) {
        PrepareBuilder();
        result.score_[index] = value;
        return this;
      }
      public Builder AddScore(long value) {
        PrepareBuilder();
        result.score_.Add(value);
        return this;
      }
      public Builder AddRangeScore(scg::IEnumerable<long> values) {
        PrepareBuilder();
        result.score_.Add(values);
        return this;
      }
      public Builder ClearScore() {
        PrepareBuilder();
        result.score_.Clear();
        return this;
      }
    }
    static RankWeekResponsesg101() {
      object.ReferenceEquals(global::gt_msg.GtSg101.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
