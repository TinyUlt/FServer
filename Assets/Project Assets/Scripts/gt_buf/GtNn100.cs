// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace gt_msg {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class GtNn100 {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_gt_msg_JoinFreeRequestnn100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.JoinFreeRequestnn100, global::gt_msg.JoinFreeRequestnn100.Builder> internal__static_gt_msg_JoinFreeRequestnn100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_JoinFreeResponsenn100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.JoinFreeResponsenn100, global::gt_msg.JoinFreeResponsenn100.Builder> internal__static_gt_msg_JoinFreeResponsenn100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_ActionRequestnn100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.ActionRequestnn100, global::gt_msg.ActionRequestnn100.Builder> internal__static_gt_msg_ActionRequestnn100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_ActionResponsenn100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.ActionResponsenn100, global::gt_msg.ActionResponsenn100.Builder> internal__static_gt_msg_ActionResponsenn100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_HandCardnn100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.HandCardnn100, global::gt_msg.HandCardnn100.Builder> internal__static_gt_msg_HandCardnn100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_UserPaynn100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserPaynn100, global::gt_msg.UserPaynn100.Builder> internal__static_gt_msg_UserPaynn100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_TableUserStatsnn100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableUserStatsnn100, global::gt_msg.TableUserStatsnn100.Builder> internal__static_gt_msg_TableUserStatsnn100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_TableStatsnn100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableStatsnn100, global::gt_msg.TableStatsnn100.Builder> internal__static_gt_msg_TableStatsnn100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_TableUserResultnn100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableUserResultnn100, global::gt_msg.TableUserResultnn100.Builder> internal__static_gt_msg_TableUserResultnn100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_RoundEndedEventnn100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.RoundEndedEventnn100, global::gt_msg.RoundEndedEventnn100.Builder> internal__static_gt_msg_RoundEndedEventnn100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_ForceExitTableRequestnn100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.ForceExitTableRequestnn100, global::gt_msg.ForceExitTableRequestnn100.Builder> internal__static_gt_msg_ForceExitTableRequestnn100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_ForceExitTableResponsenn100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.ForceExitTableResponsenn100, global::gt_msg.ForceExitTableResponsenn100.Builder> internal__static_gt_msg_ForceExitTableResponsenn100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_GameLifeRequestnn100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameLifeRequestnn100, global::gt_msg.GameLifeRequestnn100.Builder> internal__static_gt_msg_GameLifeRequestnn100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_GameLifeResponsenn100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameLifeResponsenn100, global::gt_msg.GameLifeResponsenn100.Builder> internal__static_gt_msg_GameLifeResponsenn100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_GameRankListRequestnn100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameRankListRequestnn100, global::gt_msg.GameRankListRequestnn100.Builder> internal__static_gt_msg_GameRankListRequestnn100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_GameRankListResponsenn100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameRankListResponsenn100, global::gt_msg.GameRankListResponsenn100.Builder> internal__static_gt_msg_GameRankListResponsenn100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_GMInfonn100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.GMInfonn100, global::gt_msg.GMInfonn100.Builder> internal__static_gt_msg_GMInfonn100__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static GtNn100() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5ndF9ubjEwMC5wcm90bxIGZ3RfbXNnGg1ndF9iYXNlLnByb3RvIl8KFEpv", 
            "aW5GcmVlUmVxdWVzdG5uMTAwEg8KB3VzZXJfaWQYASACKAkSGgoEcnVsZRgC", 
            "IAIoDjIMLmd0X21zZy5SdWxlEhoKBHJhbmsYAyABKA4yDC5ndF9tc2cuUmFu", 
            "ayKOBAoVSm9pbkZyZWVSZXNwb25zZW5uMTAwEkUKBGNvZGUYASACKA4yNy5n", 
            "dF9tc2cuSm9pbkZyZWVSZXNwb25zZW5uMTAwLkpvaW5GcmVlUmVzcG9uc2Vu", 
            "bjEwMENvZGUSGAoQcmVjb25uZWN0ZWRfdXNlchgCIAEoCBIRCgltaW5fY29p", 
            "bnMYAyABKAMSGAoQaGFzX2Jhc2ljX2xpdmluZxgEIAEoCBIeChZiYXNpY19s", 
            "aXZpbmdfYWxsX3RpbWVzGAUgASgFEh4KFmJhc2ljX2xpdmluZ191c2VfdGlt", 
            "ZXMYBiABKAUSGgoSYmFzaWNfbGl2aW5nX2NvaW5zGAcgASgFEiIKDHJhbmtf", 
            "cmVxdWVzdBgIIAEoDjIMLmd0X21zZy5SYW5rEhoKBHJhbmsYCSABKA4yDC5n", 
            "dF9tc2cuUmFuaxIrCgpnYW1lX3N0YXRzGAogASgLMhcuZ3RfbXNnLlRhYmxl", 
            "U3RhdHNubjEwMBIUCgxQYXlNb25leUxpc3QYCyADKAUSEAoISXRlbVR5cGUY", 
            "DCACKAUidgoZSm9pbkZyZWVSZXNwb25zZW5uMTAwQ29kZRIGCgJPaxAAEhgK", 
            "FE1pbmltdW1Db2luc1JlcXVpcmVkEAESGgoWTWluaW11bURpYW1vbmRSZXF1", 
            "aXJlZBACEhAKDE5vVGFibGVBdmFpbBADEgkKBU90aGVyEAQivgEKEkFjdGlv", 
            "blJlcXVlc3RubjEwMBI/CgRjb2RlGAEgAigOMjEuZ3RfbXNnLkFjdGlvblJl", 
            "cXVlc3RubjEwMC5BY3Rpb25SZXF1ZXN0bm4xMDBDb2RlEhEKCVBheU51bU1p", 
            "bhgCIAEoAxIRCglQYXlOdW1NYXgYAyABKAMiQQoWQWN0aW9uUmVxdWVzdG5u", 
            "MTAwQ29kZRIMCghNYWtlSG9zdBAAEgsKB0J1eVNlYXQQARIMCghEcm9wSG9z", 
            "dBACIvYCChNBY3Rpb25SZXNwb25zZW5uMTAwEkEKBGNvZGUYASACKA4yMy5n", 
            "dF9tc2cuQWN0aW9uUmVzcG9uc2VubjEwMC5BY3Rpb25SZXNwb25zZW5uMTAw", 
            "Q29kZRIVCg1NYWtlSG9zdE1vbmV5GAIgASgDIoQCChdBY3Rpb25SZXNwb25z", 
            "ZW5uMTAwQ29kZRIGCgJPSxAAEhEKDVBsYXllck5vRXhpc3QQARITCg9NYWtl", 
            "SG9zdE5vTW9uZXkQAhIOCgpQbGF5ZXJGdWxsEAMSEQoNQWN0aW9uVHlwZUVy", 
            "chAEEhAKDENhbm5vdEFjdGlvbhAFEgkKBU90aGVyEAYSDAoIRHJvcEhvc3QQ", 
            "BxIOCgpEcm9wSG9zdE9rEAgSCgoGSXNIb3N0EAkSEAoMSXNJbkhvc3RMaXN0", 
            "EAoSDgoKTWFrZUhvc3RPaxALEhcKE0Ryb3BIb3N0V2l0aE5vTW9uZXkQDBIU", 
            "ChBEcm9wSG9zdEZyb21MaXN0EA0iWwoNSGFuZENhcmRubjEwMBINCgVDYXJk", 
            "cxgBIAMoBRIQCghDYXJkVHlwZRgCIAEoBRIMCgRSYXRlGAMgASgFEg0KBVBv", 
            "aW50GAQgASgDEgwKBFNlYXQYBSACKAUiKwoMVXNlclBheW5uMTAwEgwKBHNl", 
            "YXQYASACKAMSDQoFdmFsdWUYAiACKAMilAEKE1RhYmxlVXNlclN0YXRzbm4x", 
            "MDASHwoJdXNlcl9pbmZvGAEgAigLMgwuZ3RfbXNnLlVzZXISKQoLUG9pbnRP", 
            "blNlYXQYAiADKAsyFC5ndF9tc2cuVXNlclBheW5uMTAwEjEKDU5ld0FjdGlv", 
            "bkxpc3QYAyADKAsyGi5ndF9tc2cuQWN0aW9uUmVxdWVzdG5uMTAwIuYCCg9U", 
            "YWJsZVN0YXRzbm4xMDASDwoHVGFibGVJRBgBIAIoBRINCgVTdGFnZRgCIAIo", 
            "BRIaCgRSYW5rGAMgAigOMgwuZ3RfbXNnLlJhbmsSGgoEUnVsZRgEIAIoDjIM", 
            "Lmd0X21zZy5SdWxlEhkKEU5leHRBY3Rpb25UaW1lT3V0GAUgAigFEgwKBFN0", 
            "ZXAYBiACKAUSLQoIVXNlclNlbGYYByABKAsyGy5ndF9tc2cuVGFibGVVc2Vy", 
            "U3RhdHNubjEwMBIaCgRIb3N0GAggASgLMgwuZ3RfbXNnLlVzZXISEAoISG9z", 
            "dEhwVXAYCSABKAUSEQoJSGlzdG9yeUxXGAogAygFEhQKDE1ha2VIb3N0TGlz", 
            "dBgLIAMoCRIpCgtQb2ludE9uU2VhdBgMIAMoCzIULmd0X21zZy5Vc2VyUGF5", 
            "bm4xMDASIQoCSEMYDSADKAsyFS5ndF9tc2cuSGFuZENhcmRubjEwMCKsAQoU", 
            "VGFibGVVc2VyUmVzdWx0bm4xMDASHwoJdXNlcl9pbmZvGAEgAigLMgwuZ3Rf", 
            "bXNnLlVzZXISKQoLUG9pbnRPblNlYXQYAiADKAsyFC5ndF9tc2cuVXNlclBh", 
            "eW5uMTAwEiYKCExXT25TZWF0GAMgAygLMhQuZ3RfbXNnLlVzZXJQYXlubjEw", 
            "MBILCgNUQVgYBCABKAMSEwoLQ29udGludWVXaW4YBSABKAUimAEKFFJvdW5k", 
            "RW5kZWRFdmVudG5uMTAwEg8KB1RhYmxlSUQYASACKAUSHAoUTmV4dFN0YXJ0", 
            "VGltZW91dFNlY3MYAiACKAUSIQoCSEMYAyADKAsyFS5ndF9tc2cuSGFuZENh", 
            "cmRubjEwMBIuCghVc2VyU2VsZhgEIAEoCzIcLmd0X21zZy5UYWJsZVVzZXJS", 
            "ZXN1bHRubjEwMCIcChpGb3JjZUV4aXRUYWJsZVJlcXVlc3RubjEwMCLUAQob", 
            "Rm9yY2VFeGl0VGFibGVSZXNwb25zZW5uMTAwEjYKBGNvZGUYASACKA4yKC5n", 
            "dF9tc2cuRm9yY2VFeGl0VGFibGVSZXNwb25zZW5uMTAwLkNvZGUifQoEQ29k", 
            "ZRIKCgZOb3JtYWwQABIKCgZHaXZlVXAQARIRCg1Ob0Vub3VnaE1vbmV5EAIS", 
            "DwoLQ2hhbmdlVGFibGUQAxIYChRDYW5Ob3RFeGl0Rm9yUGxheWluZxAEEh8K", 
            "G0Nhbk5vdENoYW5nZVRhYmxlRm9yUGxheWluZxAFIiMKFEdhbWVMaWZlUmVx", 
            "dWVzdG5uMTAwEgsKA3VpZBgBIAIoCSLcAwoVR2FtZUxpZmVSZXNwb25zZW5u", 
            "MTAwEjAKBGNvZGUYASACKA4yIi5ndF9tc2cuR2FtZUxpZmVSZXNwb25zZW5u", 
            "MTAwLkNvZGUSHwoJdXNlcl9pbmZvGAIgAigLMgwuZ3RfbXNnLlVzZXISEAoI", 
            "d2luVGltZXMYAyABKAUSEQoJbG9zdFRpbWVzGAQgASgFEhMKC2NvbnRpbnVl", 
            "V2luGAUgASgFEhYKDmxldmVsMVdpbkNoaXBzGAYgASgDEhoKEmxldmVsMVdp", 
            "bkNoaXBzUmFuaxgHIAEoBRIWCg5sZXZlbDJXaW5DaGlwcxgIIAEoAxIaChJs", 
            "ZXZlbDJXaW5DaGlwc1JhbmsYCSABKAUSFgoObGV2ZWwzV2luQ2hpcHMYCiAB", 
            "KAMSGgoSbGV2ZWwzV2luQ2hpcHNSYW5rGAsgASgFEhYKDmxldmVsNFdpbkNo", 
            "aXBzGAwgASgDEhoKEmxldmVsNFdpbkNoaXBzUmFuaxgNIAEoBRIWCg5sZXZl", 
            "bDVXaW5DaGlwcxgOIAEoAxIaChJsZXZlbDVXaW5DaGlwc1JhbmsYDyABKAUS", 
            "FgoOZ2FtZUFsbFVzZXJOdW0YECABKAUiGgoEQ29kZRIGCgJPaxAAEgoKBkZh", 
            "aWxlZBABIhoKGEdhbWVSYW5rTGlzdFJlcXVlc3RubjEwMCK3AQoZR2FtZVJh", 
            "bmtMaXN0UmVzcG9uc2VubjEwMBI0CgRjb2RlGAEgAigOMiYuZ3RfbXNnLkdh", 
            "bWVSYW5rTGlzdFJlc3BvbnNlbm4xMDAuQ29kZRILCgN1aWQYAiACKAkSFQoN", 
            "ZGF5X3dpbl9jaGlwcxgDIAMoCRIRCglhbGxfdGltZXMYBCADKAkSEQoJYWxs", 
            "X2NoaXBzGAUgAygJIhoKBENvZGUSBgoCT2sQABIKCgZGYWlsZWQQASIfCgtH", 
            "TUluZm9ubjEwMBIQCghDYXJkVHlwZRgBIAMoBSraAQoOQ2FyZHNUeXBlbm4x", 
            "MDASEwoPU3RyYWlnaHRUb25nSHVhEAESDAoITGl0dGxlNU4QAhIJCgVLaW5n", 
            "ThADEgkKBVNhbWU0EAQSCQoFU2FtZTMQBRINCglTYW1lU3VpdGUQBhIMCghT", 
            "dHJhaWdodBAHEgYKAk5OEAgSBgoCTjkQCRIGCgJOOBAKEgYKAk43EAsSBgoC", 
            "TjYQDBIGCgJONRANEgYKAk40EA4SBgoCTjMQDxIGCgJOMhAQEgYKAk4xEBES", 
          "BgoCTjAQEhIPCgtBbm9ueW1vdXNOThAT"));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_gt_msg_JoinFreeRequestnn100__Descriptor = Descriptor.MessageTypes[0];
        internal__static_gt_msg_JoinFreeRequestnn100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.JoinFreeRequestnn100, global::gt_msg.JoinFreeRequestnn100.Builder>(internal__static_gt_msg_JoinFreeRequestnn100__Descriptor,
                new string[] { "UserId", "Rule", "Rank", });
        internal__static_gt_msg_JoinFreeResponsenn100__Descriptor = Descriptor.MessageTypes[1];
        internal__static_gt_msg_JoinFreeResponsenn100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.JoinFreeResponsenn100, global::gt_msg.JoinFreeResponsenn100.Builder>(internal__static_gt_msg_JoinFreeResponsenn100__Descriptor,
                new string[] { "Code", "ReconnectedUser", "MinCoins", "HasBasicLiving", "BasicLivingAllTimes", "BasicLivingUseTimes", "BasicLivingCoins", "RankRequest", "Rank", "GameStats", "PayMoneyList", "ItemType", });
        internal__static_gt_msg_ActionRequestnn100__Descriptor = Descriptor.MessageTypes[2];
        internal__static_gt_msg_ActionRequestnn100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.ActionRequestnn100, global::gt_msg.ActionRequestnn100.Builder>(internal__static_gt_msg_ActionRequestnn100__Descriptor,
                new string[] { "Code", "PayNumMin", "PayNumMax", });
        internal__static_gt_msg_ActionResponsenn100__Descriptor = Descriptor.MessageTypes[3];
        internal__static_gt_msg_ActionResponsenn100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.ActionResponsenn100, global::gt_msg.ActionResponsenn100.Builder>(internal__static_gt_msg_ActionResponsenn100__Descriptor,
                new string[] { "Code", "MakeHostMoney", });
        internal__static_gt_msg_HandCardnn100__Descriptor = Descriptor.MessageTypes[4];
        internal__static_gt_msg_HandCardnn100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.HandCardnn100, global::gt_msg.HandCardnn100.Builder>(internal__static_gt_msg_HandCardnn100__Descriptor,
                new string[] { "Cards", "CardType", "Rate", "Point", "Seat", });
        internal__static_gt_msg_UserPaynn100__Descriptor = Descriptor.MessageTypes[5];
        internal__static_gt_msg_UserPaynn100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserPaynn100, global::gt_msg.UserPaynn100.Builder>(internal__static_gt_msg_UserPaynn100__Descriptor,
                new string[] { "Seat", "Value", });
        internal__static_gt_msg_TableUserStatsnn100__Descriptor = Descriptor.MessageTypes[6];
        internal__static_gt_msg_TableUserStatsnn100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableUserStatsnn100, global::gt_msg.TableUserStatsnn100.Builder>(internal__static_gt_msg_TableUserStatsnn100__Descriptor,
                new string[] { "UserInfo", "PointOnSeat", "NewActionList", });
        internal__static_gt_msg_TableStatsnn100__Descriptor = Descriptor.MessageTypes[7];
        internal__static_gt_msg_TableStatsnn100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableStatsnn100, global::gt_msg.TableStatsnn100.Builder>(internal__static_gt_msg_TableStatsnn100__Descriptor,
                new string[] { "TableID", "Stage", "Rank", "Rule", "NextActionTimeOut", "Step", "UserSelf", "Host", "HostHpUp", "HistoryLW", "MakeHostList", "PointOnSeat", "HC", });
        internal__static_gt_msg_TableUserResultnn100__Descriptor = Descriptor.MessageTypes[8];
        internal__static_gt_msg_TableUserResultnn100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableUserResultnn100, global::gt_msg.TableUserResultnn100.Builder>(internal__static_gt_msg_TableUserResultnn100__Descriptor,
                new string[] { "UserInfo", "PointOnSeat", "LWOnSeat", "TAX", "ContinueWin", });
        internal__static_gt_msg_RoundEndedEventnn100__Descriptor = Descriptor.MessageTypes[9];
        internal__static_gt_msg_RoundEndedEventnn100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.RoundEndedEventnn100, global::gt_msg.RoundEndedEventnn100.Builder>(internal__static_gt_msg_RoundEndedEventnn100__Descriptor,
                new string[] { "TableID", "NextStartTimeoutSecs", "HC", "UserSelf", });
        internal__static_gt_msg_ForceExitTableRequestnn100__Descriptor = Descriptor.MessageTypes[10];
        internal__static_gt_msg_ForceExitTableRequestnn100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.ForceExitTableRequestnn100, global::gt_msg.ForceExitTableRequestnn100.Builder>(internal__static_gt_msg_ForceExitTableRequestnn100__Descriptor,
                new string[] { });
        internal__static_gt_msg_ForceExitTableResponsenn100__Descriptor = Descriptor.MessageTypes[11];
        internal__static_gt_msg_ForceExitTableResponsenn100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.ForceExitTableResponsenn100, global::gt_msg.ForceExitTableResponsenn100.Builder>(internal__static_gt_msg_ForceExitTableResponsenn100__Descriptor,
                new string[] { "Code", });
        internal__static_gt_msg_GameLifeRequestnn100__Descriptor = Descriptor.MessageTypes[12];
        internal__static_gt_msg_GameLifeRequestnn100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameLifeRequestnn100, global::gt_msg.GameLifeRequestnn100.Builder>(internal__static_gt_msg_GameLifeRequestnn100__Descriptor,
                new string[] { "Uid", });
        internal__static_gt_msg_GameLifeResponsenn100__Descriptor = Descriptor.MessageTypes[13];
        internal__static_gt_msg_GameLifeResponsenn100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameLifeResponsenn100, global::gt_msg.GameLifeResponsenn100.Builder>(internal__static_gt_msg_GameLifeResponsenn100__Descriptor,
                new string[] { "Code", "UserInfo", "WinTimes", "LostTimes", "ContinueWin", "Level1WinChips", "Level1WinChipsRank", "Level2WinChips", "Level2WinChipsRank", "Level3WinChips", "Level3WinChipsRank", "Level4WinChips", "Level4WinChipsRank", "Level5WinChips", "Level5WinChipsRank", "GameAllUserNum", });
        internal__static_gt_msg_GameRankListRequestnn100__Descriptor = Descriptor.MessageTypes[14];
        internal__static_gt_msg_GameRankListRequestnn100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameRankListRequestnn100, global::gt_msg.GameRankListRequestnn100.Builder>(internal__static_gt_msg_GameRankListRequestnn100__Descriptor,
                new string[] { });
        internal__static_gt_msg_GameRankListResponsenn100__Descriptor = Descriptor.MessageTypes[15];
        internal__static_gt_msg_GameRankListResponsenn100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameRankListResponsenn100, global::gt_msg.GameRankListResponsenn100.Builder>(internal__static_gt_msg_GameRankListResponsenn100__Descriptor,
                new string[] { "Code", "Uid", "DayWinChips", "AllTimes", "AllChips", });
        internal__static_gt_msg_GMInfonn100__Descriptor = Descriptor.MessageTypes[16];
        internal__static_gt_msg_GMInfonn100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.GMInfonn100, global::gt_msg.GMInfonn100.Builder>(internal__static_gt_msg_GMInfonn100__Descriptor,
                new string[] { "CardType", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::gt_msg.GtBase.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum CardsTypenn100 {
    StraightTongHua = 1,
    Little5N = 2,
    KingN = 3,
    Same4 = 4,
    Same3 = 5,
    SameSuite = 6,
    Straight = 7,
    NN = 8,
    N9 = 9,
    N8 = 10,
    N7 = 11,
    N6 = 12,
    N5 = 13,
    N4 = 14,
    N3 = 15,
    N2 = 16,
    N1 = 17,
    N0 = 18,
    AnonymousNN = 19,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class JoinFreeRequestnn100 : pb::GeneratedMessage<JoinFreeRequestnn100, JoinFreeRequestnn100.Builder> {
    private JoinFreeRequestnn100() { }
    private static readonly JoinFreeRequestnn100 defaultInstance = new JoinFreeRequestnn100().MakeReadOnly();
    private static readonly string[] _joinFreeRequestnn100FieldNames = new string[] { "rank", "rule", "user_id" };
    private static readonly uint[] _joinFreeRequestnn100FieldTags = new uint[] { 24, 16, 10 };
    public static JoinFreeRequestnn100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinFreeRequestnn100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinFreeRequestnn100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_JoinFreeRequestnn100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinFreeRequestnn100, JoinFreeRequestnn100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_JoinFreeRequestnn100__FieldAccessorTable; }
    }
    
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private string userId_ = "";
    public bool HasUserId {
      get { return hasUserId; }
    }
    public string UserId {
      get { return userId_; }
    }
    
    public const int RuleFieldNumber = 2;
    private bool hasRule;
    private global::gt_msg.Rule rule_ = global::gt_msg.Rule.RuleNormal;
    public bool HasRule {
      get { return hasRule; }
    }
    public global::gt_msg.Rule Rule {
      get { return rule_; }
    }
    
    public const int RankFieldNumber = 3;
    private bool hasRank;
    private global::gt_msg.Rank rank_ = global::gt_msg.Rank.LV0;
    public bool HasRank {
      get { return hasRank; }
    }
    public global::gt_msg.Rank Rank {
      get { return rank_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserId) return false;
        if (!hasRule) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _joinFreeRequestnn100FieldNames;
      if (hasUserId) {
        output.WriteString(1, field_names[2], UserId);
      }
      if (hasRule) {
        output.WriteEnum(2, field_names[1], (int) Rule, Rule);
      }
      if (hasRank) {
        output.WriteEnum(3, field_names[0], (int) Rank, Rank);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, UserId);
      }
      if (hasRule) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Rule);
      }
      if (hasRank) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Rank);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static JoinFreeRequestnn100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinFreeRequestnn100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeRequestnn100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinFreeRequestnn100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeRequestnn100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinFreeRequestnn100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeRequestnn100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinFreeRequestnn100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinFreeRequestnn100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinFreeRequestnn100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinFreeRequestnn100 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinFreeRequestnn100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinFreeRequestnn100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinFreeRequestnn100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinFreeRequestnn100 result;
      
      private JoinFreeRequestnn100 PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinFreeRequestnn100 original = result;
          result = new JoinFreeRequestnn100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinFreeRequestnn100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.JoinFreeRequestnn100.Descriptor; }
      }
      
      public override JoinFreeRequestnn100 DefaultInstanceForType {
        get { return global::gt_msg.JoinFreeRequestnn100.DefaultInstance; }
      }
      
      public override JoinFreeRequestnn100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is JoinFreeRequestnn100) {
          return MergeFrom((JoinFreeRequestnn100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(JoinFreeRequestnn100 other) {
        if (other == global::gt_msg.JoinFreeRequestnn100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasRule) {
          Rule = other.Rule;
        }
        if (other.HasRank) {
          Rank = other.Rank;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_joinFreeRequestnn100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _joinFreeRequestnn100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserId = input.ReadString(ref result.userId_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.rule_, out unknown)) {
                result.hasRule = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.rank_, out unknown)) {
                result.hasRank = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public string UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = "";
        return this;
      }
      
      public bool HasRule {
       get { return result.hasRule; }
      }
      public global::gt_msg.Rule Rule {
        get { return result.Rule; }
        set { SetRule(value); }
      }
      public Builder SetRule(global::gt_msg.Rule value) {
        PrepareBuilder();
        result.hasRule = true;
        result.rule_ = value;
        return this;
      }
      public Builder ClearRule() {
        PrepareBuilder();
        result.hasRule = false;
        result.rule_ = global::gt_msg.Rule.RuleNormal;
        return this;
      }
      
      public bool HasRank {
       get { return result.hasRank; }
      }
      public global::gt_msg.Rank Rank {
        get { return result.Rank; }
        set { SetRank(value); }
      }
      public Builder SetRank(global::gt_msg.Rank value) {
        PrepareBuilder();
        result.hasRank = true;
        result.rank_ = value;
        return this;
      }
      public Builder ClearRank() {
        PrepareBuilder();
        result.hasRank = false;
        result.rank_ = global::gt_msg.Rank.LV0;
        return this;
      }
    }
    static JoinFreeRequestnn100() {
      object.ReferenceEquals(global::gt_msg.GtNn100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class JoinFreeResponsenn100 : pb::GeneratedMessage<JoinFreeResponsenn100, JoinFreeResponsenn100.Builder> {
    private JoinFreeResponsenn100() { }
    private static readonly JoinFreeResponsenn100 defaultInstance = new JoinFreeResponsenn100().MakeReadOnly();
    private static readonly string[] _joinFreeResponsenn100FieldNames = new string[] { "ItemType", "PayMoneyList", "basic_living_all_times", "basic_living_coins", "basic_living_use_times", "code", "game_stats", "has_basic_living", "min_coins", "rank", "rank_request", "reconnected_user" };
    private static readonly uint[] _joinFreeResponsenn100FieldTags = new uint[] { 96, 88, 40, 56, 48, 8, 82, 32, 24, 72, 64, 16 };
    public static JoinFreeResponsenn100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinFreeResponsenn100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinFreeResponsenn100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_JoinFreeResponsenn100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinFreeResponsenn100, JoinFreeResponsenn100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_JoinFreeResponsenn100__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum JoinFreeResponsenn100Code {
        Ok = 0,
        MinimumCoinsRequired = 1,
        MinimumDiamondRequired = 2,
        NoTableAvail = 3,
        Other = 4,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.JoinFreeResponsenn100.Types.JoinFreeResponsenn100Code code_ = global::gt_msg.JoinFreeResponsenn100.Types.JoinFreeResponsenn100Code.Ok;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.JoinFreeResponsenn100.Types.JoinFreeResponsenn100Code Code {
      get { return code_; }
    }
    
    public const int ReconnectedUserFieldNumber = 2;
    private bool hasReconnectedUser;
    private bool reconnectedUser_;
    public bool HasReconnectedUser {
      get { return hasReconnectedUser; }
    }
    public bool ReconnectedUser {
      get { return reconnectedUser_; }
    }
    
    public const int MinCoinsFieldNumber = 3;
    private bool hasMinCoins;
    private long minCoins_;
    public bool HasMinCoins {
      get { return hasMinCoins; }
    }
    public long MinCoins {
      get { return minCoins_; }
    }
    
    public const int HasBasicLivingFieldNumber = 4;
    private bool hasHasBasicLiving;
    private bool hasBasicLiving_;
    public bool HasHasBasicLiving {
      get { return hasHasBasicLiving; }
    }
    public bool HasBasicLiving {
      get { return hasBasicLiving_; }
    }
    
    public const int BasicLivingAllTimesFieldNumber = 5;
    private bool hasBasicLivingAllTimes;
    private int basicLivingAllTimes_;
    public bool HasBasicLivingAllTimes {
      get { return hasBasicLivingAllTimes; }
    }
    public int BasicLivingAllTimes {
      get { return basicLivingAllTimes_; }
    }
    
    public const int BasicLivingUseTimesFieldNumber = 6;
    private bool hasBasicLivingUseTimes;
    private int basicLivingUseTimes_;
    public bool HasBasicLivingUseTimes {
      get { return hasBasicLivingUseTimes; }
    }
    public int BasicLivingUseTimes {
      get { return basicLivingUseTimes_; }
    }
    
    public const int BasicLivingCoinsFieldNumber = 7;
    private bool hasBasicLivingCoins;
    private int basicLivingCoins_;
    public bool HasBasicLivingCoins {
      get { return hasBasicLivingCoins; }
    }
    public int BasicLivingCoins {
      get { return basicLivingCoins_; }
    }
    
    public const int RankRequestFieldNumber = 8;
    private bool hasRankRequest;
    private global::gt_msg.Rank rankRequest_ = global::gt_msg.Rank.LV0;
    public bool HasRankRequest {
      get { return hasRankRequest; }
    }
    public global::gt_msg.Rank RankRequest {
      get { return rankRequest_; }
    }
    
    public const int RankFieldNumber = 9;
    private bool hasRank;
    private global::gt_msg.Rank rank_ = global::gt_msg.Rank.LV0;
    public bool HasRank {
      get { return hasRank; }
    }
    public global::gt_msg.Rank Rank {
      get { return rank_; }
    }
    
    public const int GameStatsFieldNumber = 10;
    private bool hasGameStats;
    private global::gt_msg.TableStatsnn100 gameStats_;
    public bool HasGameStats {
      get { return hasGameStats; }
    }
    public global::gt_msg.TableStatsnn100 GameStats {
      get { return gameStats_ ?? global::gt_msg.TableStatsnn100.DefaultInstance; }
    }
    
    public const int PayMoneyListFieldNumber = 11;
    private pbc::PopsicleList<int> payMoneyList_ = new pbc::PopsicleList<int>();
    public scg::IList<int> PayMoneyListList {
      get { return pbc::Lists.AsReadOnly(payMoneyList_); }
    }
    public int PayMoneyListCount {
      get { return payMoneyList_.Count; }
    }
    public int GetPayMoneyList(int index) {
      return payMoneyList_[index];
    }
    
    public const int ItemTypeFieldNumber = 12;
    private bool hasItemType;
    private int itemType_;
    public bool HasItemType {
      get { return hasItemType; }
    }
    public int ItemType {
      get { return itemType_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        if (!hasItemType) return false;
        if (HasGameStats) {
          if (!GameStats.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _joinFreeResponsenn100FieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[5], (int) Code, Code);
      }
      if (hasReconnectedUser) {
        output.WriteBool(2, field_names[11], ReconnectedUser);
      }
      if (hasMinCoins) {
        output.WriteInt64(3, field_names[8], MinCoins);
      }
      if (hasHasBasicLiving) {
        output.WriteBool(4, field_names[7], HasBasicLiving);
      }
      if (hasBasicLivingAllTimes) {
        output.WriteInt32(5, field_names[2], BasicLivingAllTimes);
      }
      if (hasBasicLivingUseTimes) {
        output.WriteInt32(6, field_names[4], BasicLivingUseTimes);
      }
      if (hasBasicLivingCoins) {
        output.WriteInt32(7, field_names[3], BasicLivingCoins);
      }
      if (hasRankRequest) {
        output.WriteEnum(8, field_names[10], (int) RankRequest, RankRequest);
      }
      if (hasRank) {
        output.WriteEnum(9, field_names[9], (int) Rank, Rank);
      }
      if (hasGameStats) {
        output.WriteMessage(10, field_names[6], GameStats);
      }
      if (payMoneyList_.Count > 0) {
        output.WriteInt32Array(11, field_names[1], payMoneyList_);
      }
      if (hasItemType) {
        output.WriteInt32(12, field_names[0], ItemType);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasReconnectedUser) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, ReconnectedUser);
      }
      if (hasMinCoins) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, MinCoins);
      }
      if (hasHasBasicLiving) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, HasBasicLiving);
      }
      if (hasBasicLivingAllTimes) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, BasicLivingAllTimes);
      }
      if (hasBasicLivingUseTimes) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, BasicLivingUseTimes);
      }
      if (hasBasicLivingCoins) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, BasicLivingCoins);
      }
      if (hasRankRequest) {
        size += pb::CodedOutputStream.ComputeEnumSize(8, (int) RankRequest);
      }
      if (hasRank) {
        size += pb::CodedOutputStream.ComputeEnumSize(9, (int) Rank);
      }
      if (hasGameStats) {
        size += pb::CodedOutputStream.ComputeMessageSize(10, GameStats);
      }
      {
        int dataSize = 0;
        foreach (int element in PayMoneyListList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * payMoneyList_.Count;
      }
      if (hasItemType) {
        size += pb::CodedOutputStream.ComputeInt32Size(12, ItemType);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static JoinFreeResponsenn100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinFreeResponsenn100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeResponsenn100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinFreeResponsenn100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeResponsenn100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinFreeResponsenn100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeResponsenn100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinFreeResponsenn100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinFreeResponsenn100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinFreeResponsenn100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinFreeResponsenn100 MakeReadOnly() {
      payMoneyList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinFreeResponsenn100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinFreeResponsenn100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinFreeResponsenn100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinFreeResponsenn100 result;
      
      private JoinFreeResponsenn100 PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinFreeResponsenn100 original = result;
          result = new JoinFreeResponsenn100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinFreeResponsenn100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.JoinFreeResponsenn100.Descriptor; }
      }
      
      public override JoinFreeResponsenn100 DefaultInstanceForType {
        get { return global::gt_msg.JoinFreeResponsenn100.DefaultInstance; }
      }
      
      public override JoinFreeResponsenn100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is JoinFreeResponsenn100) {
          return MergeFrom((JoinFreeResponsenn100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(JoinFreeResponsenn100 other) {
        if (other == global::gt_msg.JoinFreeResponsenn100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasReconnectedUser) {
          ReconnectedUser = other.ReconnectedUser;
        }
        if (other.HasMinCoins) {
          MinCoins = other.MinCoins;
        }
        if (other.HasHasBasicLiving) {
          HasBasicLiving = other.HasBasicLiving;
        }
        if (other.HasBasicLivingAllTimes) {
          BasicLivingAllTimes = other.BasicLivingAllTimes;
        }
        if (other.HasBasicLivingUseTimes) {
          BasicLivingUseTimes = other.BasicLivingUseTimes;
        }
        if (other.HasBasicLivingCoins) {
          BasicLivingCoins = other.BasicLivingCoins;
        }
        if (other.HasRankRequest) {
          RankRequest = other.RankRequest;
        }
        if (other.HasRank) {
          Rank = other.Rank;
        }
        if (other.HasGameStats) {
          MergeGameStats(other.GameStats);
        }
        if (other.payMoneyList_.Count != 0) {
          result.payMoneyList_.Add(other.payMoneyList_);
        }
        if (other.HasItemType) {
          ItemType = other.ItemType;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_joinFreeResponsenn100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _joinFreeResponsenn100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasReconnectedUser = input.ReadBool(ref result.reconnectedUser_);
              break;
            }
            case 24: {
              result.hasMinCoins = input.ReadInt64(ref result.minCoins_);
              break;
            }
            case 32: {
              result.hasHasBasicLiving = input.ReadBool(ref result.hasBasicLiving_);
              break;
            }
            case 40: {
              result.hasBasicLivingAllTimes = input.ReadInt32(ref result.basicLivingAllTimes_);
              break;
            }
            case 48: {
              result.hasBasicLivingUseTimes = input.ReadInt32(ref result.basicLivingUseTimes_);
              break;
            }
            case 56: {
              result.hasBasicLivingCoins = input.ReadInt32(ref result.basicLivingCoins_);
              break;
            }
            case 64: {
              object unknown;
              if(input.ReadEnum(ref result.rankRequest_, out unknown)) {
                result.hasRankRequest = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(8, (ulong)(int)unknown);
              }
              break;
            }
            case 72: {
              object unknown;
              if(input.ReadEnum(ref result.rank_, out unknown)) {
                result.hasRank = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(9, (ulong)(int)unknown);
              }
              break;
            }
            case 82: {
              global::gt_msg.TableStatsnn100.Builder subBuilder = global::gt_msg.TableStatsnn100.CreateBuilder();
              if (result.hasGameStats) {
                subBuilder.MergeFrom(GameStats);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameStats = subBuilder.BuildPartial();
              break;
            }
            case 90:
            case 88: {
              input.ReadInt32Array(tag, field_name, result.payMoneyList_);
              break;
            }
            case 96: {
              result.hasItemType = input.ReadInt32(ref result.itemType_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.JoinFreeResponsenn100.Types.JoinFreeResponsenn100Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.JoinFreeResponsenn100.Types.JoinFreeResponsenn100Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.JoinFreeResponsenn100.Types.JoinFreeResponsenn100Code.Ok;
        return this;
      }
      
      public bool HasReconnectedUser {
        get { return result.hasReconnectedUser; }
      }
      public bool ReconnectedUser {
        get { return result.ReconnectedUser; }
        set { SetReconnectedUser(value); }
      }
      public Builder SetReconnectedUser(bool value) {
        PrepareBuilder();
        result.hasReconnectedUser = true;
        result.reconnectedUser_ = value;
        return this;
      }
      public Builder ClearReconnectedUser() {
        PrepareBuilder();
        result.hasReconnectedUser = false;
        result.reconnectedUser_ = false;
        return this;
      }
      
      public bool HasMinCoins {
        get { return result.hasMinCoins; }
      }
      public long MinCoins {
        get { return result.MinCoins; }
        set { SetMinCoins(value); }
      }
      public Builder SetMinCoins(long value) {
        PrepareBuilder();
        result.hasMinCoins = true;
        result.minCoins_ = value;
        return this;
      }
      public Builder ClearMinCoins() {
        PrepareBuilder();
        result.hasMinCoins = false;
        result.minCoins_ = 0L;
        return this;
      }
      
      public bool HasHasBasicLiving {
        get { return result.hasHasBasicLiving; }
      }
      public bool HasBasicLiving {
        get { return result.HasBasicLiving; }
        set { SetHasBasicLiving(value); }
      }
      public Builder SetHasBasicLiving(bool value) {
        PrepareBuilder();
        result.hasHasBasicLiving = true;
        result.hasBasicLiving_ = value;
        return this;
      }
      public Builder ClearHasBasicLiving() {
        PrepareBuilder();
        result.hasHasBasicLiving = false;
        result.hasBasicLiving_ = false;
        return this;
      }
      
      public bool HasBasicLivingAllTimes {
        get { return result.hasBasicLivingAllTimes; }
      }
      public int BasicLivingAllTimes {
        get { return result.BasicLivingAllTimes; }
        set { SetBasicLivingAllTimes(value); }
      }
      public Builder SetBasicLivingAllTimes(int value) {
        PrepareBuilder();
        result.hasBasicLivingAllTimes = true;
        result.basicLivingAllTimes_ = value;
        return this;
      }
      public Builder ClearBasicLivingAllTimes() {
        PrepareBuilder();
        result.hasBasicLivingAllTimes = false;
        result.basicLivingAllTimes_ = 0;
        return this;
      }
      
      public bool HasBasicLivingUseTimes {
        get { return result.hasBasicLivingUseTimes; }
      }
      public int BasicLivingUseTimes {
        get { return result.BasicLivingUseTimes; }
        set { SetBasicLivingUseTimes(value); }
      }
      public Builder SetBasicLivingUseTimes(int value) {
        PrepareBuilder();
        result.hasBasicLivingUseTimes = true;
        result.basicLivingUseTimes_ = value;
        return this;
      }
      public Builder ClearBasicLivingUseTimes() {
        PrepareBuilder();
        result.hasBasicLivingUseTimes = false;
        result.basicLivingUseTimes_ = 0;
        return this;
      }
      
      public bool HasBasicLivingCoins {
        get { return result.hasBasicLivingCoins; }
      }
      public int BasicLivingCoins {
        get { return result.BasicLivingCoins; }
        set { SetBasicLivingCoins(value); }
      }
      public Builder SetBasicLivingCoins(int value) {
        PrepareBuilder();
        result.hasBasicLivingCoins = true;
        result.basicLivingCoins_ = value;
        return this;
      }
      public Builder ClearBasicLivingCoins() {
        PrepareBuilder();
        result.hasBasicLivingCoins = false;
        result.basicLivingCoins_ = 0;
        return this;
      }
      
      public bool HasRankRequest {
       get { return result.hasRankRequest; }
      }
      public global::gt_msg.Rank RankRequest {
        get { return result.RankRequest; }
        set { SetRankRequest(value); }
      }
      public Builder SetRankRequest(global::gt_msg.Rank value) {
        PrepareBuilder();
        result.hasRankRequest = true;
        result.rankRequest_ = value;
        return this;
      }
      public Builder ClearRankRequest() {
        PrepareBuilder();
        result.hasRankRequest = false;
        result.rankRequest_ = global::gt_msg.Rank.LV0;
        return this;
      }
      
      public bool HasRank {
       get { return result.hasRank; }
      }
      public global::gt_msg.Rank Rank {
        get { return result.Rank; }
        set { SetRank(value); }
      }
      public Builder SetRank(global::gt_msg.Rank value) {
        PrepareBuilder();
        result.hasRank = true;
        result.rank_ = value;
        return this;
      }
      public Builder ClearRank() {
        PrepareBuilder();
        result.hasRank = false;
        result.rank_ = global::gt_msg.Rank.LV0;
        return this;
      }
      
      public bool HasGameStats {
       get { return result.hasGameStats; }
      }
      public global::gt_msg.TableStatsnn100 GameStats {
        get { return result.GameStats; }
        set { SetGameStats(value); }
      }
      public Builder SetGameStats(global::gt_msg.TableStatsnn100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameStats = true;
        result.gameStats_ = value;
        return this;
      }
      public Builder SetGameStats(global::gt_msg.TableStatsnn100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameStats = true;
        result.gameStats_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameStats(global::gt_msg.TableStatsnn100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameStats &&
            result.gameStats_ != global::gt_msg.TableStatsnn100.DefaultInstance) {
            result.gameStats_ = global::gt_msg.TableStatsnn100.CreateBuilder(result.gameStats_).MergeFrom(value).BuildPartial();
        } else {
          result.gameStats_ = value;
        }
        result.hasGameStats = true;
        return this;
      }
      public Builder ClearGameStats() {
        PrepareBuilder();
        result.hasGameStats = false;
        result.gameStats_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<int> PayMoneyListList {
        get { return PrepareBuilder().payMoneyList_; }
      }
      public int PayMoneyListCount {
        get { return result.PayMoneyListCount; }
      }
      public int GetPayMoneyList(int index) {
        return result.GetPayMoneyList(index);
      }
      public Builder SetPayMoneyList(int index, int value) {
        PrepareBuilder();
        result.payMoneyList_[index] = value;
        return this;
      }
      public Builder AddPayMoneyList(int value) {
        PrepareBuilder();
        result.payMoneyList_.Add(value);
        return this;
      }
      public Builder AddRangePayMoneyList(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.payMoneyList_.Add(values);
        return this;
      }
      public Builder ClearPayMoneyList() {
        PrepareBuilder();
        result.payMoneyList_.Clear();
        return this;
      }
      
      public bool HasItemType {
        get { return result.hasItemType; }
      }
      public int ItemType {
        get { return result.ItemType; }
        set { SetItemType(value); }
      }
      public Builder SetItemType(int value) {
        PrepareBuilder();
        result.hasItemType = true;
        result.itemType_ = value;
        return this;
      }
      public Builder ClearItemType() {
        PrepareBuilder();
        result.hasItemType = false;
        result.itemType_ = 0;
        return this;
      }
    }
    static JoinFreeResponsenn100() {
      object.ReferenceEquals(global::gt_msg.GtNn100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ActionRequestnn100 : pb::GeneratedMessage<ActionRequestnn100, ActionRequestnn100.Builder> {
    private ActionRequestnn100() { }
    private static readonly ActionRequestnn100 defaultInstance = new ActionRequestnn100().MakeReadOnly();
    private static readonly string[] _actionRequestnn100FieldNames = new string[] { "PayNumMax", "PayNumMin", "code" };
    private static readonly uint[] _actionRequestnn100FieldTags = new uint[] { 24, 16, 8 };
    public static ActionRequestnn100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ActionRequestnn100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ActionRequestnn100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_ActionRequestnn100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ActionRequestnn100, ActionRequestnn100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_ActionRequestnn100__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum ActionRequestnn100Code {
        MakeHost = 0,
        BuySeat = 1,
        DropHost = 2,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.ActionRequestnn100.Types.ActionRequestnn100Code code_ = global::gt_msg.ActionRequestnn100.Types.ActionRequestnn100Code.MakeHost;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.ActionRequestnn100.Types.ActionRequestnn100Code Code {
      get { return code_; }
    }
    
    public const int PayNumMinFieldNumber = 2;
    private bool hasPayNumMin;
    private long payNumMin_;
    public bool HasPayNumMin {
      get { return hasPayNumMin; }
    }
    public long PayNumMin {
      get { return payNumMin_; }
    }
    
    public const int PayNumMaxFieldNumber = 3;
    private bool hasPayNumMax;
    private long payNumMax_;
    public bool HasPayNumMax {
      get { return hasPayNumMax; }
    }
    public long PayNumMax {
      get { return payNumMax_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _actionRequestnn100FieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[2], (int) Code, Code);
      }
      if (hasPayNumMin) {
        output.WriteInt64(2, field_names[1], PayNumMin);
      }
      if (hasPayNumMax) {
        output.WriteInt64(3, field_names[0], PayNumMax);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasPayNumMin) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, PayNumMin);
      }
      if (hasPayNumMax) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, PayNumMax);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ActionRequestnn100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActionRequestnn100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActionRequestnn100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActionRequestnn100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActionRequestnn100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActionRequestnn100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ActionRequestnn100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ActionRequestnn100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ActionRequestnn100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActionRequestnn100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ActionRequestnn100 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ActionRequestnn100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ActionRequestnn100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ActionRequestnn100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ActionRequestnn100 result;
      
      private ActionRequestnn100 PrepareBuilder() {
        if (resultIsReadOnly) {
          ActionRequestnn100 original = result;
          result = new ActionRequestnn100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ActionRequestnn100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.ActionRequestnn100.Descriptor; }
      }
      
      public override ActionRequestnn100 DefaultInstanceForType {
        get { return global::gt_msg.ActionRequestnn100.DefaultInstance; }
      }
      
      public override ActionRequestnn100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ActionRequestnn100) {
          return MergeFrom((ActionRequestnn100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ActionRequestnn100 other) {
        if (other == global::gt_msg.ActionRequestnn100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasPayNumMin) {
          PayNumMin = other.PayNumMin;
        }
        if (other.HasPayNumMax) {
          PayNumMax = other.PayNumMax;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_actionRequestnn100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _actionRequestnn100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasPayNumMin = input.ReadInt64(ref result.payNumMin_);
              break;
            }
            case 24: {
              result.hasPayNumMax = input.ReadInt64(ref result.payNumMax_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.ActionRequestnn100.Types.ActionRequestnn100Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.ActionRequestnn100.Types.ActionRequestnn100Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.ActionRequestnn100.Types.ActionRequestnn100Code.MakeHost;
        return this;
      }
      
      public bool HasPayNumMin {
        get { return result.hasPayNumMin; }
      }
      public long PayNumMin {
        get { return result.PayNumMin; }
        set { SetPayNumMin(value); }
      }
      public Builder SetPayNumMin(long value) {
        PrepareBuilder();
        result.hasPayNumMin = true;
        result.payNumMin_ = value;
        return this;
      }
      public Builder ClearPayNumMin() {
        PrepareBuilder();
        result.hasPayNumMin = false;
        result.payNumMin_ = 0L;
        return this;
      }
      
      public bool HasPayNumMax {
        get { return result.hasPayNumMax; }
      }
      public long PayNumMax {
        get { return result.PayNumMax; }
        set { SetPayNumMax(value); }
      }
      public Builder SetPayNumMax(long value) {
        PrepareBuilder();
        result.hasPayNumMax = true;
        result.payNumMax_ = value;
        return this;
      }
      public Builder ClearPayNumMax() {
        PrepareBuilder();
        result.hasPayNumMax = false;
        result.payNumMax_ = 0L;
        return this;
      }
    }
    static ActionRequestnn100() {
      object.ReferenceEquals(global::gt_msg.GtNn100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ActionResponsenn100 : pb::GeneratedMessage<ActionResponsenn100, ActionResponsenn100.Builder> {
    private ActionResponsenn100() { }
    private static readonly ActionResponsenn100 defaultInstance = new ActionResponsenn100().MakeReadOnly();
    private static readonly string[] _actionResponsenn100FieldNames = new string[] { "MakeHostMoney", "code" };
    private static readonly uint[] _actionResponsenn100FieldTags = new uint[] { 16, 8 };
    public static ActionResponsenn100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ActionResponsenn100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ActionResponsenn100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_ActionResponsenn100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ActionResponsenn100, ActionResponsenn100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_ActionResponsenn100__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum ActionResponsenn100Code {
        OK = 0,
        PlayerNoExist = 1,
        MakeHostNoMoney = 2,
        PlayerFull = 3,
        ActionTypeErr = 4,
        CannotAction = 5,
        Other = 6,
        DropHost = 7,
        DropHostOk = 8,
        IsHost = 9,
        IsInHostList = 10,
        MakeHostOk = 11,
        DropHostWithNoMoney = 12,
        DropHostFromList = 13,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.ActionResponsenn100.Types.ActionResponsenn100Code code_ = global::gt_msg.ActionResponsenn100.Types.ActionResponsenn100Code.OK;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.ActionResponsenn100.Types.ActionResponsenn100Code Code {
      get { return code_; }
    }
    
    public const int MakeHostMoneyFieldNumber = 2;
    private bool hasMakeHostMoney;
    private long makeHostMoney_;
    public bool HasMakeHostMoney {
      get { return hasMakeHostMoney; }
    }
    public long MakeHostMoney {
      get { return makeHostMoney_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _actionResponsenn100FieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[1], (int) Code, Code);
      }
      if (hasMakeHostMoney) {
        output.WriteInt64(2, field_names[0], MakeHostMoney);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasMakeHostMoney) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, MakeHostMoney);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ActionResponsenn100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActionResponsenn100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActionResponsenn100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActionResponsenn100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActionResponsenn100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActionResponsenn100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ActionResponsenn100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ActionResponsenn100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ActionResponsenn100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActionResponsenn100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ActionResponsenn100 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ActionResponsenn100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ActionResponsenn100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ActionResponsenn100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ActionResponsenn100 result;
      
      private ActionResponsenn100 PrepareBuilder() {
        if (resultIsReadOnly) {
          ActionResponsenn100 original = result;
          result = new ActionResponsenn100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ActionResponsenn100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.ActionResponsenn100.Descriptor; }
      }
      
      public override ActionResponsenn100 DefaultInstanceForType {
        get { return global::gt_msg.ActionResponsenn100.DefaultInstance; }
      }
      
      public override ActionResponsenn100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ActionResponsenn100) {
          return MergeFrom((ActionResponsenn100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ActionResponsenn100 other) {
        if (other == global::gt_msg.ActionResponsenn100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasMakeHostMoney) {
          MakeHostMoney = other.MakeHostMoney;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_actionResponsenn100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _actionResponsenn100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasMakeHostMoney = input.ReadInt64(ref result.makeHostMoney_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.ActionResponsenn100.Types.ActionResponsenn100Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.ActionResponsenn100.Types.ActionResponsenn100Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.ActionResponsenn100.Types.ActionResponsenn100Code.OK;
        return this;
      }
      
      public bool HasMakeHostMoney {
        get { return result.hasMakeHostMoney; }
      }
      public long MakeHostMoney {
        get { return result.MakeHostMoney; }
        set { SetMakeHostMoney(value); }
      }
      public Builder SetMakeHostMoney(long value) {
        PrepareBuilder();
        result.hasMakeHostMoney = true;
        result.makeHostMoney_ = value;
        return this;
      }
      public Builder ClearMakeHostMoney() {
        PrepareBuilder();
        result.hasMakeHostMoney = false;
        result.makeHostMoney_ = 0L;
        return this;
      }
    }
    static ActionResponsenn100() {
      object.ReferenceEquals(global::gt_msg.GtNn100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class HandCardnn100 : pb::GeneratedMessage<HandCardnn100, HandCardnn100.Builder> {
    private HandCardnn100() { }
    private static readonly HandCardnn100 defaultInstance = new HandCardnn100().MakeReadOnly();
    private static readonly string[] _handCardnn100FieldNames = new string[] { "CardType", "Cards", "Point", "Rate", "Seat" };
    private static readonly uint[] _handCardnn100FieldTags = new uint[] { 16, 8, 32, 24, 40 };
    public static HandCardnn100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override HandCardnn100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override HandCardnn100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_HandCardnn100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<HandCardnn100, HandCardnn100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_HandCardnn100__FieldAccessorTable; }
    }
    
    public const int CardsFieldNumber = 1;
    private pbc::PopsicleList<int> cards_ = new pbc::PopsicleList<int>();
    public scg::IList<int> CardsList {
      get { return pbc::Lists.AsReadOnly(cards_); }
    }
    public int CardsCount {
      get { return cards_.Count; }
    }
    public int GetCards(int index) {
      return cards_[index];
    }
    
    public const int CardTypeFieldNumber = 2;
    private bool hasCardType;
    private int cardType_;
    public bool HasCardType {
      get { return hasCardType; }
    }
    public int CardType {
      get { return cardType_; }
    }
    
    public const int RateFieldNumber = 3;
    private bool hasRate;
    private int rate_;
    public bool HasRate {
      get { return hasRate; }
    }
    public int Rate {
      get { return rate_; }
    }
    
    public const int PointFieldNumber = 4;
    private bool hasPoint;
    private long point_;
    public bool HasPoint {
      get { return hasPoint; }
    }
    public long Point {
      get { return point_; }
    }
    
    public const int SeatFieldNumber = 5;
    private bool hasSeat;
    private int seat_;
    public bool HasSeat {
      get { return hasSeat; }
    }
    public int Seat {
      get { return seat_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSeat) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _handCardnn100FieldNames;
      if (cards_.Count > 0) {
        output.WriteInt32Array(1, field_names[1], cards_);
      }
      if (hasCardType) {
        output.WriteInt32(2, field_names[0], CardType);
      }
      if (hasRate) {
        output.WriteInt32(3, field_names[3], Rate);
      }
      if (hasPoint) {
        output.WriteInt64(4, field_names[2], Point);
      }
      if (hasSeat) {
        output.WriteInt32(5, field_names[4], Seat);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (int element in CardsList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * cards_.Count;
      }
      if (hasCardType) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, CardType);
      }
      if (hasRate) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Rate);
      }
      if (hasPoint) {
        size += pb::CodedOutputStream.ComputeInt64Size(4, Point);
      }
      if (hasSeat) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, Seat);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static HandCardnn100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HandCardnn100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HandCardnn100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HandCardnn100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HandCardnn100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HandCardnn100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static HandCardnn100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static HandCardnn100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static HandCardnn100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HandCardnn100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private HandCardnn100 MakeReadOnly() {
      cards_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(HandCardnn100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<HandCardnn100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(HandCardnn100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private HandCardnn100 result;
      
      private HandCardnn100 PrepareBuilder() {
        if (resultIsReadOnly) {
          HandCardnn100 original = result;
          result = new HandCardnn100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override HandCardnn100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.HandCardnn100.Descriptor; }
      }
      
      public override HandCardnn100 DefaultInstanceForType {
        get { return global::gt_msg.HandCardnn100.DefaultInstance; }
      }
      
      public override HandCardnn100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is HandCardnn100) {
          return MergeFrom((HandCardnn100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(HandCardnn100 other) {
        if (other == global::gt_msg.HandCardnn100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.cards_.Count != 0) {
          result.cards_.Add(other.cards_);
        }
        if (other.HasCardType) {
          CardType = other.CardType;
        }
        if (other.HasRate) {
          Rate = other.Rate;
        }
        if (other.HasPoint) {
          Point = other.Point;
        }
        if (other.HasSeat) {
          Seat = other.Seat;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_handCardnn100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _handCardnn100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10:
            case 8: {
              input.ReadInt32Array(tag, field_name, result.cards_);
              break;
            }
            case 16: {
              result.hasCardType = input.ReadInt32(ref result.cardType_);
              break;
            }
            case 24: {
              result.hasRate = input.ReadInt32(ref result.rate_);
              break;
            }
            case 32: {
              result.hasPoint = input.ReadInt64(ref result.point_);
              break;
            }
            case 40: {
              result.hasSeat = input.ReadInt32(ref result.seat_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<int> CardsList {
        get { return PrepareBuilder().cards_; }
      }
      public int CardsCount {
        get { return result.CardsCount; }
      }
      public int GetCards(int index) {
        return result.GetCards(index);
      }
      public Builder SetCards(int index, int value) {
        PrepareBuilder();
        result.cards_[index] = value;
        return this;
      }
      public Builder AddCards(int value) {
        PrepareBuilder();
        result.cards_.Add(value);
        return this;
      }
      public Builder AddRangeCards(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.cards_.Add(values);
        return this;
      }
      public Builder ClearCards() {
        PrepareBuilder();
        result.cards_.Clear();
        return this;
      }
      
      public bool HasCardType {
        get { return result.hasCardType; }
      }
      public int CardType {
        get { return result.CardType; }
        set { SetCardType(value); }
      }
      public Builder SetCardType(int value) {
        PrepareBuilder();
        result.hasCardType = true;
        result.cardType_ = value;
        return this;
      }
      public Builder ClearCardType() {
        PrepareBuilder();
        result.hasCardType = false;
        result.cardType_ = 0;
        return this;
      }
      
      public bool HasRate {
        get { return result.hasRate; }
      }
      public int Rate {
        get { return result.Rate; }
        set { SetRate(value); }
      }
      public Builder SetRate(int value) {
        PrepareBuilder();
        result.hasRate = true;
        result.rate_ = value;
        return this;
      }
      public Builder ClearRate() {
        PrepareBuilder();
        result.hasRate = false;
        result.rate_ = 0;
        return this;
      }
      
      public bool HasPoint {
        get { return result.hasPoint; }
      }
      public long Point {
        get { return result.Point; }
        set { SetPoint(value); }
      }
      public Builder SetPoint(long value) {
        PrepareBuilder();
        result.hasPoint = true;
        result.point_ = value;
        return this;
      }
      public Builder ClearPoint() {
        PrepareBuilder();
        result.hasPoint = false;
        result.point_ = 0L;
        return this;
      }
      
      public bool HasSeat {
        get { return result.hasSeat; }
      }
      public int Seat {
        get { return result.Seat; }
        set { SetSeat(value); }
      }
      public Builder SetSeat(int value) {
        PrepareBuilder();
        result.hasSeat = true;
        result.seat_ = value;
        return this;
      }
      public Builder ClearSeat() {
        PrepareBuilder();
        result.hasSeat = false;
        result.seat_ = 0;
        return this;
      }
    }
    static HandCardnn100() {
      object.ReferenceEquals(global::gt_msg.GtNn100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserPaynn100 : pb::GeneratedMessage<UserPaynn100, UserPaynn100.Builder> {
    private UserPaynn100() { }
    private static readonly UserPaynn100 defaultInstance = new UserPaynn100().MakeReadOnly();
    private static readonly string[] _userPaynn100FieldNames = new string[] { "seat", "value" };
    private static readonly uint[] _userPaynn100FieldTags = new uint[] { 8, 16 };
    public static UserPaynn100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserPaynn100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserPaynn100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_UserPaynn100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserPaynn100, UserPaynn100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_UserPaynn100__FieldAccessorTable; }
    }
    
    public const int SeatFieldNumber = 1;
    private bool hasSeat;
    private long seat_;
    public bool HasSeat {
      get { return hasSeat; }
    }
    public long Seat {
      get { return seat_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private long value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public long Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSeat) return false;
        if (!hasValue) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userPaynn100FieldNames;
      if (hasSeat) {
        output.WriteInt64(1, field_names[0], Seat);
      }
      if (hasValue) {
        output.WriteInt64(2, field_names[1], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSeat) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, Seat);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserPaynn100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserPaynn100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserPaynn100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserPaynn100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserPaynn100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserPaynn100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserPaynn100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserPaynn100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserPaynn100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserPaynn100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserPaynn100 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserPaynn100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserPaynn100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserPaynn100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserPaynn100 result;
      
      private UserPaynn100 PrepareBuilder() {
        if (resultIsReadOnly) {
          UserPaynn100 original = result;
          result = new UserPaynn100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserPaynn100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.UserPaynn100.Descriptor; }
      }
      
      public override UserPaynn100 DefaultInstanceForType {
        get { return global::gt_msg.UserPaynn100.DefaultInstance; }
      }
      
      public override UserPaynn100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserPaynn100) {
          return MergeFrom((UserPaynn100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserPaynn100 other) {
        if (other == global::gt_msg.UserPaynn100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSeat) {
          Seat = other.Seat;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userPaynn100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userPaynn100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSeat = input.ReadInt64(ref result.seat_);
              break;
            }
            case 16: {
              result.hasValue = input.ReadInt64(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSeat {
        get { return result.hasSeat; }
      }
      public long Seat {
        get { return result.Seat; }
        set { SetSeat(value); }
      }
      public Builder SetSeat(long value) {
        PrepareBuilder();
        result.hasSeat = true;
        result.seat_ = value;
        return this;
      }
      public Builder ClearSeat() {
        PrepareBuilder();
        result.hasSeat = false;
        result.seat_ = 0L;
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public long Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(long value) {
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = 0L;
        return this;
      }
    }
    static UserPaynn100() {
      object.ReferenceEquals(global::gt_msg.GtNn100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableUserStatsnn100 : pb::GeneratedMessage<TableUserStatsnn100, TableUserStatsnn100.Builder> {
    private TableUserStatsnn100() { }
    private static readonly TableUserStatsnn100 defaultInstance = new TableUserStatsnn100().MakeReadOnly();
    private static readonly string[] _tableUserStatsnn100FieldNames = new string[] { "NewActionList", "PointOnSeat", "user_info" };
    private static readonly uint[] _tableUserStatsnn100FieldTags = new uint[] { 26, 18, 10 };
    public static TableUserStatsnn100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableUserStatsnn100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableUserStatsnn100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_TableUserStatsnn100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableUserStatsnn100, TableUserStatsnn100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_TableUserStatsnn100__FieldAccessorTable; }
    }
    
    public const int UserInfoFieldNumber = 1;
    private bool hasUserInfo;
    private global::gt_msg.User userInfo_;
    public bool HasUserInfo {
      get { return hasUserInfo; }
    }
    public global::gt_msg.User UserInfo {
      get { return userInfo_ ?? global::gt_msg.User.DefaultInstance; }
    }
    
    public const int PointOnSeatFieldNumber = 2;
    private pbc::PopsicleList<global::gt_msg.UserPaynn100> pointOnSeat_ = new pbc::PopsicleList<global::gt_msg.UserPaynn100>();
    public scg::IList<global::gt_msg.UserPaynn100> PointOnSeatList {
      get { return pointOnSeat_; }
    }
    public int PointOnSeatCount {
      get { return pointOnSeat_.Count; }
    }
    public global::gt_msg.UserPaynn100 GetPointOnSeat(int index) {
      return pointOnSeat_[index];
    }
    
    public const int NewActionListFieldNumber = 3;
    private pbc::PopsicleList<global::gt_msg.ActionRequestnn100> newActionList_ = new pbc::PopsicleList<global::gt_msg.ActionRequestnn100>();
    public scg::IList<global::gt_msg.ActionRequestnn100> NewActionListList {
      get { return newActionList_; }
    }
    public int NewActionListCount {
      get { return newActionList_.Count; }
    }
    public global::gt_msg.ActionRequestnn100 GetNewActionList(int index) {
      return newActionList_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserInfo) return false;
        if (!UserInfo.IsInitialized) return false;
        foreach (global::gt_msg.UserPaynn100 element in PointOnSeatList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::gt_msg.ActionRequestnn100 element in NewActionListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tableUserStatsnn100FieldNames;
      if (hasUserInfo) {
        output.WriteMessage(1, field_names[2], UserInfo);
      }
      if (pointOnSeat_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], pointOnSeat_);
      }
      if (newActionList_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], newActionList_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserInfo) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, UserInfo);
      }
      foreach (global::gt_msg.UserPaynn100 element in PointOnSeatList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      foreach (global::gt_msg.ActionRequestnn100 element in NewActionListList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TableUserStatsnn100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableUserStatsnn100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableUserStatsnn100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableUserStatsnn100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableUserStatsnn100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableUserStatsnn100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableUserStatsnn100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableUserStatsnn100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableUserStatsnn100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableUserStatsnn100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableUserStatsnn100 MakeReadOnly() {
      pointOnSeat_.MakeReadOnly();
      newActionList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableUserStatsnn100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableUserStatsnn100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableUserStatsnn100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableUserStatsnn100 result;
      
      private TableUserStatsnn100 PrepareBuilder() {
        if (resultIsReadOnly) {
          TableUserStatsnn100 original = result;
          result = new TableUserStatsnn100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableUserStatsnn100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.TableUserStatsnn100.Descriptor; }
      }
      
      public override TableUserStatsnn100 DefaultInstanceForType {
        get { return global::gt_msg.TableUserStatsnn100.DefaultInstance; }
      }
      
      public override TableUserStatsnn100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableUserStatsnn100) {
          return MergeFrom((TableUserStatsnn100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableUserStatsnn100 other) {
        if (other == global::gt_msg.TableUserStatsnn100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserInfo) {
          MergeUserInfo(other.UserInfo);
        }
        if (other.pointOnSeat_.Count != 0) {
          result.pointOnSeat_.Add(other.pointOnSeat_);
        }
        if (other.newActionList_.Count != 0) {
          result.newActionList_.Add(other.newActionList_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableUserStatsnn100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableUserStatsnn100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::gt_msg.User.Builder subBuilder = global::gt_msg.User.CreateBuilder();
              if (result.hasUserInfo) {
                subBuilder.MergeFrom(UserInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserInfo = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.pointOnSeat_, global::gt_msg.UserPaynn100.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.newActionList_, global::gt_msg.ActionRequestnn100.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserInfo {
       get { return result.hasUserInfo; }
      }
      public global::gt_msg.User UserInfo {
        get { return result.UserInfo; }
        set { SetUserInfo(value); }
      }
      public Builder SetUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = value;
        return this;
      }
      public Builder SetUserInfo(global::gt_msg.User.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserInfo &&
            result.userInfo_ != global::gt_msg.User.DefaultInstance) {
            result.userInfo_ = global::gt_msg.User.CreateBuilder(result.userInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.userInfo_ = value;
        }
        result.hasUserInfo = true;
        return this;
      }
      public Builder ClearUserInfo() {
        PrepareBuilder();
        result.hasUserInfo = false;
        result.userInfo_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::gt_msg.UserPaynn100> PointOnSeatList {
        get { return PrepareBuilder().pointOnSeat_; }
      }
      public int PointOnSeatCount {
        get { return result.PointOnSeatCount; }
      }
      public global::gt_msg.UserPaynn100 GetPointOnSeat(int index) {
        return result.GetPointOnSeat(index);
      }
      public Builder SetPointOnSeat(int index, global::gt_msg.UserPaynn100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.pointOnSeat_[index] = value;
        return this;
      }
      public Builder SetPointOnSeat(int index, global::gt_msg.UserPaynn100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.pointOnSeat_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPointOnSeat(global::gt_msg.UserPaynn100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.pointOnSeat_.Add(value);
        return this;
      }
      public Builder AddPointOnSeat(global::gt_msg.UserPaynn100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.pointOnSeat_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePointOnSeat(scg::IEnumerable<global::gt_msg.UserPaynn100> values) {
        PrepareBuilder();
        result.pointOnSeat_.Add(values);
        return this;
      }
      public Builder ClearPointOnSeat() {
        PrepareBuilder();
        result.pointOnSeat_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::gt_msg.ActionRequestnn100> NewActionListList {
        get { return PrepareBuilder().newActionList_; }
      }
      public int NewActionListCount {
        get { return result.NewActionListCount; }
      }
      public global::gt_msg.ActionRequestnn100 GetNewActionList(int index) {
        return result.GetNewActionList(index);
      }
      public Builder SetNewActionList(int index, global::gt_msg.ActionRequestnn100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.newActionList_[index] = value;
        return this;
      }
      public Builder SetNewActionList(int index, global::gt_msg.ActionRequestnn100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.newActionList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddNewActionList(global::gt_msg.ActionRequestnn100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.newActionList_.Add(value);
        return this;
      }
      public Builder AddNewActionList(global::gt_msg.ActionRequestnn100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.newActionList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeNewActionList(scg::IEnumerable<global::gt_msg.ActionRequestnn100> values) {
        PrepareBuilder();
        result.newActionList_.Add(values);
        return this;
      }
      public Builder ClearNewActionList() {
        PrepareBuilder();
        result.newActionList_.Clear();
        return this;
      }
    }
    static TableUserStatsnn100() {
      object.ReferenceEquals(global::gt_msg.GtNn100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableStatsnn100 : pb::GeneratedMessage<TableStatsnn100, TableStatsnn100.Builder> {
    private TableStatsnn100() { }
    private static readonly TableStatsnn100 defaultInstance = new TableStatsnn100().MakeReadOnly();
    private static readonly string[] _tableStatsnn100FieldNames = new string[] { "HC", "HistoryLW", "Host", "HostHpUp", "MakeHostList", "NextActionTimeOut", "PointOnSeat", "Rank", "Rule", "Stage", "Step", "TableID", "UserSelf" };
    private static readonly uint[] _tableStatsnn100FieldTags = new uint[] { 106, 80, 66, 72, 90, 40, 98, 24, 32, 16, 48, 8, 58 };
    public static TableStatsnn100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableStatsnn100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableStatsnn100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_TableStatsnn100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableStatsnn100, TableStatsnn100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_TableStatsnn100__FieldAccessorTable; }
    }
    
    public const int TableIDFieldNumber = 1;
    private bool hasTableID;
    private int tableID_;
    public bool HasTableID {
      get { return hasTableID; }
    }
    public int TableID {
      get { return tableID_; }
    }
    
    public const int StageFieldNumber = 2;
    private bool hasStage;
    private int stage_;
    public bool HasStage {
      get { return hasStage; }
    }
    public int Stage {
      get { return stage_; }
    }
    
    public const int RankFieldNumber = 3;
    private bool hasRank;
    private global::gt_msg.Rank rank_ = global::gt_msg.Rank.LV0;
    public bool HasRank {
      get { return hasRank; }
    }
    public global::gt_msg.Rank Rank {
      get { return rank_; }
    }
    
    public const int RuleFieldNumber = 4;
    private bool hasRule;
    private global::gt_msg.Rule rule_ = global::gt_msg.Rule.RuleNormal;
    public bool HasRule {
      get { return hasRule; }
    }
    public global::gt_msg.Rule Rule {
      get { return rule_; }
    }
    
    public const int NextActionTimeOutFieldNumber = 5;
    private bool hasNextActionTimeOut;
    private int nextActionTimeOut_;
    public bool HasNextActionTimeOut {
      get { return hasNextActionTimeOut; }
    }
    public int NextActionTimeOut {
      get { return nextActionTimeOut_; }
    }
    
    public const int StepFieldNumber = 6;
    private bool hasStep;
    private int step_;
    public bool HasStep {
      get { return hasStep; }
    }
    public int Step {
      get { return step_; }
    }
    
    public const int UserSelfFieldNumber = 7;
    private bool hasUserSelf;
    private global::gt_msg.TableUserStatsnn100 userSelf_;
    public bool HasUserSelf {
      get { return hasUserSelf; }
    }
    public global::gt_msg.TableUserStatsnn100 UserSelf {
      get { return userSelf_ ?? global::gt_msg.TableUserStatsnn100.DefaultInstance; }
    }
    
    public const int HostFieldNumber = 8;
    private bool hasHost;
    private global::gt_msg.User host_;
    public bool HasHost {
      get { return hasHost; }
    }
    public global::gt_msg.User Host {
      get { return host_ ?? global::gt_msg.User.DefaultInstance; }
    }
    
    public const int HostHpUpFieldNumber = 9;
    private bool hasHostHpUp;
    private int hostHpUp_;
    public bool HasHostHpUp {
      get { return hasHostHpUp; }
    }
    public int HostHpUp {
      get { return hostHpUp_; }
    }
    
    public const int HistoryLWFieldNumber = 10;
    private pbc::PopsicleList<int> historyLW_ = new pbc::PopsicleList<int>();
    public scg::IList<int> HistoryLWList {
      get { return pbc::Lists.AsReadOnly(historyLW_); }
    }
    public int HistoryLWCount {
      get { return historyLW_.Count; }
    }
    public int GetHistoryLW(int index) {
      return historyLW_[index];
    }
    
    public const int MakeHostListFieldNumber = 11;
    private pbc::PopsicleList<string> makeHostList_ = new pbc::PopsicleList<string>();
    public scg::IList<string> MakeHostListList {
      get { return pbc::Lists.AsReadOnly(makeHostList_); }
    }
    public int MakeHostListCount {
      get { return makeHostList_.Count; }
    }
    public string GetMakeHostList(int index) {
      return makeHostList_[index];
    }
    
    public const int PointOnSeatFieldNumber = 12;
    private pbc::PopsicleList<global::gt_msg.UserPaynn100> pointOnSeat_ = new pbc::PopsicleList<global::gt_msg.UserPaynn100>();
    public scg::IList<global::gt_msg.UserPaynn100> PointOnSeatList {
      get { return pointOnSeat_; }
    }
    public int PointOnSeatCount {
      get { return pointOnSeat_.Count; }
    }
    public global::gt_msg.UserPaynn100 GetPointOnSeat(int index) {
      return pointOnSeat_[index];
    }
    
    public const int HCFieldNumber = 13;
    private pbc::PopsicleList<global::gt_msg.HandCardnn100> hC_ = new pbc::PopsicleList<global::gt_msg.HandCardnn100>();
    public scg::IList<global::gt_msg.HandCardnn100> HCList {
      get { return hC_; }
    }
    public int HCCount {
      get { return hC_.Count; }
    }
    public global::gt_msg.HandCardnn100 GetHC(int index) {
      return hC_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableID) return false;
        if (!hasStage) return false;
        if (!hasRank) return false;
        if (!hasRule) return false;
        if (!hasNextActionTimeOut) return false;
        if (!hasStep) return false;
        if (HasUserSelf) {
          if (!UserSelf.IsInitialized) return false;
        }
        if (HasHost) {
          if (!Host.IsInitialized) return false;
        }
        foreach (global::gt_msg.UserPaynn100 element in PointOnSeatList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::gt_msg.HandCardnn100 element in HCList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tableStatsnn100FieldNames;
      if (hasTableID) {
        output.WriteInt32(1, field_names[11], TableID);
      }
      if (hasStage) {
        output.WriteInt32(2, field_names[9], Stage);
      }
      if (hasRank) {
        output.WriteEnum(3, field_names[7], (int) Rank, Rank);
      }
      if (hasRule) {
        output.WriteEnum(4, field_names[8], (int) Rule, Rule);
      }
      if (hasNextActionTimeOut) {
        output.WriteInt32(5, field_names[5], NextActionTimeOut);
      }
      if (hasStep) {
        output.WriteInt32(6, field_names[10], Step);
      }
      if (hasUserSelf) {
        output.WriteMessage(7, field_names[12], UserSelf);
      }
      if (hasHost) {
        output.WriteMessage(8, field_names[2], Host);
      }
      if (hasHostHpUp) {
        output.WriteInt32(9, field_names[3], HostHpUp);
      }
      if (historyLW_.Count > 0) {
        output.WriteInt32Array(10, field_names[1], historyLW_);
      }
      if (makeHostList_.Count > 0) {
        output.WriteStringArray(11, field_names[4], makeHostList_);
      }
      if (pointOnSeat_.Count > 0) {
        output.WriteMessageArray(12, field_names[6], pointOnSeat_);
      }
      if (hC_.Count > 0) {
        output.WriteMessageArray(13, field_names[0], hC_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableID) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, TableID);
      }
      if (hasStage) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Stage);
      }
      if (hasRank) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Rank);
      }
      if (hasRule) {
        size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Rule);
      }
      if (hasNextActionTimeOut) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, NextActionTimeOut);
      }
      if (hasStep) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, Step);
      }
      if (hasUserSelf) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, UserSelf);
      }
      if (hasHost) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, Host);
      }
      if (hasHostHpUp) {
        size += pb::CodedOutputStream.ComputeInt32Size(9, HostHpUp);
      }
      {
        int dataSize = 0;
        foreach (int element in HistoryLWList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * historyLW_.Count;
      }
      {
        int dataSize = 0;
        foreach (string element in MakeHostListList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * makeHostList_.Count;
      }
      foreach (global::gt_msg.UserPaynn100 element in PointOnSeatList) {
        size += pb::CodedOutputStream.ComputeMessageSize(12, element);
      }
      foreach (global::gt_msg.HandCardnn100 element in HCList) {
        size += pb::CodedOutputStream.ComputeMessageSize(13, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TableStatsnn100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableStatsnn100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableStatsnn100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableStatsnn100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableStatsnn100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableStatsnn100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableStatsnn100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableStatsnn100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableStatsnn100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableStatsnn100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableStatsnn100 MakeReadOnly() {
      historyLW_.MakeReadOnly();
      makeHostList_.MakeReadOnly();
      pointOnSeat_.MakeReadOnly();
      hC_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableStatsnn100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableStatsnn100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableStatsnn100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableStatsnn100 result;
      
      private TableStatsnn100 PrepareBuilder() {
        if (resultIsReadOnly) {
          TableStatsnn100 original = result;
          result = new TableStatsnn100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableStatsnn100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.TableStatsnn100.Descriptor; }
      }
      
      public override TableStatsnn100 DefaultInstanceForType {
        get { return global::gt_msg.TableStatsnn100.DefaultInstance; }
      }
      
      public override TableStatsnn100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableStatsnn100) {
          return MergeFrom((TableStatsnn100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableStatsnn100 other) {
        if (other == global::gt_msg.TableStatsnn100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableID) {
          TableID = other.TableID;
        }
        if (other.HasStage) {
          Stage = other.Stage;
        }
        if (other.HasRank) {
          Rank = other.Rank;
        }
        if (other.HasRule) {
          Rule = other.Rule;
        }
        if (other.HasNextActionTimeOut) {
          NextActionTimeOut = other.NextActionTimeOut;
        }
        if (other.HasStep) {
          Step = other.Step;
        }
        if (other.HasUserSelf) {
          MergeUserSelf(other.UserSelf);
        }
        if (other.HasHost) {
          MergeHost(other.Host);
        }
        if (other.HasHostHpUp) {
          HostHpUp = other.HostHpUp;
        }
        if (other.historyLW_.Count != 0) {
          result.historyLW_.Add(other.historyLW_);
        }
        if (other.makeHostList_.Count != 0) {
          result.makeHostList_.Add(other.makeHostList_);
        }
        if (other.pointOnSeat_.Count != 0) {
          result.pointOnSeat_.Add(other.pointOnSeat_);
        }
        if (other.hC_.Count != 0) {
          result.hC_.Add(other.hC_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableStatsnn100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableStatsnn100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTableID = input.ReadInt32(ref result.tableID_);
              break;
            }
            case 16: {
              result.hasStage = input.ReadInt32(ref result.stage_);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.rank_, out unknown)) {
                result.hasRank = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.rule_, out unknown)) {
                result.hasRule = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
            case 40: {
              result.hasNextActionTimeOut = input.ReadInt32(ref result.nextActionTimeOut_);
              break;
            }
            case 48: {
              result.hasStep = input.ReadInt32(ref result.step_);
              break;
            }
            case 58: {
              global::gt_msg.TableUserStatsnn100.Builder subBuilder = global::gt_msg.TableUserStatsnn100.CreateBuilder();
              if (result.hasUserSelf) {
                subBuilder.MergeFrom(UserSelf);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserSelf = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              global::gt_msg.User.Builder subBuilder = global::gt_msg.User.CreateBuilder();
              if (result.hasHost) {
                subBuilder.MergeFrom(Host);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Host = subBuilder.BuildPartial();
              break;
            }
            case 72: {
              result.hasHostHpUp = input.ReadInt32(ref result.hostHpUp_);
              break;
            }
            case 82:
            case 80: {
              input.ReadInt32Array(tag, field_name, result.historyLW_);
              break;
            }
            case 90: {
              input.ReadStringArray(tag, field_name, result.makeHostList_);
              break;
            }
            case 98: {
              input.ReadMessageArray(tag, field_name, result.pointOnSeat_, global::gt_msg.UserPaynn100.DefaultInstance, extensionRegistry);
              break;
            }
            case 106: {
              input.ReadMessageArray(tag, field_name, result.hC_, global::gt_msg.HandCardnn100.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableID {
        get { return result.hasTableID; }
      }
      public int TableID {
        get { return result.TableID; }
        set { SetTableID(value); }
      }
      public Builder SetTableID(int value) {
        PrepareBuilder();
        result.hasTableID = true;
        result.tableID_ = value;
        return this;
      }
      public Builder ClearTableID() {
        PrepareBuilder();
        result.hasTableID = false;
        result.tableID_ = 0;
        return this;
      }
      
      public bool HasStage {
        get { return result.hasStage; }
      }
      public int Stage {
        get { return result.Stage; }
        set { SetStage(value); }
      }
      public Builder SetStage(int value) {
        PrepareBuilder();
        result.hasStage = true;
        result.stage_ = value;
        return this;
      }
      public Builder ClearStage() {
        PrepareBuilder();
        result.hasStage = false;
        result.stage_ = 0;
        return this;
      }
      
      public bool HasRank {
       get { return result.hasRank; }
      }
      public global::gt_msg.Rank Rank {
        get { return result.Rank; }
        set { SetRank(value); }
      }
      public Builder SetRank(global::gt_msg.Rank value) {
        PrepareBuilder();
        result.hasRank = true;
        result.rank_ = value;
        return this;
      }
      public Builder ClearRank() {
        PrepareBuilder();
        result.hasRank = false;
        result.rank_ = global::gt_msg.Rank.LV0;
        return this;
      }
      
      public bool HasRule {
       get { return result.hasRule; }
      }
      public global::gt_msg.Rule Rule {
        get { return result.Rule; }
        set { SetRule(value); }
      }
      public Builder SetRule(global::gt_msg.Rule value) {
        PrepareBuilder();
        result.hasRule = true;
        result.rule_ = value;
        return this;
      }
      public Builder ClearRule() {
        PrepareBuilder();
        result.hasRule = false;
        result.rule_ = global::gt_msg.Rule.RuleNormal;
        return this;
      }
      
      public bool HasNextActionTimeOut {
        get { return result.hasNextActionTimeOut; }
      }
      public int NextActionTimeOut {
        get { return result.NextActionTimeOut; }
        set { SetNextActionTimeOut(value); }
      }
      public Builder SetNextActionTimeOut(int value) {
        PrepareBuilder();
        result.hasNextActionTimeOut = true;
        result.nextActionTimeOut_ = value;
        return this;
      }
      public Builder ClearNextActionTimeOut() {
        PrepareBuilder();
        result.hasNextActionTimeOut = false;
        result.nextActionTimeOut_ = 0;
        return this;
      }
      
      public bool HasStep {
        get { return result.hasStep; }
      }
      public int Step {
        get { return result.Step; }
        set { SetStep(value); }
      }
      public Builder SetStep(int value) {
        PrepareBuilder();
        result.hasStep = true;
        result.step_ = value;
        return this;
      }
      public Builder ClearStep() {
        PrepareBuilder();
        result.hasStep = false;
        result.step_ = 0;
        return this;
      }
      
      public bool HasUserSelf {
       get { return result.hasUserSelf; }
      }
      public global::gt_msg.TableUserStatsnn100 UserSelf {
        get { return result.UserSelf; }
        set { SetUserSelf(value); }
      }
      public Builder SetUserSelf(global::gt_msg.TableUserStatsnn100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserSelf = true;
        result.userSelf_ = value;
        return this;
      }
      public Builder SetUserSelf(global::gt_msg.TableUserStatsnn100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserSelf = true;
        result.userSelf_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserSelf(global::gt_msg.TableUserStatsnn100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserSelf &&
            result.userSelf_ != global::gt_msg.TableUserStatsnn100.DefaultInstance) {
            result.userSelf_ = global::gt_msg.TableUserStatsnn100.CreateBuilder(result.userSelf_).MergeFrom(value).BuildPartial();
        } else {
          result.userSelf_ = value;
        }
        result.hasUserSelf = true;
        return this;
      }
      public Builder ClearUserSelf() {
        PrepareBuilder();
        result.hasUserSelf = false;
        result.userSelf_ = null;
        return this;
      }
      
      public bool HasHost {
       get { return result.hasHost; }
      }
      public global::gt_msg.User Host {
        get { return result.Host; }
        set { SetHost(value); }
      }
      public Builder SetHost(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder SetHost(global::gt_msg.User.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasHost = true;
        result.host_ = builderForValue.Build();
        return this;
      }
      public Builder MergeHost(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasHost &&
            result.host_ != global::gt_msg.User.DefaultInstance) {
            result.host_ = global::gt_msg.User.CreateBuilder(result.host_).MergeFrom(value).BuildPartial();
        } else {
          result.host_ = value;
        }
        result.hasHost = true;
        return this;
      }
      public Builder ClearHost() {
        PrepareBuilder();
        result.hasHost = false;
        result.host_ = null;
        return this;
      }
      
      public bool HasHostHpUp {
        get { return result.hasHostHpUp; }
      }
      public int HostHpUp {
        get { return result.HostHpUp; }
        set { SetHostHpUp(value); }
      }
      public Builder SetHostHpUp(int value) {
        PrepareBuilder();
        result.hasHostHpUp = true;
        result.hostHpUp_ = value;
        return this;
      }
      public Builder ClearHostHpUp() {
        PrepareBuilder();
        result.hasHostHpUp = false;
        result.hostHpUp_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<int> HistoryLWList {
        get { return PrepareBuilder().historyLW_; }
      }
      public int HistoryLWCount {
        get { return result.HistoryLWCount; }
      }
      public int GetHistoryLW(int index) {
        return result.GetHistoryLW(index);
      }
      public Builder SetHistoryLW(int index, int value) {
        PrepareBuilder();
        result.historyLW_[index] = value;
        return this;
      }
      public Builder AddHistoryLW(int value) {
        PrepareBuilder();
        result.historyLW_.Add(value);
        return this;
      }
      public Builder AddRangeHistoryLW(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.historyLW_.Add(values);
        return this;
      }
      public Builder ClearHistoryLW() {
        PrepareBuilder();
        result.historyLW_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> MakeHostListList {
        get { return PrepareBuilder().makeHostList_; }
      }
      public int MakeHostListCount {
        get { return result.MakeHostListCount; }
      }
      public string GetMakeHostList(int index) {
        return result.GetMakeHostList(index);
      }
      public Builder SetMakeHostList(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.makeHostList_[index] = value;
        return this;
      }
      public Builder AddMakeHostList(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.makeHostList_.Add(value);
        return this;
      }
      public Builder AddRangeMakeHostList(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.makeHostList_.Add(values);
        return this;
      }
      public Builder ClearMakeHostList() {
        PrepareBuilder();
        result.makeHostList_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::gt_msg.UserPaynn100> PointOnSeatList {
        get { return PrepareBuilder().pointOnSeat_; }
      }
      public int PointOnSeatCount {
        get { return result.PointOnSeatCount; }
      }
      public global::gt_msg.UserPaynn100 GetPointOnSeat(int index) {
        return result.GetPointOnSeat(index);
      }
      public Builder SetPointOnSeat(int index, global::gt_msg.UserPaynn100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.pointOnSeat_[index] = value;
        return this;
      }
      public Builder SetPointOnSeat(int index, global::gt_msg.UserPaynn100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.pointOnSeat_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPointOnSeat(global::gt_msg.UserPaynn100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.pointOnSeat_.Add(value);
        return this;
      }
      public Builder AddPointOnSeat(global::gt_msg.UserPaynn100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.pointOnSeat_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePointOnSeat(scg::IEnumerable<global::gt_msg.UserPaynn100> values) {
        PrepareBuilder();
        result.pointOnSeat_.Add(values);
        return this;
      }
      public Builder ClearPointOnSeat() {
        PrepareBuilder();
        result.pointOnSeat_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::gt_msg.HandCardnn100> HCList {
        get { return PrepareBuilder().hC_; }
      }
      public int HCCount {
        get { return result.HCCount; }
      }
      public global::gt_msg.HandCardnn100 GetHC(int index) {
        return result.GetHC(index);
      }
      public Builder SetHC(int index, global::gt_msg.HandCardnn100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hC_[index] = value;
        return this;
      }
      public Builder SetHC(int index, global::gt_msg.HandCardnn100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hC_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddHC(global::gt_msg.HandCardnn100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hC_.Add(value);
        return this;
      }
      public Builder AddHC(global::gt_msg.HandCardnn100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hC_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeHC(scg::IEnumerable<global::gt_msg.HandCardnn100> values) {
        PrepareBuilder();
        result.hC_.Add(values);
        return this;
      }
      public Builder ClearHC() {
        PrepareBuilder();
        result.hC_.Clear();
        return this;
      }
    }
    static TableStatsnn100() {
      object.ReferenceEquals(global::gt_msg.GtNn100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableUserResultnn100 : pb::GeneratedMessage<TableUserResultnn100, TableUserResultnn100.Builder> {
    private TableUserResultnn100() { }
    private static readonly TableUserResultnn100 defaultInstance = new TableUserResultnn100().MakeReadOnly();
    private static readonly string[] _tableUserResultnn100FieldNames = new string[] { "ContinueWin", "LWOnSeat", "PointOnSeat", "TAX", "user_info" };
    private static readonly uint[] _tableUserResultnn100FieldTags = new uint[] { 40, 26, 18, 32, 10 };
    public static TableUserResultnn100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableUserResultnn100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableUserResultnn100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_TableUserResultnn100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableUserResultnn100, TableUserResultnn100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_TableUserResultnn100__FieldAccessorTable; }
    }
    
    public const int UserInfoFieldNumber = 1;
    private bool hasUserInfo;
    private global::gt_msg.User userInfo_;
    public bool HasUserInfo {
      get { return hasUserInfo; }
    }
    public global::gt_msg.User UserInfo {
      get { return userInfo_ ?? global::gt_msg.User.DefaultInstance; }
    }
    
    public const int PointOnSeatFieldNumber = 2;
    private pbc::PopsicleList<global::gt_msg.UserPaynn100> pointOnSeat_ = new pbc::PopsicleList<global::gt_msg.UserPaynn100>();
    public scg::IList<global::gt_msg.UserPaynn100> PointOnSeatList {
      get { return pointOnSeat_; }
    }
    public int PointOnSeatCount {
      get { return pointOnSeat_.Count; }
    }
    public global::gt_msg.UserPaynn100 GetPointOnSeat(int index) {
      return pointOnSeat_[index];
    }
    
    public const int LWOnSeatFieldNumber = 3;
    private pbc::PopsicleList<global::gt_msg.UserPaynn100> lWOnSeat_ = new pbc::PopsicleList<global::gt_msg.UserPaynn100>();
    public scg::IList<global::gt_msg.UserPaynn100> LWOnSeatList {
      get { return lWOnSeat_; }
    }
    public int LWOnSeatCount {
      get { return lWOnSeat_.Count; }
    }
    public global::gt_msg.UserPaynn100 GetLWOnSeat(int index) {
      return lWOnSeat_[index];
    }
    
    public const int TAXFieldNumber = 4;
    private bool hasTAX;
    private long tAX_;
    public bool HasTAX {
      get { return hasTAX; }
    }
    public long TAX {
      get { return tAX_; }
    }
    
    public const int ContinueWinFieldNumber = 5;
    private bool hasContinueWin;
    private int continueWin_;
    public bool HasContinueWin {
      get { return hasContinueWin; }
    }
    public int ContinueWin {
      get { return continueWin_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserInfo) return false;
        if (!UserInfo.IsInitialized) return false;
        foreach (global::gt_msg.UserPaynn100 element in PointOnSeatList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::gt_msg.UserPaynn100 element in LWOnSeatList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tableUserResultnn100FieldNames;
      if (hasUserInfo) {
        output.WriteMessage(1, field_names[4], UserInfo);
      }
      if (pointOnSeat_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], pointOnSeat_);
      }
      if (lWOnSeat_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], lWOnSeat_);
      }
      if (hasTAX) {
        output.WriteInt64(4, field_names[3], TAX);
      }
      if (hasContinueWin) {
        output.WriteInt32(5, field_names[0], ContinueWin);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserInfo) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, UserInfo);
      }
      foreach (global::gt_msg.UserPaynn100 element in PointOnSeatList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      foreach (global::gt_msg.UserPaynn100 element in LWOnSeatList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      if (hasTAX) {
        size += pb::CodedOutputStream.ComputeInt64Size(4, TAX);
      }
      if (hasContinueWin) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, ContinueWin);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TableUserResultnn100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableUserResultnn100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableUserResultnn100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableUserResultnn100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableUserResultnn100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableUserResultnn100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableUserResultnn100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableUserResultnn100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableUserResultnn100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableUserResultnn100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableUserResultnn100 MakeReadOnly() {
      pointOnSeat_.MakeReadOnly();
      lWOnSeat_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableUserResultnn100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableUserResultnn100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableUserResultnn100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableUserResultnn100 result;
      
      private TableUserResultnn100 PrepareBuilder() {
        if (resultIsReadOnly) {
          TableUserResultnn100 original = result;
          result = new TableUserResultnn100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableUserResultnn100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.TableUserResultnn100.Descriptor; }
      }
      
      public override TableUserResultnn100 DefaultInstanceForType {
        get { return global::gt_msg.TableUserResultnn100.DefaultInstance; }
      }
      
      public override TableUserResultnn100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableUserResultnn100) {
          return MergeFrom((TableUserResultnn100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableUserResultnn100 other) {
        if (other == global::gt_msg.TableUserResultnn100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserInfo) {
          MergeUserInfo(other.UserInfo);
        }
        if (other.pointOnSeat_.Count != 0) {
          result.pointOnSeat_.Add(other.pointOnSeat_);
        }
        if (other.lWOnSeat_.Count != 0) {
          result.lWOnSeat_.Add(other.lWOnSeat_);
        }
        if (other.HasTAX) {
          TAX = other.TAX;
        }
        if (other.HasContinueWin) {
          ContinueWin = other.ContinueWin;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableUserResultnn100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableUserResultnn100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::gt_msg.User.Builder subBuilder = global::gt_msg.User.CreateBuilder();
              if (result.hasUserInfo) {
                subBuilder.MergeFrom(UserInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserInfo = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.pointOnSeat_, global::gt_msg.UserPaynn100.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.lWOnSeat_, global::gt_msg.UserPaynn100.DefaultInstance, extensionRegistry);
              break;
            }
            case 32: {
              result.hasTAX = input.ReadInt64(ref result.tAX_);
              break;
            }
            case 40: {
              result.hasContinueWin = input.ReadInt32(ref result.continueWin_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserInfo {
       get { return result.hasUserInfo; }
      }
      public global::gt_msg.User UserInfo {
        get { return result.UserInfo; }
        set { SetUserInfo(value); }
      }
      public Builder SetUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = value;
        return this;
      }
      public Builder SetUserInfo(global::gt_msg.User.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserInfo &&
            result.userInfo_ != global::gt_msg.User.DefaultInstance) {
            result.userInfo_ = global::gt_msg.User.CreateBuilder(result.userInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.userInfo_ = value;
        }
        result.hasUserInfo = true;
        return this;
      }
      public Builder ClearUserInfo() {
        PrepareBuilder();
        result.hasUserInfo = false;
        result.userInfo_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::gt_msg.UserPaynn100> PointOnSeatList {
        get { return PrepareBuilder().pointOnSeat_; }
      }
      public int PointOnSeatCount {
        get { return result.PointOnSeatCount; }
      }
      public global::gt_msg.UserPaynn100 GetPointOnSeat(int index) {
        return result.GetPointOnSeat(index);
      }
      public Builder SetPointOnSeat(int index, global::gt_msg.UserPaynn100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.pointOnSeat_[index] = value;
        return this;
      }
      public Builder SetPointOnSeat(int index, global::gt_msg.UserPaynn100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.pointOnSeat_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPointOnSeat(global::gt_msg.UserPaynn100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.pointOnSeat_.Add(value);
        return this;
      }
      public Builder AddPointOnSeat(global::gt_msg.UserPaynn100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.pointOnSeat_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePointOnSeat(scg::IEnumerable<global::gt_msg.UserPaynn100> values) {
        PrepareBuilder();
        result.pointOnSeat_.Add(values);
        return this;
      }
      public Builder ClearPointOnSeat() {
        PrepareBuilder();
        result.pointOnSeat_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::gt_msg.UserPaynn100> LWOnSeatList {
        get { return PrepareBuilder().lWOnSeat_; }
      }
      public int LWOnSeatCount {
        get { return result.LWOnSeatCount; }
      }
      public global::gt_msg.UserPaynn100 GetLWOnSeat(int index) {
        return result.GetLWOnSeat(index);
      }
      public Builder SetLWOnSeat(int index, global::gt_msg.UserPaynn100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.lWOnSeat_[index] = value;
        return this;
      }
      public Builder SetLWOnSeat(int index, global::gt_msg.UserPaynn100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.lWOnSeat_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLWOnSeat(global::gt_msg.UserPaynn100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.lWOnSeat_.Add(value);
        return this;
      }
      public Builder AddLWOnSeat(global::gt_msg.UserPaynn100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.lWOnSeat_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLWOnSeat(scg::IEnumerable<global::gt_msg.UserPaynn100> values) {
        PrepareBuilder();
        result.lWOnSeat_.Add(values);
        return this;
      }
      public Builder ClearLWOnSeat() {
        PrepareBuilder();
        result.lWOnSeat_.Clear();
        return this;
      }
      
      public bool HasTAX {
        get { return result.hasTAX; }
      }
      public long TAX {
        get { return result.TAX; }
        set { SetTAX(value); }
      }
      public Builder SetTAX(long value) {
        PrepareBuilder();
        result.hasTAX = true;
        result.tAX_ = value;
        return this;
      }
      public Builder ClearTAX() {
        PrepareBuilder();
        result.hasTAX = false;
        result.tAX_ = 0L;
        return this;
      }
      
      public bool HasContinueWin {
        get { return result.hasContinueWin; }
      }
      public int ContinueWin {
        get { return result.ContinueWin; }
        set { SetContinueWin(value); }
      }
      public Builder SetContinueWin(int value) {
        PrepareBuilder();
        result.hasContinueWin = true;
        result.continueWin_ = value;
        return this;
      }
      public Builder ClearContinueWin() {
        PrepareBuilder();
        result.hasContinueWin = false;
        result.continueWin_ = 0;
        return this;
      }
    }
    static TableUserResultnn100() {
      object.ReferenceEquals(global::gt_msg.GtNn100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RoundEndedEventnn100 : pb::GeneratedMessage<RoundEndedEventnn100, RoundEndedEventnn100.Builder> {
    private RoundEndedEventnn100() { }
    private static readonly RoundEndedEventnn100 defaultInstance = new RoundEndedEventnn100().MakeReadOnly();
    private static readonly string[] _roundEndedEventnn100FieldNames = new string[] { "HC", "NextStartTimeoutSecs", "TableID", "UserSelf" };
    private static readonly uint[] _roundEndedEventnn100FieldTags = new uint[] { 26, 16, 8, 34 };
    public static RoundEndedEventnn100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RoundEndedEventnn100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RoundEndedEventnn100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_RoundEndedEventnn100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RoundEndedEventnn100, RoundEndedEventnn100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_RoundEndedEventnn100__FieldAccessorTable; }
    }
    
    public const int TableIDFieldNumber = 1;
    private bool hasTableID;
    private int tableID_;
    public bool HasTableID {
      get { return hasTableID; }
    }
    public int TableID {
      get { return tableID_; }
    }
    
    public const int NextStartTimeoutSecsFieldNumber = 2;
    private bool hasNextStartTimeoutSecs;
    private int nextStartTimeoutSecs_;
    public bool HasNextStartTimeoutSecs {
      get { return hasNextStartTimeoutSecs; }
    }
    public int NextStartTimeoutSecs {
      get { return nextStartTimeoutSecs_; }
    }
    
    public const int HCFieldNumber = 3;
    private pbc::PopsicleList<global::gt_msg.HandCardnn100> hC_ = new pbc::PopsicleList<global::gt_msg.HandCardnn100>();
    public scg::IList<global::gt_msg.HandCardnn100> HCList {
      get { return hC_; }
    }
    public int HCCount {
      get { return hC_.Count; }
    }
    public global::gt_msg.HandCardnn100 GetHC(int index) {
      return hC_[index];
    }
    
    public const int UserSelfFieldNumber = 4;
    private bool hasUserSelf;
    private global::gt_msg.TableUserResultnn100 userSelf_;
    public bool HasUserSelf {
      get { return hasUserSelf; }
    }
    public global::gt_msg.TableUserResultnn100 UserSelf {
      get { return userSelf_ ?? global::gt_msg.TableUserResultnn100.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableID) return false;
        if (!hasNextStartTimeoutSecs) return false;
        foreach (global::gt_msg.HandCardnn100 element in HCList) {
          if (!element.IsInitialized) return false;
        }
        if (HasUserSelf) {
          if (!UserSelf.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _roundEndedEventnn100FieldNames;
      if (hasTableID) {
        output.WriteInt32(1, field_names[2], TableID);
      }
      if (hasNextStartTimeoutSecs) {
        output.WriteInt32(2, field_names[1], NextStartTimeoutSecs);
      }
      if (hC_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], hC_);
      }
      if (hasUserSelf) {
        output.WriteMessage(4, field_names[3], UserSelf);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableID) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, TableID);
      }
      if (hasNextStartTimeoutSecs) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, NextStartTimeoutSecs);
      }
      foreach (global::gt_msg.HandCardnn100 element in HCList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      if (hasUserSelf) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, UserSelf);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RoundEndedEventnn100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RoundEndedEventnn100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RoundEndedEventnn100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RoundEndedEventnn100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RoundEndedEventnn100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RoundEndedEventnn100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RoundEndedEventnn100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RoundEndedEventnn100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RoundEndedEventnn100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RoundEndedEventnn100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RoundEndedEventnn100 MakeReadOnly() {
      hC_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RoundEndedEventnn100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RoundEndedEventnn100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RoundEndedEventnn100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RoundEndedEventnn100 result;
      
      private RoundEndedEventnn100 PrepareBuilder() {
        if (resultIsReadOnly) {
          RoundEndedEventnn100 original = result;
          result = new RoundEndedEventnn100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RoundEndedEventnn100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.RoundEndedEventnn100.Descriptor; }
      }
      
      public override RoundEndedEventnn100 DefaultInstanceForType {
        get { return global::gt_msg.RoundEndedEventnn100.DefaultInstance; }
      }
      
      public override RoundEndedEventnn100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RoundEndedEventnn100) {
          return MergeFrom((RoundEndedEventnn100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RoundEndedEventnn100 other) {
        if (other == global::gt_msg.RoundEndedEventnn100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableID) {
          TableID = other.TableID;
        }
        if (other.HasNextStartTimeoutSecs) {
          NextStartTimeoutSecs = other.NextStartTimeoutSecs;
        }
        if (other.hC_.Count != 0) {
          result.hC_.Add(other.hC_);
        }
        if (other.HasUserSelf) {
          MergeUserSelf(other.UserSelf);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_roundEndedEventnn100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _roundEndedEventnn100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTableID = input.ReadInt32(ref result.tableID_);
              break;
            }
            case 16: {
              result.hasNextStartTimeoutSecs = input.ReadInt32(ref result.nextStartTimeoutSecs_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.hC_, global::gt_msg.HandCardnn100.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              global::gt_msg.TableUserResultnn100.Builder subBuilder = global::gt_msg.TableUserResultnn100.CreateBuilder();
              if (result.hasUserSelf) {
                subBuilder.MergeFrom(UserSelf);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserSelf = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableID {
        get { return result.hasTableID; }
      }
      public int TableID {
        get { return result.TableID; }
        set { SetTableID(value); }
      }
      public Builder SetTableID(int value) {
        PrepareBuilder();
        result.hasTableID = true;
        result.tableID_ = value;
        return this;
      }
      public Builder ClearTableID() {
        PrepareBuilder();
        result.hasTableID = false;
        result.tableID_ = 0;
        return this;
      }
      
      public bool HasNextStartTimeoutSecs {
        get { return result.hasNextStartTimeoutSecs; }
      }
      public int NextStartTimeoutSecs {
        get { return result.NextStartTimeoutSecs; }
        set { SetNextStartTimeoutSecs(value); }
      }
      public Builder SetNextStartTimeoutSecs(int value) {
        PrepareBuilder();
        result.hasNextStartTimeoutSecs = true;
        result.nextStartTimeoutSecs_ = value;
        return this;
      }
      public Builder ClearNextStartTimeoutSecs() {
        PrepareBuilder();
        result.hasNextStartTimeoutSecs = false;
        result.nextStartTimeoutSecs_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::gt_msg.HandCardnn100> HCList {
        get { return PrepareBuilder().hC_; }
      }
      public int HCCount {
        get { return result.HCCount; }
      }
      public global::gt_msg.HandCardnn100 GetHC(int index) {
        return result.GetHC(index);
      }
      public Builder SetHC(int index, global::gt_msg.HandCardnn100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hC_[index] = value;
        return this;
      }
      public Builder SetHC(int index, global::gt_msg.HandCardnn100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hC_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddHC(global::gt_msg.HandCardnn100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hC_.Add(value);
        return this;
      }
      public Builder AddHC(global::gt_msg.HandCardnn100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hC_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeHC(scg::IEnumerable<global::gt_msg.HandCardnn100> values) {
        PrepareBuilder();
        result.hC_.Add(values);
        return this;
      }
      public Builder ClearHC() {
        PrepareBuilder();
        result.hC_.Clear();
        return this;
      }
      
      public bool HasUserSelf {
       get { return result.hasUserSelf; }
      }
      public global::gt_msg.TableUserResultnn100 UserSelf {
        get { return result.UserSelf; }
        set { SetUserSelf(value); }
      }
      public Builder SetUserSelf(global::gt_msg.TableUserResultnn100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserSelf = true;
        result.userSelf_ = value;
        return this;
      }
      public Builder SetUserSelf(global::gt_msg.TableUserResultnn100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserSelf = true;
        result.userSelf_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserSelf(global::gt_msg.TableUserResultnn100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserSelf &&
            result.userSelf_ != global::gt_msg.TableUserResultnn100.DefaultInstance) {
            result.userSelf_ = global::gt_msg.TableUserResultnn100.CreateBuilder(result.userSelf_).MergeFrom(value).BuildPartial();
        } else {
          result.userSelf_ = value;
        }
        result.hasUserSelf = true;
        return this;
      }
      public Builder ClearUserSelf() {
        PrepareBuilder();
        result.hasUserSelf = false;
        result.userSelf_ = null;
        return this;
      }
    }
    static RoundEndedEventnn100() {
      object.ReferenceEquals(global::gt_msg.GtNn100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ForceExitTableRequestnn100 : pb::GeneratedMessage<ForceExitTableRequestnn100, ForceExitTableRequestnn100.Builder> {
    private ForceExitTableRequestnn100() { }
    private static readonly ForceExitTableRequestnn100 defaultInstance = new ForceExitTableRequestnn100().MakeReadOnly();
    private static readonly string[] _forceExitTableRequestnn100FieldNames = new string[] {  };
    private static readonly uint[] _forceExitTableRequestnn100FieldTags = new uint[] {  };
    public static ForceExitTableRequestnn100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ForceExitTableRequestnn100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ForceExitTableRequestnn100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_ForceExitTableRequestnn100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ForceExitTableRequestnn100, ForceExitTableRequestnn100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_ForceExitTableRequestnn100__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _forceExitTableRequestnn100FieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ForceExitTableRequestnn100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ForceExitTableRequestnn100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableRequestnn100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ForceExitTableRequestnn100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableRequestnn100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ForceExitTableRequestnn100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableRequestnn100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ForceExitTableRequestnn100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ForceExitTableRequestnn100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ForceExitTableRequestnn100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ForceExitTableRequestnn100 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ForceExitTableRequestnn100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ForceExitTableRequestnn100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ForceExitTableRequestnn100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ForceExitTableRequestnn100 result;
      
      private ForceExitTableRequestnn100 PrepareBuilder() {
        if (resultIsReadOnly) {
          ForceExitTableRequestnn100 original = result;
          result = new ForceExitTableRequestnn100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ForceExitTableRequestnn100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.ForceExitTableRequestnn100.Descriptor; }
      }
      
      public override ForceExitTableRequestnn100 DefaultInstanceForType {
        get { return global::gt_msg.ForceExitTableRequestnn100.DefaultInstance; }
      }
      
      public override ForceExitTableRequestnn100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ForceExitTableRequestnn100) {
          return MergeFrom((ForceExitTableRequestnn100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ForceExitTableRequestnn100 other) {
        if (other == global::gt_msg.ForceExitTableRequestnn100.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_forceExitTableRequestnn100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _forceExitTableRequestnn100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static ForceExitTableRequestnn100() {
      object.ReferenceEquals(global::gt_msg.GtNn100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ForceExitTableResponsenn100 : pb::GeneratedMessage<ForceExitTableResponsenn100, ForceExitTableResponsenn100.Builder> {
    private ForceExitTableResponsenn100() { }
    private static readonly ForceExitTableResponsenn100 defaultInstance = new ForceExitTableResponsenn100().MakeReadOnly();
    private static readonly string[] _forceExitTableResponsenn100FieldNames = new string[] { "code" };
    private static readonly uint[] _forceExitTableResponsenn100FieldTags = new uint[] { 8 };
    public static ForceExitTableResponsenn100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ForceExitTableResponsenn100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ForceExitTableResponsenn100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_ForceExitTableResponsenn100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ForceExitTableResponsenn100, ForceExitTableResponsenn100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_ForceExitTableResponsenn100__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Code {
        Normal = 0,
        GiveUp = 1,
        NoEnoughMoney = 2,
        ChangeTable = 3,
        CanNotExitForPlaying = 4,
        CanNotChangeTableForPlaying = 5,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.ForceExitTableResponsenn100.Types.Code code_ = global::gt_msg.ForceExitTableResponsenn100.Types.Code.Normal;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.ForceExitTableResponsenn100.Types.Code Code {
      get { return code_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _forceExitTableResponsenn100FieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[0], (int) Code, Code);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ForceExitTableResponsenn100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ForceExitTableResponsenn100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableResponsenn100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ForceExitTableResponsenn100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableResponsenn100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ForceExitTableResponsenn100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableResponsenn100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ForceExitTableResponsenn100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ForceExitTableResponsenn100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ForceExitTableResponsenn100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ForceExitTableResponsenn100 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ForceExitTableResponsenn100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ForceExitTableResponsenn100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ForceExitTableResponsenn100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ForceExitTableResponsenn100 result;
      
      private ForceExitTableResponsenn100 PrepareBuilder() {
        if (resultIsReadOnly) {
          ForceExitTableResponsenn100 original = result;
          result = new ForceExitTableResponsenn100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ForceExitTableResponsenn100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.ForceExitTableResponsenn100.Descriptor; }
      }
      
      public override ForceExitTableResponsenn100 DefaultInstanceForType {
        get { return global::gt_msg.ForceExitTableResponsenn100.DefaultInstance; }
      }
      
      public override ForceExitTableResponsenn100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ForceExitTableResponsenn100) {
          return MergeFrom((ForceExitTableResponsenn100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ForceExitTableResponsenn100 other) {
        if (other == global::gt_msg.ForceExitTableResponsenn100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_forceExitTableResponsenn100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _forceExitTableResponsenn100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.ForceExitTableResponsenn100.Types.Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.ForceExitTableResponsenn100.Types.Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.ForceExitTableResponsenn100.Types.Code.Normal;
        return this;
      }
    }
    static ForceExitTableResponsenn100() {
      object.ReferenceEquals(global::gt_msg.GtNn100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GameLifeRequestnn100 : pb::GeneratedMessage<GameLifeRequestnn100, GameLifeRequestnn100.Builder> {
    private GameLifeRequestnn100() { }
    private static readonly GameLifeRequestnn100 defaultInstance = new GameLifeRequestnn100().MakeReadOnly();
    private static readonly string[] _gameLifeRequestnn100FieldNames = new string[] { "uid" };
    private static readonly uint[] _gameLifeRequestnn100FieldTags = new uint[] { 10 };
    public static GameLifeRequestnn100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameLifeRequestnn100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameLifeRequestnn100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_GameLifeRequestnn100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameLifeRequestnn100, GameLifeRequestnn100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_GameLifeRequestnn100__FieldAccessorTable; }
    }
    
    public const int UidFieldNumber = 1;
    private bool hasUid;
    private string uid_ = "";
    public bool HasUid {
      get { return hasUid; }
    }
    public string Uid {
      get { return uid_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUid) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _gameLifeRequestnn100FieldNames;
      if (hasUid) {
        output.WriteString(1, field_names[0], Uid);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Uid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GameLifeRequestnn100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameLifeRequestnn100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameLifeRequestnn100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameLifeRequestnn100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameLifeRequestnn100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameLifeRequestnn100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameLifeRequestnn100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameLifeRequestnn100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameLifeRequestnn100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameLifeRequestnn100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameLifeRequestnn100 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameLifeRequestnn100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GameLifeRequestnn100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameLifeRequestnn100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameLifeRequestnn100 result;
      
      private GameLifeRequestnn100 PrepareBuilder() {
        if (resultIsReadOnly) {
          GameLifeRequestnn100 original = result;
          result = new GameLifeRequestnn100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameLifeRequestnn100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.GameLifeRequestnn100.Descriptor; }
      }
      
      public override GameLifeRequestnn100 DefaultInstanceForType {
        get { return global::gt_msg.GameLifeRequestnn100.DefaultInstance; }
      }
      
      public override GameLifeRequestnn100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameLifeRequestnn100) {
          return MergeFrom((GameLifeRequestnn100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameLifeRequestnn100 other) {
        if (other == global::gt_msg.GameLifeRequestnn100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUid) {
          Uid = other.Uid;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameLifeRequestnn100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameLifeRequestnn100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUid = input.ReadString(ref result.uid_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUid {
        get { return result.hasUid; }
      }
      public string Uid {
        get { return result.Uid; }
        set { SetUid(value); }
      }
      public Builder SetUid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder ClearUid() {
        PrepareBuilder();
        result.hasUid = false;
        result.uid_ = "";
        return this;
      }
    }
    static GameLifeRequestnn100() {
      object.ReferenceEquals(global::gt_msg.GtNn100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GameLifeResponsenn100 : pb::GeneratedMessage<GameLifeResponsenn100, GameLifeResponsenn100.Builder> {
    private GameLifeResponsenn100() { }
    private static readonly GameLifeResponsenn100 defaultInstance = new GameLifeResponsenn100().MakeReadOnly();
    private static readonly string[] _gameLifeResponsenn100FieldNames = new string[] { "code", "continueWin", "gameAllUserNum", "level1WinChips", "level1WinChipsRank", "level2WinChips", "level2WinChipsRank", "level3WinChips", "level3WinChipsRank", "level4WinChips", "level4WinChipsRank", "level5WinChips", "level5WinChipsRank", "lostTimes", "user_info", "winTimes" };
    private static readonly uint[] _gameLifeResponsenn100FieldTags = new uint[] { 8, 40, 128, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 32, 18, 24 };
    public static GameLifeResponsenn100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameLifeResponsenn100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameLifeResponsenn100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_GameLifeResponsenn100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameLifeResponsenn100, GameLifeResponsenn100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_GameLifeResponsenn100__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Code {
        Ok = 0,
        Failed = 1,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.GameLifeResponsenn100.Types.Code code_ = global::gt_msg.GameLifeResponsenn100.Types.Code.Ok;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.GameLifeResponsenn100.Types.Code Code {
      get { return code_; }
    }
    
    public const int UserInfoFieldNumber = 2;
    private bool hasUserInfo;
    private global::gt_msg.User userInfo_;
    public bool HasUserInfo {
      get { return hasUserInfo; }
    }
    public global::gt_msg.User UserInfo {
      get { return userInfo_ ?? global::gt_msg.User.DefaultInstance; }
    }
    
    public const int WinTimesFieldNumber = 3;
    private bool hasWinTimes;
    private int winTimes_;
    public bool HasWinTimes {
      get { return hasWinTimes; }
    }
    public int WinTimes {
      get { return winTimes_; }
    }
    
    public const int LostTimesFieldNumber = 4;
    private bool hasLostTimes;
    private int lostTimes_;
    public bool HasLostTimes {
      get { return hasLostTimes; }
    }
    public int LostTimes {
      get { return lostTimes_; }
    }
    
    public const int ContinueWinFieldNumber = 5;
    private bool hasContinueWin;
    private int continueWin_;
    public bool HasContinueWin {
      get { return hasContinueWin; }
    }
    public int ContinueWin {
      get { return continueWin_; }
    }
    
    public const int Level1WinChipsFieldNumber = 6;
    private bool hasLevel1WinChips;
    private long level1WinChips_;
    public bool HasLevel1WinChips {
      get { return hasLevel1WinChips; }
    }
    public long Level1WinChips {
      get { return level1WinChips_; }
    }
    
    public const int Level1WinChipsRankFieldNumber = 7;
    private bool hasLevel1WinChipsRank;
    private int level1WinChipsRank_;
    public bool HasLevel1WinChipsRank {
      get { return hasLevel1WinChipsRank; }
    }
    public int Level1WinChipsRank {
      get { return level1WinChipsRank_; }
    }
    
    public const int Level2WinChipsFieldNumber = 8;
    private bool hasLevel2WinChips;
    private long level2WinChips_;
    public bool HasLevel2WinChips {
      get { return hasLevel2WinChips; }
    }
    public long Level2WinChips {
      get { return level2WinChips_; }
    }
    
    public const int Level2WinChipsRankFieldNumber = 9;
    private bool hasLevel2WinChipsRank;
    private int level2WinChipsRank_;
    public bool HasLevel2WinChipsRank {
      get { return hasLevel2WinChipsRank; }
    }
    public int Level2WinChipsRank {
      get { return level2WinChipsRank_; }
    }
    
    public const int Level3WinChipsFieldNumber = 10;
    private bool hasLevel3WinChips;
    private long level3WinChips_;
    public bool HasLevel3WinChips {
      get { return hasLevel3WinChips; }
    }
    public long Level3WinChips {
      get { return level3WinChips_; }
    }
    
    public const int Level3WinChipsRankFieldNumber = 11;
    private bool hasLevel3WinChipsRank;
    private int level3WinChipsRank_;
    public bool HasLevel3WinChipsRank {
      get { return hasLevel3WinChipsRank; }
    }
    public int Level3WinChipsRank {
      get { return level3WinChipsRank_; }
    }
    
    public const int Level4WinChipsFieldNumber = 12;
    private bool hasLevel4WinChips;
    private long level4WinChips_;
    public bool HasLevel4WinChips {
      get { return hasLevel4WinChips; }
    }
    public long Level4WinChips {
      get { return level4WinChips_; }
    }
    
    public const int Level4WinChipsRankFieldNumber = 13;
    private bool hasLevel4WinChipsRank;
    private int level4WinChipsRank_;
    public bool HasLevel4WinChipsRank {
      get { return hasLevel4WinChipsRank; }
    }
    public int Level4WinChipsRank {
      get { return level4WinChipsRank_; }
    }
    
    public const int Level5WinChipsFieldNumber = 14;
    private bool hasLevel5WinChips;
    private long level5WinChips_;
    public bool HasLevel5WinChips {
      get { return hasLevel5WinChips; }
    }
    public long Level5WinChips {
      get { return level5WinChips_; }
    }
    
    public const int Level5WinChipsRankFieldNumber = 15;
    private bool hasLevel5WinChipsRank;
    private int level5WinChipsRank_;
    public bool HasLevel5WinChipsRank {
      get { return hasLevel5WinChipsRank; }
    }
    public int Level5WinChipsRank {
      get { return level5WinChipsRank_; }
    }
    
    public const int GameAllUserNumFieldNumber = 16;
    private bool hasGameAllUserNum;
    private int gameAllUserNum_;
    public bool HasGameAllUserNum {
      get { return hasGameAllUserNum; }
    }
    public int GameAllUserNum {
      get { return gameAllUserNum_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        if (!hasUserInfo) return false;
        if (!UserInfo.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _gameLifeResponsenn100FieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[0], (int) Code, Code);
      }
      if (hasUserInfo) {
        output.WriteMessage(2, field_names[14], UserInfo);
      }
      if (hasWinTimes) {
        output.WriteInt32(3, field_names[15], WinTimes);
      }
      if (hasLostTimes) {
        output.WriteInt32(4, field_names[13], LostTimes);
      }
      if (hasContinueWin) {
        output.WriteInt32(5, field_names[1], ContinueWin);
      }
      if (hasLevel1WinChips) {
        output.WriteInt64(6, field_names[3], Level1WinChips);
      }
      if (hasLevel1WinChipsRank) {
        output.WriteInt32(7, field_names[4], Level1WinChipsRank);
      }
      if (hasLevel2WinChips) {
        output.WriteInt64(8, field_names[5], Level2WinChips);
      }
      if (hasLevel2WinChipsRank) {
        output.WriteInt32(9, field_names[6], Level2WinChipsRank);
      }
      if (hasLevel3WinChips) {
        output.WriteInt64(10, field_names[7], Level3WinChips);
      }
      if (hasLevel3WinChipsRank) {
        output.WriteInt32(11, field_names[8], Level3WinChipsRank);
      }
      if (hasLevel4WinChips) {
        output.WriteInt64(12, field_names[9], Level4WinChips);
      }
      if (hasLevel4WinChipsRank) {
        output.WriteInt32(13, field_names[10], Level4WinChipsRank);
      }
      if (hasLevel5WinChips) {
        output.WriteInt64(14, field_names[11], Level5WinChips);
      }
      if (hasLevel5WinChipsRank) {
        output.WriteInt32(15, field_names[12], Level5WinChipsRank);
      }
      if (hasGameAllUserNum) {
        output.WriteInt32(16, field_names[2], GameAllUserNum);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasUserInfo) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, UserInfo);
      }
      if (hasWinTimes) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, WinTimes);
      }
      if (hasLostTimes) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, LostTimes);
      }
      if (hasContinueWin) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, ContinueWin);
      }
      if (hasLevel1WinChips) {
        size += pb::CodedOutputStream.ComputeInt64Size(6, Level1WinChips);
      }
      if (hasLevel1WinChipsRank) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, Level1WinChipsRank);
      }
      if (hasLevel2WinChips) {
        size += pb::CodedOutputStream.ComputeInt64Size(8, Level2WinChips);
      }
      if (hasLevel2WinChipsRank) {
        size += pb::CodedOutputStream.ComputeInt32Size(9, Level2WinChipsRank);
      }
      if (hasLevel3WinChips) {
        size += pb::CodedOutputStream.ComputeInt64Size(10, Level3WinChips);
      }
      if (hasLevel3WinChipsRank) {
        size += pb::CodedOutputStream.ComputeInt32Size(11, Level3WinChipsRank);
      }
      if (hasLevel4WinChips) {
        size += pb::CodedOutputStream.ComputeInt64Size(12, Level4WinChips);
      }
      if (hasLevel4WinChipsRank) {
        size += pb::CodedOutputStream.ComputeInt32Size(13, Level4WinChipsRank);
      }
      if (hasLevel5WinChips) {
        size += pb::CodedOutputStream.ComputeInt64Size(14, Level5WinChips);
      }
      if (hasLevel5WinChipsRank) {
        size += pb::CodedOutputStream.ComputeInt32Size(15, Level5WinChipsRank);
      }
      if (hasGameAllUserNum) {
        size += pb::CodedOutputStream.ComputeInt32Size(16, GameAllUserNum);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GameLifeResponsenn100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameLifeResponsenn100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameLifeResponsenn100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameLifeResponsenn100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameLifeResponsenn100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameLifeResponsenn100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameLifeResponsenn100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameLifeResponsenn100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameLifeResponsenn100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameLifeResponsenn100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameLifeResponsenn100 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameLifeResponsenn100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GameLifeResponsenn100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameLifeResponsenn100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameLifeResponsenn100 result;
      
      private GameLifeResponsenn100 PrepareBuilder() {
        if (resultIsReadOnly) {
          GameLifeResponsenn100 original = result;
          result = new GameLifeResponsenn100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameLifeResponsenn100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.GameLifeResponsenn100.Descriptor; }
      }
      
      public override GameLifeResponsenn100 DefaultInstanceForType {
        get { return global::gt_msg.GameLifeResponsenn100.DefaultInstance; }
      }
      
      public override GameLifeResponsenn100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameLifeResponsenn100) {
          return MergeFrom((GameLifeResponsenn100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameLifeResponsenn100 other) {
        if (other == global::gt_msg.GameLifeResponsenn100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasUserInfo) {
          MergeUserInfo(other.UserInfo);
        }
        if (other.HasWinTimes) {
          WinTimes = other.WinTimes;
        }
        if (other.HasLostTimes) {
          LostTimes = other.LostTimes;
        }
        if (other.HasContinueWin) {
          ContinueWin = other.ContinueWin;
        }
        if (other.HasLevel1WinChips) {
          Level1WinChips = other.Level1WinChips;
        }
        if (other.HasLevel1WinChipsRank) {
          Level1WinChipsRank = other.Level1WinChipsRank;
        }
        if (other.HasLevel2WinChips) {
          Level2WinChips = other.Level2WinChips;
        }
        if (other.HasLevel2WinChipsRank) {
          Level2WinChipsRank = other.Level2WinChipsRank;
        }
        if (other.HasLevel3WinChips) {
          Level3WinChips = other.Level3WinChips;
        }
        if (other.HasLevel3WinChipsRank) {
          Level3WinChipsRank = other.Level3WinChipsRank;
        }
        if (other.HasLevel4WinChips) {
          Level4WinChips = other.Level4WinChips;
        }
        if (other.HasLevel4WinChipsRank) {
          Level4WinChipsRank = other.Level4WinChipsRank;
        }
        if (other.HasLevel5WinChips) {
          Level5WinChips = other.Level5WinChips;
        }
        if (other.HasLevel5WinChipsRank) {
          Level5WinChipsRank = other.Level5WinChipsRank;
        }
        if (other.HasGameAllUserNum) {
          GameAllUserNum = other.GameAllUserNum;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameLifeResponsenn100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameLifeResponsenn100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              global::gt_msg.User.Builder subBuilder = global::gt_msg.User.CreateBuilder();
              if (result.hasUserInfo) {
                subBuilder.MergeFrom(UserInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserInfo = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasWinTimes = input.ReadInt32(ref result.winTimes_);
              break;
            }
            case 32: {
              result.hasLostTimes = input.ReadInt32(ref result.lostTimes_);
              break;
            }
            case 40: {
              result.hasContinueWin = input.ReadInt32(ref result.continueWin_);
              break;
            }
            case 48: {
              result.hasLevel1WinChips = input.ReadInt64(ref result.level1WinChips_);
              break;
            }
            case 56: {
              result.hasLevel1WinChipsRank = input.ReadInt32(ref result.level1WinChipsRank_);
              break;
            }
            case 64: {
              result.hasLevel2WinChips = input.ReadInt64(ref result.level2WinChips_);
              break;
            }
            case 72: {
              result.hasLevel2WinChipsRank = input.ReadInt32(ref result.level2WinChipsRank_);
              break;
            }
            case 80: {
              result.hasLevel3WinChips = input.ReadInt64(ref result.level3WinChips_);
              break;
            }
            case 88: {
              result.hasLevel3WinChipsRank = input.ReadInt32(ref result.level3WinChipsRank_);
              break;
            }
            case 96: {
              result.hasLevel4WinChips = input.ReadInt64(ref result.level4WinChips_);
              break;
            }
            case 104: {
              result.hasLevel4WinChipsRank = input.ReadInt32(ref result.level4WinChipsRank_);
              break;
            }
            case 112: {
              result.hasLevel5WinChips = input.ReadInt64(ref result.level5WinChips_);
              break;
            }
            case 120: {
              result.hasLevel5WinChipsRank = input.ReadInt32(ref result.level5WinChipsRank_);
              break;
            }
            case 128: {
              result.hasGameAllUserNum = input.ReadInt32(ref result.gameAllUserNum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.GameLifeResponsenn100.Types.Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.GameLifeResponsenn100.Types.Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.GameLifeResponsenn100.Types.Code.Ok;
        return this;
      }
      
      public bool HasUserInfo {
       get { return result.hasUserInfo; }
      }
      public global::gt_msg.User UserInfo {
        get { return result.UserInfo; }
        set { SetUserInfo(value); }
      }
      public Builder SetUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = value;
        return this;
      }
      public Builder SetUserInfo(global::gt_msg.User.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserInfo &&
            result.userInfo_ != global::gt_msg.User.DefaultInstance) {
            result.userInfo_ = global::gt_msg.User.CreateBuilder(result.userInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.userInfo_ = value;
        }
        result.hasUserInfo = true;
        return this;
      }
      public Builder ClearUserInfo() {
        PrepareBuilder();
        result.hasUserInfo = false;
        result.userInfo_ = null;
        return this;
      }
      
      public bool HasWinTimes {
        get { return result.hasWinTimes; }
      }
      public int WinTimes {
        get { return result.WinTimes; }
        set { SetWinTimes(value); }
      }
      public Builder SetWinTimes(int value) {
        PrepareBuilder();
        result.hasWinTimes = true;
        result.winTimes_ = value;
        return this;
      }
      public Builder ClearWinTimes() {
        PrepareBuilder();
        result.hasWinTimes = false;
        result.winTimes_ = 0;
        return this;
      }
      
      public bool HasLostTimes {
        get { return result.hasLostTimes; }
      }
      public int LostTimes {
        get { return result.LostTimes; }
        set { SetLostTimes(value); }
      }
      public Builder SetLostTimes(int value) {
        PrepareBuilder();
        result.hasLostTimes = true;
        result.lostTimes_ = value;
        return this;
      }
      public Builder ClearLostTimes() {
        PrepareBuilder();
        result.hasLostTimes = false;
        result.lostTimes_ = 0;
        return this;
      }
      
      public bool HasContinueWin {
        get { return result.hasContinueWin; }
      }
      public int ContinueWin {
        get { return result.ContinueWin; }
        set { SetContinueWin(value); }
      }
      public Builder SetContinueWin(int value) {
        PrepareBuilder();
        result.hasContinueWin = true;
        result.continueWin_ = value;
        return this;
      }
      public Builder ClearContinueWin() {
        PrepareBuilder();
        result.hasContinueWin = false;
        result.continueWin_ = 0;
        return this;
      }
      
      public bool HasLevel1WinChips {
        get { return result.hasLevel1WinChips; }
      }
      public long Level1WinChips {
        get { return result.Level1WinChips; }
        set { SetLevel1WinChips(value); }
      }
      public Builder SetLevel1WinChips(long value) {
        PrepareBuilder();
        result.hasLevel1WinChips = true;
        result.level1WinChips_ = value;
        return this;
      }
      public Builder ClearLevel1WinChips() {
        PrepareBuilder();
        result.hasLevel1WinChips = false;
        result.level1WinChips_ = 0L;
        return this;
      }
      
      public bool HasLevel1WinChipsRank {
        get { return result.hasLevel1WinChipsRank; }
      }
      public int Level1WinChipsRank {
        get { return result.Level1WinChipsRank; }
        set { SetLevel1WinChipsRank(value); }
      }
      public Builder SetLevel1WinChipsRank(int value) {
        PrepareBuilder();
        result.hasLevel1WinChipsRank = true;
        result.level1WinChipsRank_ = value;
        return this;
      }
      public Builder ClearLevel1WinChipsRank() {
        PrepareBuilder();
        result.hasLevel1WinChipsRank = false;
        result.level1WinChipsRank_ = 0;
        return this;
      }
      
      public bool HasLevel2WinChips {
        get { return result.hasLevel2WinChips; }
      }
      public long Level2WinChips {
        get { return result.Level2WinChips; }
        set { SetLevel2WinChips(value); }
      }
      public Builder SetLevel2WinChips(long value) {
        PrepareBuilder();
        result.hasLevel2WinChips = true;
        result.level2WinChips_ = value;
        return this;
      }
      public Builder ClearLevel2WinChips() {
        PrepareBuilder();
        result.hasLevel2WinChips = false;
        result.level2WinChips_ = 0L;
        return this;
      }
      
      public bool HasLevel2WinChipsRank {
        get { return result.hasLevel2WinChipsRank; }
      }
      public int Level2WinChipsRank {
        get { return result.Level2WinChipsRank; }
        set { SetLevel2WinChipsRank(value); }
      }
      public Builder SetLevel2WinChipsRank(int value) {
        PrepareBuilder();
        result.hasLevel2WinChipsRank = true;
        result.level2WinChipsRank_ = value;
        return this;
      }
      public Builder ClearLevel2WinChipsRank() {
        PrepareBuilder();
        result.hasLevel2WinChipsRank = false;
        result.level2WinChipsRank_ = 0;
        return this;
      }
      
      public bool HasLevel3WinChips {
        get { return result.hasLevel3WinChips; }
      }
      public long Level3WinChips {
        get { return result.Level3WinChips; }
        set { SetLevel3WinChips(value); }
      }
      public Builder SetLevel3WinChips(long value) {
        PrepareBuilder();
        result.hasLevel3WinChips = true;
        result.level3WinChips_ = value;
        return this;
      }
      public Builder ClearLevel3WinChips() {
        PrepareBuilder();
        result.hasLevel3WinChips = false;
        result.level3WinChips_ = 0L;
        return this;
      }
      
      public bool HasLevel3WinChipsRank {
        get { return result.hasLevel3WinChipsRank; }
      }
      public int Level3WinChipsRank {
        get { return result.Level3WinChipsRank; }
        set { SetLevel3WinChipsRank(value); }
      }
      public Builder SetLevel3WinChipsRank(int value) {
        PrepareBuilder();
        result.hasLevel3WinChipsRank = true;
        result.level3WinChipsRank_ = value;
        return this;
      }
      public Builder ClearLevel3WinChipsRank() {
        PrepareBuilder();
        result.hasLevel3WinChipsRank = false;
        result.level3WinChipsRank_ = 0;
        return this;
      }
      
      public bool HasLevel4WinChips {
        get { return result.hasLevel4WinChips; }
      }
      public long Level4WinChips {
        get { return result.Level4WinChips; }
        set { SetLevel4WinChips(value); }
      }
      public Builder SetLevel4WinChips(long value) {
        PrepareBuilder();
        result.hasLevel4WinChips = true;
        result.level4WinChips_ = value;
        return this;
      }
      public Builder ClearLevel4WinChips() {
        PrepareBuilder();
        result.hasLevel4WinChips = false;
        result.level4WinChips_ = 0L;
        return this;
      }
      
      public bool HasLevel4WinChipsRank {
        get { return result.hasLevel4WinChipsRank; }
      }
      public int Level4WinChipsRank {
        get { return result.Level4WinChipsRank; }
        set { SetLevel4WinChipsRank(value); }
      }
      public Builder SetLevel4WinChipsRank(int value) {
        PrepareBuilder();
        result.hasLevel4WinChipsRank = true;
        result.level4WinChipsRank_ = value;
        return this;
      }
      public Builder ClearLevel4WinChipsRank() {
        PrepareBuilder();
        result.hasLevel4WinChipsRank = false;
        result.level4WinChipsRank_ = 0;
        return this;
      }
      
      public bool HasLevel5WinChips {
        get { return result.hasLevel5WinChips; }
      }
      public long Level5WinChips {
        get { return result.Level5WinChips; }
        set { SetLevel5WinChips(value); }
      }
      public Builder SetLevel5WinChips(long value) {
        PrepareBuilder();
        result.hasLevel5WinChips = true;
        result.level5WinChips_ = value;
        return this;
      }
      public Builder ClearLevel5WinChips() {
        PrepareBuilder();
        result.hasLevel5WinChips = false;
        result.level5WinChips_ = 0L;
        return this;
      }
      
      public bool HasLevel5WinChipsRank {
        get { return result.hasLevel5WinChipsRank; }
      }
      public int Level5WinChipsRank {
        get { return result.Level5WinChipsRank; }
        set { SetLevel5WinChipsRank(value); }
      }
      public Builder SetLevel5WinChipsRank(int value) {
        PrepareBuilder();
        result.hasLevel5WinChipsRank = true;
        result.level5WinChipsRank_ = value;
        return this;
      }
      public Builder ClearLevel5WinChipsRank() {
        PrepareBuilder();
        result.hasLevel5WinChipsRank = false;
        result.level5WinChipsRank_ = 0;
        return this;
      }
      
      public bool HasGameAllUserNum {
        get { return result.hasGameAllUserNum; }
      }
      public int GameAllUserNum {
        get { return result.GameAllUserNum; }
        set { SetGameAllUserNum(value); }
      }
      public Builder SetGameAllUserNum(int value) {
        PrepareBuilder();
        result.hasGameAllUserNum = true;
        result.gameAllUserNum_ = value;
        return this;
      }
      public Builder ClearGameAllUserNum() {
        PrepareBuilder();
        result.hasGameAllUserNum = false;
        result.gameAllUserNum_ = 0;
        return this;
      }
    }
    static GameLifeResponsenn100() {
      object.ReferenceEquals(global::gt_msg.GtNn100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GameRankListRequestnn100 : pb::GeneratedMessage<GameRankListRequestnn100, GameRankListRequestnn100.Builder> {
    private GameRankListRequestnn100() { }
    private static readonly GameRankListRequestnn100 defaultInstance = new GameRankListRequestnn100().MakeReadOnly();
    private static readonly string[] _gameRankListRequestnn100FieldNames = new string[] {  };
    private static readonly uint[] _gameRankListRequestnn100FieldTags = new uint[] {  };
    public static GameRankListRequestnn100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameRankListRequestnn100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameRankListRequestnn100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_GameRankListRequestnn100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameRankListRequestnn100, GameRankListRequestnn100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_GameRankListRequestnn100__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _gameRankListRequestnn100FieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GameRankListRequestnn100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameRankListRequestnn100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameRankListRequestnn100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameRankListRequestnn100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameRankListRequestnn100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameRankListRequestnn100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameRankListRequestnn100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameRankListRequestnn100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameRankListRequestnn100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameRankListRequestnn100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameRankListRequestnn100 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameRankListRequestnn100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GameRankListRequestnn100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameRankListRequestnn100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameRankListRequestnn100 result;
      
      private GameRankListRequestnn100 PrepareBuilder() {
        if (resultIsReadOnly) {
          GameRankListRequestnn100 original = result;
          result = new GameRankListRequestnn100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameRankListRequestnn100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.GameRankListRequestnn100.Descriptor; }
      }
      
      public override GameRankListRequestnn100 DefaultInstanceForType {
        get { return global::gt_msg.GameRankListRequestnn100.DefaultInstance; }
      }
      
      public override GameRankListRequestnn100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameRankListRequestnn100) {
          return MergeFrom((GameRankListRequestnn100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameRankListRequestnn100 other) {
        if (other == global::gt_msg.GameRankListRequestnn100.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameRankListRequestnn100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameRankListRequestnn100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static GameRankListRequestnn100() {
      object.ReferenceEquals(global::gt_msg.GtNn100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GameRankListResponsenn100 : pb::GeneratedMessage<GameRankListResponsenn100, GameRankListResponsenn100.Builder> {
    private GameRankListResponsenn100() { }
    private static readonly GameRankListResponsenn100 defaultInstance = new GameRankListResponsenn100().MakeReadOnly();
    private static readonly string[] _gameRankListResponsenn100FieldNames = new string[] { "all_chips", "all_times", "code", "day_win_chips", "uid" };
    private static readonly uint[] _gameRankListResponsenn100FieldTags = new uint[] { 42, 34, 8, 26, 18 };
    public static GameRankListResponsenn100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameRankListResponsenn100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameRankListResponsenn100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_GameRankListResponsenn100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameRankListResponsenn100, GameRankListResponsenn100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_GameRankListResponsenn100__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Code {
        Ok = 0,
        Failed = 1,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.GameRankListResponsenn100.Types.Code code_ = global::gt_msg.GameRankListResponsenn100.Types.Code.Ok;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.GameRankListResponsenn100.Types.Code Code {
      get { return code_; }
    }
    
    public const int UidFieldNumber = 2;
    private bool hasUid;
    private string uid_ = "";
    public bool HasUid {
      get { return hasUid; }
    }
    public string Uid {
      get { return uid_; }
    }
    
    public const int DayWinChipsFieldNumber = 3;
    private pbc::PopsicleList<string> dayWinChips_ = new pbc::PopsicleList<string>();
    public scg::IList<string> DayWinChipsList {
      get { return pbc::Lists.AsReadOnly(dayWinChips_); }
    }
    public int DayWinChipsCount {
      get { return dayWinChips_.Count; }
    }
    public string GetDayWinChips(int index) {
      return dayWinChips_[index];
    }
    
    public const int AllTimesFieldNumber = 4;
    private pbc::PopsicleList<string> allTimes_ = new pbc::PopsicleList<string>();
    public scg::IList<string> AllTimesList {
      get { return pbc::Lists.AsReadOnly(allTimes_); }
    }
    public int AllTimesCount {
      get { return allTimes_.Count; }
    }
    public string GetAllTimes(int index) {
      return allTimes_[index];
    }
    
    public const int AllChipsFieldNumber = 5;
    private pbc::PopsicleList<string> allChips_ = new pbc::PopsicleList<string>();
    public scg::IList<string> AllChipsList {
      get { return pbc::Lists.AsReadOnly(allChips_); }
    }
    public int AllChipsCount {
      get { return allChips_.Count; }
    }
    public string GetAllChips(int index) {
      return allChips_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        if (!hasUid) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _gameRankListResponsenn100FieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[2], (int) Code, Code);
      }
      if (hasUid) {
        output.WriteString(2, field_names[4], Uid);
      }
      if (dayWinChips_.Count > 0) {
        output.WriteStringArray(3, field_names[3], dayWinChips_);
      }
      if (allTimes_.Count > 0) {
        output.WriteStringArray(4, field_names[1], allTimes_);
      }
      if (allChips_.Count > 0) {
        output.WriteStringArray(5, field_names[0], allChips_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Uid);
      }
      {
        int dataSize = 0;
        foreach (string element in DayWinChipsList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * dayWinChips_.Count;
      }
      {
        int dataSize = 0;
        foreach (string element in AllTimesList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * allTimes_.Count;
      }
      {
        int dataSize = 0;
        foreach (string element in AllChipsList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * allChips_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GameRankListResponsenn100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameRankListResponsenn100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameRankListResponsenn100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameRankListResponsenn100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameRankListResponsenn100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameRankListResponsenn100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameRankListResponsenn100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameRankListResponsenn100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameRankListResponsenn100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameRankListResponsenn100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameRankListResponsenn100 MakeReadOnly() {
      dayWinChips_.MakeReadOnly();
      allTimes_.MakeReadOnly();
      allChips_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameRankListResponsenn100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GameRankListResponsenn100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameRankListResponsenn100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameRankListResponsenn100 result;
      
      private GameRankListResponsenn100 PrepareBuilder() {
        if (resultIsReadOnly) {
          GameRankListResponsenn100 original = result;
          result = new GameRankListResponsenn100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameRankListResponsenn100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.GameRankListResponsenn100.Descriptor; }
      }
      
      public override GameRankListResponsenn100 DefaultInstanceForType {
        get { return global::gt_msg.GameRankListResponsenn100.DefaultInstance; }
      }
      
      public override GameRankListResponsenn100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameRankListResponsenn100) {
          return MergeFrom((GameRankListResponsenn100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameRankListResponsenn100 other) {
        if (other == global::gt_msg.GameRankListResponsenn100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasUid) {
          Uid = other.Uid;
        }
        if (other.dayWinChips_.Count != 0) {
          result.dayWinChips_.Add(other.dayWinChips_);
        }
        if (other.allTimes_.Count != 0) {
          result.allTimes_.Add(other.allTimes_);
        }
        if (other.allChips_.Count != 0) {
          result.allChips_.Add(other.allChips_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameRankListResponsenn100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameRankListResponsenn100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasUid = input.ReadString(ref result.uid_);
              break;
            }
            case 26: {
              input.ReadStringArray(tag, field_name, result.dayWinChips_);
              break;
            }
            case 34: {
              input.ReadStringArray(tag, field_name, result.allTimes_);
              break;
            }
            case 42: {
              input.ReadStringArray(tag, field_name, result.allChips_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.GameRankListResponsenn100.Types.Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.GameRankListResponsenn100.Types.Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.GameRankListResponsenn100.Types.Code.Ok;
        return this;
      }
      
      public bool HasUid {
        get { return result.hasUid; }
      }
      public string Uid {
        get { return result.Uid; }
        set { SetUid(value); }
      }
      public Builder SetUid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder ClearUid() {
        PrepareBuilder();
        result.hasUid = false;
        result.uid_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<string> DayWinChipsList {
        get { return PrepareBuilder().dayWinChips_; }
      }
      public int DayWinChipsCount {
        get { return result.DayWinChipsCount; }
      }
      public string GetDayWinChips(int index) {
        return result.GetDayWinChips(index);
      }
      public Builder SetDayWinChips(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.dayWinChips_[index] = value;
        return this;
      }
      public Builder AddDayWinChips(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.dayWinChips_.Add(value);
        return this;
      }
      public Builder AddRangeDayWinChips(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.dayWinChips_.Add(values);
        return this;
      }
      public Builder ClearDayWinChips() {
        PrepareBuilder();
        result.dayWinChips_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> AllTimesList {
        get { return PrepareBuilder().allTimes_; }
      }
      public int AllTimesCount {
        get { return result.AllTimesCount; }
      }
      public string GetAllTimes(int index) {
        return result.GetAllTimes(index);
      }
      public Builder SetAllTimes(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.allTimes_[index] = value;
        return this;
      }
      public Builder AddAllTimes(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.allTimes_.Add(value);
        return this;
      }
      public Builder AddRangeAllTimes(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.allTimes_.Add(values);
        return this;
      }
      public Builder ClearAllTimes() {
        PrepareBuilder();
        result.allTimes_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> AllChipsList {
        get { return PrepareBuilder().allChips_; }
      }
      public int AllChipsCount {
        get { return result.AllChipsCount; }
      }
      public string GetAllChips(int index) {
        return result.GetAllChips(index);
      }
      public Builder SetAllChips(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.allChips_[index] = value;
        return this;
      }
      public Builder AddAllChips(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.allChips_.Add(value);
        return this;
      }
      public Builder AddRangeAllChips(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.allChips_.Add(values);
        return this;
      }
      public Builder ClearAllChips() {
        PrepareBuilder();
        result.allChips_.Clear();
        return this;
      }
    }
    static GameRankListResponsenn100() {
      object.ReferenceEquals(global::gt_msg.GtNn100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GMInfonn100 : pb::GeneratedMessage<GMInfonn100, GMInfonn100.Builder> {
    private GMInfonn100() { }
    private static readonly GMInfonn100 defaultInstance = new GMInfonn100().MakeReadOnly();
    private static readonly string[] _gMInfonn100FieldNames = new string[] { "CardType" };
    private static readonly uint[] _gMInfonn100FieldTags = new uint[] { 8 };
    public static GMInfonn100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GMInfonn100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GMInfonn100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_GMInfonn100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GMInfonn100, GMInfonn100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtNn100.internal__static_gt_msg_GMInfonn100__FieldAccessorTable; }
    }
    
    public const int CardTypeFieldNumber = 1;
    private pbc::PopsicleList<int> cardType_ = new pbc::PopsicleList<int>();
    public scg::IList<int> CardTypeList {
      get { return pbc::Lists.AsReadOnly(cardType_); }
    }
    public int CardTypeCount {
      get { return cardType_.Count; }
    }
    public int GetCardType(int index) {
      return cardType_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _gMInfonn100FieldNames;
      if (cardType_.Count > 0) {
        output.WriteInt32Array(1, field_names[0], cardType_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (int element in CardTypeList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * cardType_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GMInfonn100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GMInfonn100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GMInfonn100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GMInfonn100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GMInfonn100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GMInfonn100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GMInfonn100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GMInfonn100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GMInfonn100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GMInfonn100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GMInfonn100 MakeReadOnly() {
      cardType_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GMInfonn100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GMInfonn100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GMInfonn100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GMInfonn100 result;
      
      private GMInfonn100 PrepareBuilder() {
        if (resultIsReadOnly) {
          GMInfonn100 original = result;
          result = new GMInfonn100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GMInfonn100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.GMInfonn100.Descriptor; }
      }
      
      public override GMInfonn100 DefaultInstanceForType {
        get { return global::gt_msg.GMInfonn100.DefaultInstance; }
      }
      
      public override GMInfonn100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GMInfonn100) {
          return MergeFrom((GMInfonn100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GMInfonn100 other) {
        if (other == global::gt_msg.GMInfonn100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.cardType_.Count != 0) {
          result.cardType_.Add(other.cardType_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gMInfonn100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gMInfonn100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10:
            case 8: {
              input.ReadInt32Array(tag, field_name, result.cardType_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<int> CardTypeList {
        get { return PrepareBuilder().cardType_; }
      }
      public int CardTypeCount {
        get { return result.CardTypeCount; }
      }
      public int GetCardType(int index) {
        return result.GetCardType(index);
      }
      public Builder SetCardType(int index, int value) {
        PrepareBuilder();
        result.cardType_[index] = value;
        return this;
      }
      public Builder AddCardType(int value) {
        PrepareBuilder();
        result.cardType_.Add(value);
        return this;
      }
      public Builder AddRangeCardType(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.cardType_.Add(values);
        return this;
      }
      public Builder ClearCardType() {
        PrepareBuilder();
        result.cardType_.Clear();
        return this;
      }
    }
    static GMInfonn100() {
      object.ReferenceEquals(global::gt_msg.GtNn100.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
