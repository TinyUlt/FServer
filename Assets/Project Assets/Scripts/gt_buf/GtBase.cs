// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace gt_msg {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class GtBase {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_gt_msg_User__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.User, global::gt_msg.User.Builder> internal__static_gt_msg_User__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_CommonError__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.CommonError, global::gt_msg.CommonError.Builder> internal__static_gt_msg_CommonError__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_HHRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.HHRequest, global::gt_msg.HHRequest.Builder> internal__static_gt_msg_HHRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_HHResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.HHResponse, global::gt_msg.HHResponse.Builder> internal__static_gt_msg_HHResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_LoginRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.LoginRequest, global::gt_msg.LoginRequest.Builder> internal__static_gt_msg_LoginRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_LoginResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.LoginResponse, global::gt_msg.LoginResponse.Builder> internal__static_gt_msg_LoginResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_LogoutRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.LogoutRequest, global::gt_msg.LogoutRequest.Builder> internal__static_gt_msg_LogoutRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_LogoutResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.LogoutResponse, global::gt_msg.LogoutResponse.Builder> internal__static_gt_msg_LogoutResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_ItemChangedEvent__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.ItemChangedEvent, global::gt_msg.ItemChangedEvent.Builder> internal__static_gt_msg_ItemChangedEvent__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_OnLineMembersRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.OnLineMembersRequest, global::gt_msg.OnLineMembersRequest.Builder> internal__static_gt_msg_OnLineMembersRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_OnLineMembersResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.OnLineMembersResponse, global::gt_msg.OnLineMembersResponse.Builder> internal__static_gt_msg_OnLineMembersResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_BXXSetRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.BXXSetRequest, global::gt_msg.BXXSetRequest.Builder> internal__static_gt_msg_BXXSetRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_BXXSetResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.BXXSetResponse, global::gt_msg.BXXSetResponse.Builder> internal__static_gt_msg_BXXSetResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_UserChatMsgRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserChatMsgRequest, global::gt_msg.UserChatMsgRequest.Builder> internal__static_gt_msg_UserChatMsgRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_UserChatMsgResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserChatMsgResponse, global::gt_msg.UserChatMsgResponse.Builder> internal__static_gt_msg_UserChatMsgResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_UserCancleTGRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserCancleTGRequest, global::gt_msg.UserCancleTGRequest.Builder> internal__static_gt_msg_UserCancleTGRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_UserMessageIdRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserMessageIdRequest, global::gt_msg.UserMessageIdRequest.Builder> internal__static_gt_msg_UserMessageIdRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_UserMessageIdList__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserMessageIdList, global::gt_msg.UserMessageIdList.Builder> internal__static_gt_msg_UserMessageIdList__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_UserMessageRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserMessageRequest, global::gt_msg.UserMessageRequest.Builder> internal__static_gt_msg_UserMessageRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_UserMessageResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserMessageResponse, global::gt_msg.UserMessageResponse.Builder> internal__static_gt_msg_UserMessageResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_UserMessageActionRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserMessageActionRequest, global::gt_msg.UserMessageActionRequest.Builder> internal__static_gt_msg_UserMessageActionRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_UserMessageActionResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserMessageActionResponse, global::gt_msg.UserMessageActionResponse.Builder> internal__static_gt_msg_UserMessageActionResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_EnterTableInfoRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.EnterTableInfoRequest, global::gt_msg.EnterTableInfoRequest.Builder> internal__static_gt_msg_EnterTableInfoRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_EnterInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.EnterInfo, global::gt_msg.EnterInfo.Builder> internal__static_gt_msg_EnterInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_EnterTableInfoResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.EnterTableInfoResponse, global::gt_msg.EnterTableInfoResponse.Builder> internal__static_gt_msg_EnterTableInfoResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_AlterNicknameRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.AlterNicknameRequest, global::gt_msg.AlterNicknameRequest.Builder> internal__static_gt_msg_AlterNicknameRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_AlterNicknameResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.AlterNicknameResponse, global::gt_msg.AlterNicknameResponse.Builder> internal__static_gt_msg_AlterNicknameResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_EnterGameNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.EnterGameNotification, global::gt_msg.EnterGameNotification.Builder> internal__static_gt_msg_EnterGameNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_UserInfoRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserInfoRequest, global::gt_msg.UserInfoRequest.Builder> internal__static_gt_msg_UserInfoRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_UserInfoResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserInfoResponse, global::gt_msg.UserInfoResponse.Builder> internal__static_gt_msg_UserInfoResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_UserDoHornRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserDoHornRequest, global::gt_msg.UserDoHornRequest.Builder> internal__static_gt_msg_UserDoHornRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_UserDoHornResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserDoHornResponse, global::gt_msg.UserDoHornResponse.Builder> internal__static_gt_msg_UserDoHornResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_PushMessageResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.PushMessageResponse, global::gt_msg.PushMessageResponse.Builder> internal__static_gt_msg_PushMessageResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_LoginPrizeRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.LoginPrizeRequest, global::gt_msg.LoginPrizeRequest.Builder> internal__static_gt_msg_LoginPrizeRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_LoginPrizeResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.LoginPrizeResponse, global::gt_msg.LoginPrizeResponse.Builder> internal__static_gt_msg_LoginPrizeResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_RegUserRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.RegUserRequest, global::gt_msg.RegUserRequest.Builder> internal__static_gt_msg_RegUserRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_RegUserResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.RegUserResponse, global::gt_msg.RegUserResponse.Builder> internal__static_gt_msg_RegUserResponse__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static GtBase() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1ndF9iYXNlLnByb3RvEgZndF9tc2ci/AEKBFVzZXISDgoGdXNlcmlkGAEg", 
            "AigJEhEKCWxvZ2lubmFtZRgCIAIoCRIQCghuaWNrbmFtZRgDIAIoCRIbCgNz", 
            "ZXgYBCACKA4yDi5ndF9tc2cuR2VuZGVyEhAKCHVzZXJmbGFnGAUgASgFEg8K", 
            "B2ZhY2VVcmwYBiACKAkSDwoHY2hhbm5lbBgHIAEoBRISCgpjcmVhdGV0aW1l", 
            "GAggASgFEg4KBmlkY2FyZBgJIAEoCRINCgVlbWFpbBgKIAEoCRIOCgZtb2Jp", 
            "bGUYCyABKAkSFAoIaXRlbXNfaWQYDCADKAVCAhABEhUKCWl0ZW1zX251bRgN", 
            "IAMoA0ICEAEirwEKC0NvbW1vbkVycm9yEjEKBGNvZGUYASACKA4yIy5ndF9t", 
            "c2cuQ29tbW9uRXJyb3IuQ29tbW9uRXJyb3JDb2RlIm0KD0NvbW1vbkVycm9y", 
            "Q29kZRIPCgtTZXNzaW9uTG9zdBABEhAKDFVua25vd25FcnJvchACEhUKEVNl", 
            "cnZlck1haW50ZW5hbmNlEAMSDgoKU2VydmVyQnVzeRAEEhAKDEVyckNvbW1v", 
            "blJlcRAFIgsKCUhIUmVxdWVzdCIjCgpISFJlc3BvbnNlEhUKDXNlcnZlclRp", 
            "bWVOb3cYASABKAUiTgoMTG9naW5SZXF1ZXN0EgwKBG5hbWUYASABKAkSEAoI", 
            "cGFzc3dvcmQYAiABKAkSEQoJc2Vzc2lvbmlkGAMgASgJEgsKA3VpZBgEIAEo", 
            "CSL3AgoNTG9naW5SZXNwb25zZRI1CgRjb2RlGAEgAigOMicuZ3RfbXNnLkxv", 
            "Z2luUmVzcG9uc2UuTG9naW5SZXNwb25zZUNvZGUSGgoEdXNlchgCIAEoCzIM", 
            "Lmd0X21zZy5Vc2VyEg4KBnNpZ25lZBgDIAEoBRIQCghnYW1lTmFtZRgEIAMo", 
            "CRIQCghob3JuaXRlbRgFIAEoBRITCgtob3JuaXRlbW51bRgGIAEoBRIOCgZo", 
            "b3JubHYYByABKAUSEQoJbG9naW5kYXlzGAggASgFEhUKDWxvZ2luaXRlbXR5", 
            "cGUYCSADKAUSFAoMbG9naW5pdGVtbnVtGAogAygFEhYKDmxvZ2lucHJpemVy", 
            "YXRlGAsgAygFImIKEUxvZ2luUmVzcG9uc2VDb2RlEgYKAk9LEAASDQoJRm9y", 
            "YmlkZGVuEAESEgoOTm9TdWNoVXNlclBhc3MQAhITCg9PbGRQbGF5ZXJLaWNr", 
            "ZWQQAxINCglDb29raWVCYWQQBCIcCg1Mb2dvdXRSZXF1ZXN0EgsKA3VpZBgB", 
            "IAIoCSKrAQoOTG9nb3V0UmVzcG9uc2USNwoEY29kZRgBIAIoDjIpLmd0X21z", 
            "Zy5Mb2dvdXRSZXNwb25zZS5Mb2dvdXRSZXNwb25zZUNvZGUiYAoSTG9nb3V0", 
            "UmVzcG9uc2VDb2RlEgYKAk9rEAASDQoJRm9yYmlkZGVuEAESCAoERmFpbBAC", 
            "Eg4KCk90aGVyTG9naW4QAxIZChVXaWxsRXhpdEZvck90aGVyTG9naW4QBCI7", 
            "ChBJdGVtQ2hhbmdlZEV2ZW50EhEKCUl0ZW1UeXBlcxgBIAMoBRIUCghJdGVt", 
            "TnVtcxgCIAMoA0ICEAEiNwoUT25MaW5lTWVtYmVyc1JlcXVlc3QSEAoIZ2Ft", 
            "ZU5hbWUYASACKAkSDQoFbGV2ZWwYAiACKAUiRwoVT25MaW5lTWVtYmVyc1Jl", 
            "c3BvbnNlEhAKCGdhbWVOYW1lGAEgAigJEg0KBWxldmVsGAIgAigFEg0KBWNv", 
            "dW50GAMgAigFIi4KDUJYWFNldFJlcXVlc3QSDgoGaW5IYW5kGAEgAigDEg0K", 
            "BWluQlhYGAIgAigDInYKDkJYWFNldFJlc3BvbnNlEikKBGNvZGUYASACKA4y", 
            "Gy5ndF9tc2cuQlhYU2V0UmVzcG9uc2UuQ29kZRIOCgZpbkhhbmQYAiABKAMS", 
            "DQoFaW5CWFgYAyABKAMiGgoEQ29kZRIGCgJPaxAAEgoKBkZhaWxlZBABIkoK", 
            "ElVzZXJDaGF0TXNnUmVxdWVzdBILCgN1aWQYASACKAkSCwoDbXNnGAIgASgJ", 
            "EgwKBHR5cGUYAyACKAUSDAoEdm1zZxgEIAEoDCJLChNVc2VyQ2hhdE1zZ1Jl", 
            "c3BvbnNlEgsKA3VpZBgBIAIoCRILCgNtc2cYAiABKAkSDAoEdHlwZRgDIAIo", 
            "BRIMCgR2bXNnGAQgASgMIhUKE1VzZXJDYW5jbGVUR1JlcXVlc3QiFgoUVXNl", 
            "ck1lc3NhZ2VJZFJlcXVlc3QiIAoRVXNlck1lc3NhZ2VJZExpc3QSCwoDaWRz", 
            "GAEgAygFIiEKElVzZXJNZXNzYWdlUmVxdWVzdBILCgNpZHMYASADKAUi4AEK", 
            "E1VzZXJNZXNzYWdlUmVzcG9uc2USPQoIbXNnX3R5cGUYASACKA4yKy5ndF9t", 
            "c2cuVXNlck1lc3NhZ2VSZXNwb25zZS5Vc2VyTWVzc2FnZVR5cGUSDgoGbXNn", 
            "X2lkGAIgAigFEhAKCGhhc19yZWFkGAMgAigIEhMKC3NlbmRlcl9uaWNrGAQg", 
            "AigJEhMKC2pzb25fcGFyYW1zGAUgAigJEhAKCG1zZ190aW1lGAYgAigJIiwK", 
            "D1VzZXJNZXNzYWdlVHlwZRIICgRUZXh0EAASDwoLVGV4dEFuZEl0ZW0QASK1", 
            "AQoYVXNlck1lc3NhZ2VBY3Rpb25SZXF1ZXN0EkYKBmFjdGlvbhgBIAIoDjI2", 
            "Lmd0X21zZy5Vc2VyTWVzc2FnZUFjdGlvblJlcXVlc3QuVXNlck1lc3NhZ2VB", 
            "Y3Rpb25Db2RlEg4KBm1zZ19pZBgCIAIoBSJBChVVc2VyTWVzc2FnZUFjdGlv", 
            "bkNvZGUSCgoGRGVsZXRlEAASDgoKTWFya0FzUmVhZBABEgwKCFBpY2tJdGVt", 
            "EAIiyAIKGVVzZXJNZXNzYWdlQWN0aW9uUmVzcG9uc2USRgoEY29kZRgBIAIo", 
            "DjI4Lmd0X21zZy5Vc2VyTWVzc2FnZUFjdGlvblJlc3BvbnNlLlVzZXJNZXNz", 
            "YWdlQWN0UmVzcENvZGUSDgoGbXNnX2lkGAIgAigFEhYKCml0ZW1fdHlwZXMY", 
            "AyADKAVCAhABEhgKDGl0ZW1fYW1vdW50cxgEIAMoBUICEAESRgoGYWN0aW9u", 
            "GAUgASgOMjYuZ3RfbXNnLlVzZXJNZXNzYWdlQWN0aW9uUmVxdWVzdC5Vc2Vy", 
            "TWVzc2FnZUFjdGlvbkNvZGUiWQoWVXNlck1lc3NhZ2VBY3RSZXNwQ29kZRIG", 
            "CgJPaxAAEg4KCk5vU3VjaERhdGEQARIVChFJdGVtQWxyZWFkeVBpY2tlZBAC", 
            "EhAKDEl0ZW1Ob3RFeGlzdBADIjcKFUVudGVyVGFibGVJbmZvUmVxdWVzdBIQ", 
            "CghnYW1lTmFtZRgBIAIoCRIMCgR0eXBlGAIgASgFIqoBCglFbnRlckluZm8S", 
            "EQoJYmFzZVBvaW50GAEgAygFEhQKDG1pbkVudGVyVHlwZRgCIAIoBRIUCght", 
            "aW5FbnRlchgDIAMoBUICEAESFgoObWluS2lja091dFR5cGUYBCACKAUSEgoK", 
            "bWluS2lja091dBgFIAMoBRIQCghtYXhSb3VuZBgGIAEoBRINCgVsZXZlbBgH", 
            "IAIoBRIRCglPbmxpbmVOdW0YCCACKAUiSwoWRW50ZXJUYWJsZUluZm9SZXNw", 
            "b25zZRIQCghnYW1lTmFtZRgBIAIoCRIfCgRpbmZvGAIgAygLMhEuZ3RfbXNn", 
            "LkVudGVySW5mbyIoChRBbHRlck5pY2tuYW1lUmVxdWVzdBIQCghuaWNrbmFt", 
            "ZRgBIAIoCSLJAQoVQWx0ZXJOaWNrbmFtZVJlc3BvbnNlEjAKBGNvZGUYASAC", 
            "KA4yIi5ndF9tc2cuQWx0ZXJOaWNrbmFtZVJlc3BvbnNlLkNvZGUSEAoIbmlj", 
            "a25hbWUYAiACKAkibAoEQ29kZRIGCgJPaxAAEgoKBkZhaWxlZBABEg8KC0lu", 
            "dmFsaWRDaGFyEAISEQoNSW52YWxpZExlbmd0aBADEg0KCUR1cGxpY2F0ZRAE", 
            "EgsKB0JhZFdvcmQQBRIQCgxDb3VudEV4aGF1c3QQBiIyChVFbnRlckdhbWVO", 
            "b3RpZmljYXRpb24SCwoDdWlkGAEgAigJEgwKBGFkZHIYAiACKAkiEQoPVXNl", 
            "ckluZm9SZXF1ZXN0Ii4KEFVzZXJJbmZvUmVzcG9uc2USGgoEdXNlchgBIAIo", 
            "CzIMLmd0X21zZy5Vc2VyIjAKEVVzZXJEb0hvcm5SZXF1ZXN0Eg8KB0NvbnRl", 
            "eHQYASACKAkSCgoCbHYYAiABKAUiqAEKElVzZXJEb0hvcm5SZXNwb25zZRI7", 
            "CgRjb2RlGAEgAigOMi0uZ3RfbXNnLlVzZXJEb0hvcm5SZXNwb25zZS5Vc2Vy", 
            "RG9Ib3JuUmVzcENvZGUSDgoGaXRlbU5vGAIgASgFEg8KB2l0ZW1OdW0YAyAB", 
            "KAUiNAoSVXNlckRvSG9yblJlc3BDb2RlEgYKAk9rEAASCwoHTm9Nb25leRAB", 
            "EgkKBU90aGVyEAIimwEKE1B1c2hNZXNzYWdlUmVzcG9uc2USEwoLVGl0bGVf", 
            "Y29sb3IYASACKAkSDQoFVGl0bGUYAiACKAkSFQoNQ29udGV4dF9jb2xvchgD", 
            "IAIoCRIPCgdDb250ZXh0GAQgAigJEhAKCE1zZ190eXBlGAUgAigFEhIKCkRl", 
            "bGF5X3RpbWUYBiACKAUSEgoKTXNnX3NlbmRlchgHIAIoCSITChFMb2dpblBy", 
            "aXplUmVxdWVzdCLTAQoSTG9naW5Qcml6ZVJlc3BvbnNlEjsKBGNvZGUYASAC", 
            "KA4yLS5ndF9tc2cuTG9naW5Qcml6ZVJlc3BvbnNlLkxvZ2luUHJpemVSZXNw", 
            "Q29kZRISCgpwcml6ZWluZGV4GAIgASgFEhEKCXByaXpldHlwZRgDIAEoBRIQ", 
            "Cghwcml6ZW51bRgEIAEoBRIRCglwcml6ZXJhdGUYBSABKAUiNAoSTG9naW5Q", 
            "cml6ZVJlc3BDb2RlEgYKAk9LEAASCwoHTm9UaW1lcxABEgkKBU90aGVyEAIi", 
            "vwEKDlJlZ1VzZXJSZXF1ZXN0EhEKCWxvZ2lubmFtZRgBIAIoCRIQCghuaWNr", 
            "bmFtZRgCIAIoCRIKCgJwdxgDIAIoCRIOCgZjYXJkaWQYBCACKAkSDgoGbW9i", 
            "aWxlGAUgAigJEg8KB2NoYW5uZWwYBiACKAUSEAoIcGxhdGZvcm0YByACKAUS", 
            "CwoDc2V4GAggASgFEg8KB2ZhY2V1cmwYCSABKAkSDAoEcHVpZBgKIAEoCRIN", 
            "CgVkZXZpZBgLIAEoCSLvAQoPUmVnVXNlclJlc3BvbnNlEjUKBGNvZGUYASAC", 
            "KA4yJy5ndF9tc2cuUmVnVXNlclJlc3BvbnNlLlJlZ1VzZXJSZXNwQ29kZSKk", 
            "AQoPUmVnVXNlclJlc3BDb2RlEgYKAk9LEAASEgoOTG9naW5uYW1lZXhpc3QQ", 
            "ARIRCg1uaWNrbmFtZWV4aXN0EAISDAoIcHdsZW5lcnIQAxINCgljYXJkaWRl", 
            "cnIQBBINCgltb2JpbGVlcnIQBRISCg5jYXJkaWR0aW1lc2VychAGEhIKDm1v", 
            "YmlsZXRpbWVzZXJyEAcSDgoKY2hhbm5lbGVychAIKisKBkdlbmRlchIICgRN", 
            "YWxlEAASCgoGRmVtYWxlEAESCwoHVW5rbm93bhACKhYKBFJ1bGUSDgoKUnVs", 
            "ZU5vcm1hbBAAKmAKBFJhbmsSBwoDTFYwEAASBwoDTFYxEAESBwoDTFYyEAIS", 
            "BwoDTFYzEAMSBwoDTFY0EAQSBwoDTFY1EAUSBwoDTFY2EAYSBwoDTFY3EAcS", 
          "BwoDTFY4EAgSBwoDTFY5EAk="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_gt_msg_User__Descriptor = Descriptor.MessageTypes[0];
        internal__static_gt_msg_User__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.User, global::gt_msg.User.Builder>(internal__static_gt_msg_User__Descriptor,
                new string[] { "Userid", "Loginname", "Nickname", "Sex", "Userflag", "FaceUrl", "Channel", "Createtime", "Idcard", "Email", "Mobile", "ItemsId", "ItemsNum", });
        internal__static_gt_msg_CommonError__Descriptor = Descriptor.MessageTypes[1];
        internal__static_gt_msg_CommonError__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.CommonError, global::gt_msg.CommonError.Builder>(internal__static_gt_msg_CommonError__Descriptor,
                new string[] { "Code", });
        internal__static_gt_msg_HHRequest__Descriptor = Descriptor.MessageTypes[2];
        internal__static_gt_msg_HHRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.HHRequest, global::gt_msg.HHRequest.Builder>(internal__static_gt_msg_HHRequest__Descriptor,
                new string[] { });
        internal__static_gt_msg_HHResponse__Descriptor = Descriptor.MessageTypes[3];
        internal__static_gt_msg_HHResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.HHResponse, global::gt_msg.HHResponse.Builder>(internal__static_gt_msg_HHResponse__Descriptor,
                new string[] { "ServerTimeNow", });
        internal__static_gt_msg_LoginRequest__Descriptor = Descriptor.MessageTypes[4];
        internal__static_gt_msg_LoginRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.LoginRequest, global::gt_msg.LoginRequest.Builder>(internal__static_gt_msg_LoginRequest__Descriptor,
                new string[] { "Name", "Password", "Sessionid", "Uid", });
        internal__static_gt_msg_LoginResponse__Descriptor = Descriptor.MessageTypes[5];
        internal__static_gt_msg_LoginResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.LoginResponse, global::gt_msg.LoginResponse.Builder>(internal__static_gt_msg_LoginResponse__Descriptor,
                new string[] { "Code", "User", "Signed", "GameName", "Hornitem", "Hornitemnum", "Hornlv", "Logindays", "Loginitemtype", "Loginitemnum", "Loginprizerate", });
        internal__static_gt_msg_LogoutRequest__Descriptor = Descriptor.MessageTypes[6];
        internal__static_gt_msg_LogoutRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.LogoutRequest, global::gt_msg.LogoutRequest.Builder>(internal__static_gt_msg_LogoutRequest__Descriptor,
                new string[] { "Uid", });
        internal__static_gt_msg_LogoutResponse__Descriptor = Descriptor.MessageTypes[7];
        internal__static_gt_msg_LogoutResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.LogoutResponse, global::gt_msg.LogoutResponse.Builder>(internal__static_gt_msg_LogoutResponse__Descriptor,
                new string[] { "Code", });
        internal__static_gt_msg_ItemChangedEvent__Descriptor = Descriptor.MessageTypes[8];
        internal__static_gt_msg_ItemChangedEvent__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.ItemChangedEvent, global::gt_msg.ItemChangedEvent.Builder>(internal__static_gt_msg_ItemChangedEvent__Descriptor,
                new string[] { "ItemTypes", "ItemNums", });
        internal__static_gt_msg_OnLineMembersRequest__Descriptor = Descriptor.MessageTypes[9];
        internal__static_gt_msg_OnLineMembersRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.OnLineMembersRequest, global::gt_msg.OnLineMembersRequest.Builder>(internal__static_gt_msg_OnLineMembersRequest__Descriptor,
                new string[] { "GameName", "Level", });
        internal__static_gt_msg_OnLineMembersResponse__Descriptor = Descriptor.MessageTypes[10];
        internal__static_gt_msg_OnLineMembersResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.OnLineMembersResponse, global::gt_msg.OnLineMembersResponse.Builder>(internal__static_gt_msg_OnLineMembersResponse__Descriptor,
                new string[] { "GameName", "Level", "Count", });
        internal__static_gt_msg_BXXSetRequest__Descriptor = Descriptor.MessageTypes[11];
        internal__static_gt_msg_BXXSetRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.BXXSetRequest, global::gt_msg.BXXSetRequest.Builder>(internal__static_gt_msg_BXXSetRequest__Descriptor,
                new string[] { "InHand", "InBXX", });
        internal__static_gt_msg_BXXSetResponse__Descriptor = Descriptor.MessageTypes[12];
        internal__static_gt_msg_BXXSetResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.BXXSetResponse, global::gt_msg.BXXSetResponse.Builder>(internal__static_gt_msg_BXXSetResponse__Descriptor,
                new string[] { "Code", "InHand", "InBXX", });
        internal__static_gt_msg_UserChatMsgRequest__Descriptor = Descriptor.MessageTypes[13];
        internal__static_gt_msg_UserChatMsgRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserChatMsgRequest, global::gt_msg.UserChatMsgRequest.Builder>(internal__static_gt_msg_UserChatMsgRequest__Descriptor,
                new string[] { "Uid", "Msg", "Type", "Vmsg", });
        internal__static_gt_msg_UserChatMsgResponse__Descriptor = Descriptor.MessageTypes[14];
        internal__static_gt_msg_UserChatMsgResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserChatMsgResponse, global::gt_msg.UserChatMsgResponse.Builder>(internal__static_gt_msg_UserChatMsgResponse__Descriptor,
                new string[] { "Uid", "Msg", "Type", "Vmsg", });
        internal__static_gt_msg_UserCancleTGRequest__Descriptor = Descriptor.MessageTypes[15];
        internal__static_gt_msg_UserCancleTGRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserCancleTGRequest, global::gt_msg.UserCancleTGRequest.Builder>(internal__static_gt_msg_UserCancleTGRequest__Descriptor,
                new string[] { });
        internal__static_gt_msg_UserMessageIdRequest__Descriptor = Descriptor.MessageTypes[16];
        internal__static_gt_msg_UserMessageIdRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserMessageIdRequest, global::gt_msg.UserMessageIdRequest.Builder>(internal__static_gt_msg_UserMessageIdRequest__Descriptor,
                new string[] { });
        internal__static_gt_msg_UserMessageIdList__Descriptor = Descriptor.MessageTypes[17];
        internal__static_gt_msg_UserMessageIdList__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserMessageIdList, global::gt_msg.UserMessageIdList.Builder>(internal__static_gt_msg_UserMessageIdList__Descriptor,
                new string[] { "Ids", });
        internal__static_gt_msg_UserMessageRequest__Descriptor = Descriptor.MessageTypes[18];
        internal__static_gt_msg_UserMessageRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserMessageRequest, global::gt_msg.UserMessageRequest.Builder>(internal__static_gt_msg_UserMessageRequest__Descriptor,
                new string[] { "Ids", });
        internal__static_gt_msg_UserMessageResponse__Descriptor = Descriptor.MessageTypes[19];
        internal__static_gt_msg_UserMessageResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserMessageResponse, global::gt_msg.UserMessageResponse.Builder>(internal__static_gt_msg_UserMessageResponse__Descriptor,
                new string[] { "MsgType", "MsgId", "HasRead", "SenderNick", "JsonParams", "MsgTime", });
        internal__static_gt_msg_UserMessageActionRequest__Descriptor = Descriptor.MessageTypes[20];
        internal__static_gt_msg_UserMessageActionRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserMessageActionRequest, global::gt_msg.UserMessageActionRequest.Builder>(internal__static_gt_msg_UserMessageActionRequest__Descriptor,
                new string[] { "Action", "MsgId", });
        internal__static_gt_msg_UserMessageActionResponse__Descriptor = Descriptor.MessageTypes[21];
        internal__static_gt_msg_UserMessageActionResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserMessageActionResponse, global::gt_msg.UserMessageActionResponse.Builder>(internal__static_gt_msg_UserMessageActionResponse__Descriptor,
                new string[] { "Code", "MsgId", "ItemTypes", "ItemAmounts", "Action", });
        internal__static_gt_msg_EnterTableInfoRequest__Descriptor = Descriptor.MessageTypes[22];
        internal__static_gt_msg_EnterTableInfoRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.EnterTableInfoRequest, global::gt_msg.EnterTableInfoRequest.Builder>(internal__static_gt_msg_EnterTableInfoRequest__Descriptor,
                new string[] { "GameName", "Type", });
        internal__static_gt_msg_EnterInfo__Descriptor = Descriptor.MessageTypes[23];
        internal__static_gt_msg_EnterInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.EnterInfo, global::gt_msg.EnterInfo.Builder>(internal__static_gt_msg_EnterInfo__Descriptor,
                new string[] { "BasePoint", "MinEnterType", "MinEnter", "MinKickOutType", "MinKickOut", "MaxRound", "Level", "OnlineNum", });
        internal__static_gt_msg_EnterTableInfoResponse__Descriptor = Descriptor.MessageTypes[24];
        internal__static_gt_msg_EnterTableInfoResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.EnterTableInfoResponse, global::gt_msg.EnterTableInfoResponse.Builder>(internal__static_gt_msg_EnterTableInfoResponse__Descriptor,
                new string[] { "GameName", "Info", });
        internal__static_gt_msg_AlterNicknameRequest__Descriptor = Descriptor.MessageTypes[25];
        internal__static_gt_msg_AlterNicknameRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.AlterNicknameRequest, global::gt_msg.AlterNicknameRequest.Builder>(internal__static_gt_msg_AlterNicknameRequest__Descriptor,
                new string[] { "Nickname", });
        internal__static_gt_msg_AlterNicknameResponse__Descriptor = Descriptor.MessageTypes[26];
        internal__static_gt_msg_AlterNicknameResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.AlterNicknameResponse, global::gt_msg.AlterNicknameResponse.Builder>(internal__static_gt_msg_AlterNicknameResponse__Descriptor,
                new string[] { "Code", "Nickname", });
        internal__static_gt_msg_EnterGameNotification__Descriptor = Descriptor.MessageTypes[27];
        internal__static_gt_msg_EnterGameNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.EnterGameNotification, global::gt_msg.EnterGameNotification.Builder>(internal__static_gt_msg_EnterGameNotification__Descriptor,
                new string[] { "Uid", "Addr", });
        internal__static_gt_msg_UserInfoRequest__Descriptor = Descriptor.MessageTypes[28];
        internal__static_gt_msg_UserInfoRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserInfoRequest, global::gt_msg.UserInfoRequest.Builder>(internal__static_gt_msg_UserInfoRequest__Descriptor,
                new string[] { });
        internal__static_gt_msg_UserInfoResponse__Descriptor = Descriptor.MessageTypes[29];
        internal__static_gt_msg_UserInfoResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserInfoResponse, global::gt_msg.UserInfoResponse.Builder>(internal__static_gt_msg_UserInfoResponse__Descriptor,
                new string[] { "User", });
        internal__static_gt_msg_UserDoHornRequest__Descriptor = Descriptor.MessageTypes[30];
        internal__static_gt_msg_UserDoHornRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserDoHornRequest, global::gt_msg.UserDoHornRequest.Builder>(internal__static_gt_msg_UserDoHornRequest__Descriptor,
                new string[] { "Context", "Lv", });
        internal__static_gt_msg_UserDoHornResponse__Descriptor = Descriptor.MessageTypes[31];
        internal__static_gt_msg_UserDoHornResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserDoHornResponse, global::gt_msg.UserDoHornResponse.Builder>(internal__static_gt_msg_UserDoHornResponse__Descriptor,
                new string[] { "Code", "ItemNo", "ItemNum", });
        internal__static_gt_msg_PushMessageResponse__Descriptor = Descriptor.MessageTypes[32];
        internal__static_gt_msg_PushMessageResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.PushMessageResponse, global::gt_msg.PushMessageResponse.Builder>(internal__static_gt_msg_PushMessageResponse__Descriptor,
                new string[] { "TitleColor", "Title", "ContextColor", "Context", "MsgType", "DelayTime", "MsgSender", });
        internal__static_gt_msg_LoginPrizeRequest__Descriptor = Descriptor.MessageTypes[33];
        internal__static_gt_msg_LoginPrizeRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.LoginPrizeRequest, global::gt_msg.LoginPrizeRequest.Builder>(internal__static_gt_msg_LoginPrizeRequest__Descriptor,
                new string[] { });
        internal__static_gt_msg_LoginPrizeResponse__Descriptor = Descriptor.MessageTypes[34];
        internal__static_gt_msg_LoginPrizeResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.LoginPrizeResponse, global::gt_msg.LoginPrizeResponse.Builder>(internal__static_gt_msg_LoginPrizeResponse__Descriptor,
                new string[] { "Code", "Prizeindex", "Prizetype", "Prizenum", "Prizerate", });
        internal__static_gt_msg_RegUserRequest__Descriptor = Descriptor.MessageTypes[35];
        internal__static_gt_msg_RegUserRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.RegUserRequest, global::gt_msg.RegUserRequest.Builder>(internal__static_gt_msg_RegUserRequest__Descriptor,
                new string[] { "Loginname", "Nickname", "Pw", "Cardid", "Mobile", "Channel", "Platform", "Sex", "Faceurl", "Puid", "Devid", });
        internal__static_gt_msg_RegUserResponse__Descriptor = Descriptor.MessageTypes[36];
        internal__static_gt_msg_RegUserResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.RegUserResponse, global::gt_msg.RegUserResponse.Builder>(internal__static_gt_msg_RegUserResponse__Descriptor,
                new string[] { "Code", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum Gender {
    Male = 0,
    Female = 1,
    Unknown = 2,
  }
  
  public enum Rule {
    RuleNormal = 0,
  }
  
  public enum Rank {
    LV0 = 0,
    LV1 = 1,
    LV2 = 2,
    LV3 = 3,
    LV4 = 4,
    LV5 = 5,
    LV6 = 6,
    LV7 = 7,
    LV8 = 8,
    LV9 = 9,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class User : pb::GeneratedMessage<User, User.Builder> {
    private User() { }
    private static readonly User defaultInstance = new User().MakeReadOnly();
    private static readonly string[] _userFieldNames = new string[] { "channel", "createtime", "email", "faceUrl", "idcard", "items_id", "items_num", "loginname", "mobile", "nickname", "sex", "userflag", "userid" };
    private static readonly uint[] _userFieldTags = new uint[] { 56, 64, 82, 50, 74, 98, 106, 18, 90, 26, 32, 40, 10 };
    public static User DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override User DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override User ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_User__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<User, User.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_User__FieldAccessorTable; }
    }
    
    public const int UseridFieldNumber = 1;
    private bool hasUserid;
    private string userid_ = "";
    public bool HasUserid {
      get { return hasUserid; }
    }
    public string Userid {
      get { return userid_; }
    }
    
    public const int LoginnameFieldNumber = 2;
    private bool hasLoginname;
    private string loginname_ = "";
    public bool HasLoginname {
      get { return hasLoginname; }
    }
    public string Loginname {
      get { return loginname_; }
    }
    
    public const int NicknameFieldNumber = 3;
    private bool hasNickname;
    private string nickname_ = "";
    public bool HasNickname {
      get { return hasNickname; }
    }
    public string Nickname {
      get { return nickname_; }
    }
    
    public const int SexFieldNumber = 4;
    private bool hasSex;
    private global::gt_msg.Gender sex_ = global::gt_msg.Gender.Male;
    public bool HasSex {
      get { return hasSex; }
    }
    public global::gt_msg.Gender Sex {
      get { return sex_; }
    }
    
    public const int UserflagFieldNumber = 5;
    private bool hasUserflag;
    private int userflag_;
    public bool HasUserflag {
      get { return hasUserflag; }
    }
    public int Userflag {
      get { return userflag_; }
    }
    
    public const int FaceUrlFieldNumber = 6;
    private bool hasFaceUrl;
    private string faceUrl_ = "";
    public bool HasFaceUrl {
      get { return hasFaceUrl; }
    }
    public string FaceUrl {
      get { return faceUrl_; }
    }
    
    public const int ChannelFieldNumber = 7;
    private bool hasChannel;
    private int channel_;
    public bool HasChannel {
      get { return hasChannel; }
    }
    public int Channel {
      get { return channel_; }
    }
    
    public const int CreatetimeFieldNumber = 8;
    private bool hasCreatetime;
    private int createtime_;
    public bool HasCreatetime {
      get { return hasCreatetime; }
    }
    public int Createtime {
      get { return createtime_; }
    }
    
    public const int IdcardFieldNumber = 9;
    private bool hasIdcard;
    private string idcard_ = "";
    public bool HasIdcard {
      get { return hasIdcard; }
    }
    public string Idcard {
      get { return idcard_; }
    }
    
    public const int EmailFieldNumber = 10;
    private bool hasEmail;
    private string email_ = "";
    public bool HasEmail {
      get { return hasEmail; }
    }
    public string Email {
      get { return email_; }
    }
    
    public const int MobileFieldNumber = 11;
    private bool hasMobile;
    private string mobile_ = "";
    public bool HasMobile {
      get { return hasMobile; }
    }
    public string Mobile {
      get { return mobile_; }
    }
    
    public const int ItemsIdFieldNumber = 12;
    private int itemsIdMemoizedSerializedSize;
    private pbc::PopsicleList<int> itemsId_ = new pbc::PopsicleList<int>();
    public scg::IList<int> ItemsIdList {
      get { return pbc::Lists.AsReadOnly(itemsId_); }
    }
    public int ItemsIdCount {
      get { return itemsId_.Count; }
    }
    public int GetItemsId(int index) {
      return itemsId_[index];
    }
    
    public const int ItemsNumFieldNumber = 13;
    private int itemsNumMemoizedSerializedSize;
    private pbc::PopsicleList<long> itemsNum_ = new pbc::PopsicleList<long>();
    public scg::IList<long> ItemsNumList {
      get { return pbc::Lists.AsReadOnly(itemsNum_); }
    }
    public int ItemsNumCount {
      get { return itemsNum_.Count; }
    }
    public long GetItemsNum(int index) {
      return itemsNum_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserid) return false;
        if (!hasLoginname) return false;
        if (!hasNickname) return false;
        if (!hasSex) return false;
        if (!hasFaceUrl) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userFieldNames;
      if (hasUserid) {
        output.WriteString(1, field_names[12], Userid);
      }
      if (hasLoginname) {
        output.WriteString(2, field_names[7], Loginname);
      }
      if (hasNickname) {
        output.WriteString(3, field_names[9], Nickname);
      }
      if (hasSex) {
        output.WriteEnum(4, field_names[10], (int) Sex, Sex);
      }
      if (hasUserflag) {
        output.WriteInt32(5, field_names[11], Userflag);
      }
      if (hasFaceUrl) {
        output.WriteString(6, field_names[3], FaceUrl);
      }
      if (hasChannel) {
        output.WriteInt32(7, field_names[0], Channel);
      }
      if (hasCreatetime) {
        output.WriteInt32(8, field_names[1], Createtime);
      }
      if (hasIdcard) {
        output.WriteString(9, field_names[4], Idcard);
      }
      if (hasEmail) {
        output.WriteString(10, field_names[2], Email);
      }
      if (hasMobile) {
        output.WriteString(11, field_names[8], Mobile);
      }
      if (itemsId_.Count > 0) {
        output.WritePackedInt32Array(12, field_names[5], itemsIdMemoizedSerializedSize, itemsId_);
      }
      if (itemsNum_.Count > 0) {
        output.WritePackedInt64Array(13, field_names[6], itemsNumMemoizedSerializedSize, itemsNum_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserid) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Userid);
      }
      if (hasLoginname) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Loginname);
      }
      if (hasNickname) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Nickname);
      }
      if (hasSex) {
        size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Sex);
      }
      if (hasUserflag) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, Userflag);
      }
      if (hasFaceUrl) {
        size += pb::CodedOutputStream.ComputeStringSize(6, FaceUrl);
      }
      if (hasChannel) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, Channel);
      }
      if (hasCreatetime) {
        size += pb::CodedOutputStream.ComputeInt32Size(8, Createtime);
      }
      if (hasIdcard) {
        size += pb::CodedOutputStream.ComputeStringSize(9, Idcard);
      }
      if (hasEmail) {
        size += pb::CodedOutputStream.ComputeStringSize(10, Email);
      }
      if (hasMobile) {
        size += pb::CodedOutputStream.ComputeStringSize(11, Mobile);
      }
      {
        int dataSize = 0;
        foreach (int element in ItemsIdList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        if (itemsId_.Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
        }
        itemsIdMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        foreach (long element in ItemsNumList) {
          dataSize += pb::CodedOutputStream.ComputeInt64SizeNoTag(element);
        }
        size += dataSize;
        if (itemsNum_.Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
        }
        itemsNumMemoizedSerializedSize = dataSize;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static User ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static User ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static User ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static User ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static User ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static User ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static User ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static User ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static User ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static User ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private User MakeReadOnly() {
      itemsId_.MakeReadOnly();
      itemsNum_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(User prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<User, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(User cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private User result;
      
      private User PrepareBuilder() {
        if (resultIsReadOnly) {
          User original = result;
          result = new User();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override User MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.User.Descriptor; }
      }
      
      public override User DefaultInstanceForType {
        get { return global::gt_msg.User.DefaultInstance; }
      }
      
      public override User BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is User) {
          return MergeFrom((User) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(User other) {
        if (other == global::gt_msg.User.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserid) {
          Userid = other.Userid;
        }
        if (other.HasLoginname) {
          Loginname = other.Loginname;
        }
        if (other.HasNickname) {
          Nickname = other.Nickname;
        }
        if (other.HasSex) {
          Sex = other.Sex;
        }
        if (other.HasUserflag) {
          Userflag = other.Userflag;
        }
        if (other.HasFaceUrl) {
          FaceUrl = other.FaceUrl;
        }
        if (other.HasChannel) {
          Channel = other.Channel;
        }
        if (other.HasCreatetime) {
          Createtime = other.Createtime;
        }
        if (other.HasIdcard) {
          Idcard = other.Idcard;
        }
        if (other.HasEmail) {
          Email = other.Email;
        }
        if (other.HasMobile) {
          Mobile = other.Mobile;
        }
        if (other.itemsId_.Count != 0) {
          result.itemsId_.Add(other.itemsId_);
        }
        if (other.itemsNum_.Count != 0) {
          result.itemsNum_.Add(other.itemsNum_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserid = input.ReadString(ref result.userid_);
              break;
            }
            case 18: {
              result.hasLoginname = input.ReadString(ref result.loginname_);
              break;
            }
            case 26: {
              result.hasNickname = input.ReadString(ref result.nickname_);
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.sex_, out unknown)) {
                result.hasSex = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
            case 40: {
              result.hasUserflag = input.ReadInt32(ref result.userflag_);
              break;
            }
            case 50: {
              result.hasFaceUrl = input.ReadString(ref result.faceUrl_);
              break;
            }
            case 56: {
              result.hasChannel = input.ReadInt32(ref result.channel_);
              break;
            }
            case 64: {
              result.hasCreatetime = input.ReadInt32(ref result.createtime_);
              break;
            }
            case 74: {
              result.hasIdcard = input.ReadString(ref result.idcard_);
              break;
            }
            case 82: {
              result.hasEmail = input.ReadString(ref result.email_);
              break;
            }
            case 90: {
              result.hasMobile = input.ReadString(ref result.mobile_);
              break;
            }
            case 98:
            case 96: {
              input.ReadInt32Array(tag, field_name, result.itemsId_);
              break;
            }
            case 106:
            case 104: {
              input.ReadInt64Array(tag, field_name, result.itemsNum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserid {
        get { return result.hasUserid; }
      }
      public string Userid {
        get { return result.Userid; }
        set { SetUserid(value); }
      }
      public Builder SetUserid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserid = true;
        result.userid_ = value;
        return this;
      }
      public Builder ClearUserid() {
        PrepareBuilder();
        result.hasUserid = false;
        result.userid_ = "";
        return this;
      }
      
      public bool HasLoginname {
        get { return result.hasLoginname; }
      }
      public string Loginname {
        get { return result.Loginname; }
        set { SetLoginname(value); }
      }
      public Builder SetLoginname(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLoginname = true;
        result.loginname_ = value;
        return this;
      }
      public Builder ClearLoginname() {
        PrepareBuilder();
        result.hasLoginname = false;
        result.loginname_ = "";
        return this;
      }
      
      public bool HasNickname {
        get { return result.hasNickname; }
      }
      public string Nickname {
        get { return result.Nickname; }
        set { SetNickname(value); }
      }
      public Builder SetNickname(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNickname = true;
        result.nickname_ = value;
        return this;
      }
      public Builder ClearNickname() {
        PrepareBuilder();
        result.hasNickname = false;
        result.nickname_ = "";
        return this;
      }
      
      public bool HasSex {
       get { return result.hasSex; }
      }
      public global::gt_msg.Gender Sex {
        get { return result.Sex; }
        set { SetSex(value); }
      }
      public Builder SetSex(global::gt_msg.Gender value) {
        PrepareBuilder();
        result.hasSex = true;
        result.sex_ = value;
        return this;
      }
      public Builder ClearSex() {
        PrepareBuilder();
        result.hasSex = false;
        result.sex_ = global::gt_msg.Gender.Male;
        return this;
      }
      
      public bool HasUserflag {
        get { return result.hasUserflag; }
      }
      public int Userflag {
        get { return result.Userflag; }
        set { SetUserflag(value); }
      }
      public Builder SetUserflag(int value) {
        PrepareBuilder();
        result.hasUserflag = true;
        result.userflag_ = value;
        return this;
      }
      public Builder ClearUserflag() {
        PrepareBuilder();
        result.hasUserflag = false;
        result.userflag_ = 0;
        return this;
      }
      
      public bool HasFaceUrl {
        get { return result.hasFaceUrl; }
      }
      public string FaceUrl {
        get { return result.FaceUrl; }
        set { SetFaceUrl(value); }
      }
      public Builder SetFaceUrl(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFaceUrl = true;
        result.faceUrl_ = value;
        return this;
      }
      public Builder ClearFaceUrl() {
        PrepareBuilder();
        result.hasFaceUrl = false;
        result.faceUrl_ = "";
        return this;
      }
      
      public bool HasChannel {
        get { return result.hasChannel; }
      }
      public int Channel {
        get { return result.Channel; }
        set { SetChannel(value); }
      }
      public Builder SetChannel(int value) {
        PrepareBuilder();
        result.hasChannel = true;
        result.channel_ = value;
        return this;
      }
      public Builder ClearChannel() {
        PrepareBuilder();
        result.hasChannel = false;
        result.channel_ = 0;
        return this;
      }
      
      public bool HasCreatetime {
        get { return result.hasCreatetime; }
      }
      public int Createtime {
        get { return result.Createtime; }
        set { SetCreatetime(value); }
      }
      public Builder SetCreatetime(int value) {
        PrepareBuilder();
        result.hasCreatetime = true;
        result.createtime_ = value;
        return this;
      }
      public Builder ClearCreatetime() {
        PrepareBuilder();
        result.hasCreatetime = false;
        result.createtime_ = 0;
        return this;
      }
      
      public bool HasIdcard {
        get { return result.hasIdcard; }
      }
      public string Idcard {
        get { return result.Idcard; }
        set { SetIdcard(value); }
      }
      public Builder SetIdcard(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIdcard = true;
        result.idcard_ = value;
        return this;
      }
      public Builder ClearIdcard() {
        PrepareBuilder();
        result.hasIdcard = false;
        result.idcard_ = "";
        return this;
      }
      
      public bool HasEmail {
        get { return result.hasEmail; }
      }
      public string Email {
        get { return result.Email; }
        set { SetEmail(value); }
      }
      public Builder SetEmail(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEmail = true;
        result.email_ = value;
        return this;
      }
      public Builder ClearEmail() {
        PrepareBuilder();
        result.hasEmail = false;
        result.email_ = "";
        return this;
      }
      
      public bool HasMobile {
        get { return result.hasMobile; }
      }
      public string Mobile {
        get { return result.Mobile; }
        set { SetMobile(value); }
      }
      public Builder SetMobile(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMobile = true;
        result.mobile_ = value;
        return this;
      }
      public Builder ClearMobile() {
        PrepareBuilder();
        result.hasMobile = false;
        result.mobile_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<int> ItemsIdList {
        get { return PrepareBuilder().itemsId_; }
      }
      public int ItemsIdCount {
        get { return result.ItemsIdCount; }
      }
      public int GetItemsId(int index) {
        return result.GetItemsId(index);
      }
      public Builder SetItemsId(int index, int value) {
        PrepareBuilder();
        result.itemsId_[index] = value;
        return this;
      }
      public Builder AddItemsId(int value) {
        PrepareBuilder();
        result.itemsId_.Add(value);
        return this;
      }
      public Builder AddRangeItemsId(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.itemsId_.Add(values);
        return this;
      }
      public Builder ClearItemsId() {
        PrepareBuilder();
        result.itemsId_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<long> ItemsNumList {
        get { return PrepareBuilder().itemsNum_; }
      }
      public int ItemsNumCount {
        get { return result.ItemsNumCount; }
      }
      public long GetItemsNum(int index) {
        return result.GetItemsNum(index);
      }
      public Builder SetItemsNum(int index, long value) {
        PrepareBuilder();
        result.itemsNum_[index] = value;
        return this;
      }
      public Builder AddItemsNum(long value) {
        PrepareBuilder();
        result.itemsNum_.Add(value);
        return this;
      }
      public Builder AddRangeItemsNum(scg::IEnumerable<long> values) {
        PrepareBuilder();
        result.itemsNum_.Add(values);
        return this;
      }
      public Builder ClearItemsNum() {
        PrepareBuilder();
        result.itemsNum_.Clear();
        return this;
      }
    }
    static User() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CommonError : pb::GeneratedMessage<CommonError, CommonError.Builder> {
    private CommonError() { }
    private static readonly CommonError defaultInstance = new CommonError().MakeReadOnly();
    private static readonly string[] _commonErrorFieldNames = new string[] { "code" };
    private static readonly uint[] _commonErrorFieldTags = new uint[] { 8 };
    public static CommonError DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CommonError DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CommonError ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_CommonError__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CommonError, CommonError.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_CommonError__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum CommonErrorCode {
        SessionLost = 1,
        UnknownError = 2,
        ServerMaintenance = 3,
        ServerBusy = 4,
        ErrCommonReq = 5,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.CommonError.Types.CommonErrorCode code_ = global::gt_msg.CommonError.Types.CommonErrorCode.SessionLost;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.CommonError.Types.CommonErrorCode Code {
      get { return code_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _commonErrorFieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[0], (int) Code, Code);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CommonError ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CommonError ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CommonError ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CommonError ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CommonError ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CommonError ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CommonError ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CommonError ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CommonError ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CommonError ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CommonError MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CommonError prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CommonError, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CommonError cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CommonError result;
      
      private CommonError PrepareBuilder() {
        if (resultIsReadOnly) {
          CommonError original = result;
          result = new CommonError();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CommonError MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.CommonError.Descriptor; }
      }
      
      public override CommonError DefaultInstanceForType {
        get { return global::gt_msg.CommonError.DefaultInstance; }
      }
      
      public override CommonError BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CommonError) {
          return MergeFrom((CommonError) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CommonError other) {
        if (other == global::gt_msg.CommonError.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_commonErrorFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _commonErrorFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.CommonError.Types.CommonErrorCode Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.CommonError.Types.CommonErrorCode value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.CommonError.Types.CommonErrorCode.SessionLost;
        return this;
      }
    }
    static CommonError() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class HHRequest : pb::GeneratedMessage<HHRequest, HHRequest.Builder> {
    private HHRequest() { }
    private static readonly HHRequest defaultInstance = new HHRequest().MakeReadOnly();
    private static readonly string[] _hHRequestFieldNames = new string[] {  };
    private static readonly uint[] _hHRequestFieldTags = new uint[] {  };
    public static HHRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override HHRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override HHRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_HHRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<HHRequest, HHRequest.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_HHRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _hHRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static HHRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HHRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HHRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HHRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HHRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HHRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static HHRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static HHRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static HHRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HHRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private HHRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(HHRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<HHRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(HHRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private HHRequest result;
      
      private HHRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          HHRequest original = result;
          result = new HHRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override HHRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.HHRequest.Descriptor; }
      }
      
      public override HHRequest DefaultInstanceForType {
        get { return global::gt_msg.HHRequest.DefaultInstance; }
      }
      
      public override HHRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is HHRequest) {
          return MergeFrom((HHRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(HHRequest other) {
        if (other == global::gt_msg.HHRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_hHRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _hHRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static HHRequest() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class HHResponse : pb::GeneratedMessage<HHResponse, HHResponse.Builder> {
    private HHResponse() { }
    private static readonly HHResponse defaultInstance = new HHResponse().MakeReadOnly();
    private static readonly string[] _hHResponseFieldNames = new string[] { "serverTimeNow" };
    private static readonly uint[] _hHResponseFieldTags = new uint[] { 8 };
    public static HHResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override HHResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override HHResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_HHResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<HHResponse, HHResponse.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_HHResponse__FieldAccessorTable; }
    }
    
    public const int ServerTimeNowFieldNumber = 1;
    private bool hasServerTimeNow;
    private int serverTimeNow_;
    public bool HasServerTimeNow {
      get { return hasServerTimeNow; }
    }
    public int ServerTimeNow {
      get { return serverTimeNow_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _hHResponseFieldNames;
      if (hasServerTimeNow) {
        output.WriteInt32(1, field_names[0], ServerTimeNow);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasServerTimeNow) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ServerTimeNow);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static HHResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HHResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HHResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HHResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HHResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HHResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static HHResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static HHResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static HHResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HHResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private HHResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(HHResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<HHResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(HHResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private HHResponse result;
      
      private HHResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          HHResponse original = result;
          result = new HHResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override HHResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.HHResponse.Descriptor; }
      }
      
      public override HHResponse DefaultInstanceForType {
        get { return global::gt_msg.HHResponse.DefaultInstance; }
      }
      
      public override HHResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is HHResponse) {
          return MergeFrom((HHResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(HHResponse other) {
        if (other == global::gt_msg.HHResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasServerTimeNow) {
          ServerTimeNow = other.ServerTimeNow;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_hHResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _hHResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasServerTimeNow = input.ReadInt32(ref result.serverTimeNow_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasServerTimeNow {
        get { return result.hasServerTimeNow; }
      }
      public int ServerTimeNow {
        get { return result.ServerTimeNow; }
        set { SetServerTimeNow(value); }
      }
      public Builder SetServerTimeNow(int value) {
        PrepareBuilder();
        result.hasServerTimeNow = true;
        result.serverTimeNow_ = value;
        return this;
      }
      public Builder ClearServerTimeNow() {
        PrepareBuilder();
        result.hasServerTimeNow = false;
        result.serverTimeNow_ = 0;
        return this;
      }
    }
    static HHResponse() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LoginRequest : pb::GeneratedMessage<LoginRequest, LoginRequest.Builder> {
    private LoginRequest() { }
    private static readonly LoginRequest defaultInstance = new LoginRequest().MakeReadOnly();
    private static readonly string[] _loginRequestFieldNames = new string[] { "name", "password", "sessionid", "uid" };
    private static readonly uint[] _loginRequestFieldTags = new uint[] { 10, 18, 26, 34 };
    public static LoginRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LoginRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoginRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_LoginRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LoginRequest, LoginRequest.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_LoginRequest__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int PasswordFieldNumber = 2;
    private bool hasPassword;
    private string password_ = "";
    public bool HasPassword {
      get { return hasPassword; }
    }
    public string Password {
      get { return password_; }
    }
    
    public const int SessionidFieldNumber = 3;
    private bool hasSessionid;
    private string sessionid_ = "";
    public bool HasSessionid {
      get { return hasSessionid; }
    }
    public string Sessionid {
      get { return sessionid_; }
    }
    
    public const int UidFieldNumber = 4;
    private bool hasUid;
    private string uid_ = "";
    public bool HasUid {
      get { return hasUid; }
    }
    public string Uid {
      get { return uid_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _loginRequestFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[0], Name);
      }
      if (hasPassword) {
        output.WriteString(2, field_names[1], Password);
      }
      if (hasSessionid) {
        output.WriteString(3, field_names[2], Sessionid);
      }
      if (hasUid) {
        output.WriteString(4, field_names[3], Uid);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      if (hasPassword) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Password);
      }
      if (hasSessionid) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Sessionid);
      }
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeStringSize(4, Uid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LoginRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LoginRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LoginRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LoginRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoginRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LoginRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LoginRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoginRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoginRequest result;
      
      private LoginRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          LoginRequest original = result;
          result = new LoginRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoginRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.LoginRequest.Descriptor; }
      }
      
      public override LoginRequest DefaultInstanceForType {
        get { return global::gt_msg.LoginRequest.DefaultInstance; }
      }
      
      public override LoginRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LoginRequest) {
          return MergeFrom((LoginRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoginRequest other) {
        if (other == global::gt_msg.LoginRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasPassword) {
          Password = other.Password;
        }
        if (other.HasSessionid) {
          Sessionid = other.Sessionid;
        }
        if (other.HasUid) {
          Uid = other.Uid;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loginRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loginRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 18: {
              result.hasPassword = input.ReadString(ref result.password_);
              break;
            }
            case 26: {
              result.hasSessionid = input.ReadString(ref result.sessionid_);
              break;
            }
            case 34: {
              result.hasUid = input.ReadString(ref result.uid_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasPassword {
        get { return result.hasPassword; }
      }
      public string Password {
        get { return result.Password; }
        set { SetPassword(value); }
      }
      public Builder SetPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder ClearPassword() {
        PrepareBuilder();
        result.hasPassword = false;
        result.password_ = "";
        return this;
      }
      
      public bool HasSessionid {
        get { return result.hasSessionid; }
      }
      public string Sessionid {
        get { return result.Sessionid; }
        set { SetSessionid(value); }
      }
      public Builder SetSessionid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSessionid = true;
        result.sessionid_ = value;
        return this;
      }
      public Builder ClearSessionid() {
        PrepareBuilder();
        result.hasSessionid = false;
        result.sessionid_ = "";
        return this;
      }
      
      public bool HasUid {
        get { return result.hasUid; }
      }
      public string Uid {
        get { return result.Uid; }
        set { SetUid(value); }
      }
      public Builder SetUid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder ClearUid() {
        PrepareBuilder();
        result.hasUid = false;
        result.uid_ = "";
        return this;
      }
    }
    static LoginRequest() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LoginResponse : pb::GeneratedMessage<LoginResponse, LoginResponse.Builder> {
    private LoginResponse() { }
    private static readonly LoginResponse defaultInstance = new LoginResponse().MakeReadOnly();
    private static readonly string[] _loginResponseFieldNames = new string[] { "code", "gameName", "hornitem", "hornitemnum", "hornlv", "logindays", "loginitemnum", "loginitemtype", "loginprizerate", "signed", "user" };
    private static readonly uint[] _loginResponseFieldTags = new uint[] { 8, 34, 40, 48, 56, 64, 80, 72, 88, 24, 18 };
    public static LoginResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LoginResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoginResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_LoginResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LoginResponse, LoginResponse.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_LoginResponse__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum LoginResponseCode {
        OK = 0,
        Forbidden = 1,
        NoSuchUserPass = 2,
        OldPlayerKicked = 3,
        CookieBad = 4,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.LoginResponse.Types.LoginResponseCode code_ = global::gt_msg.LoginResponse.Types.LoginResponseCode.OK;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.LoginResponse.Types.LoginResponseCode Code {
      get { return code_; }
    }
    
    public const int UserFieldNumber = 2;
    private bool hasUser;
    private global::gt_msg.User user_;
    public bool HasUser {
      get { return hasUser; }
    }
    public global::gt_msg.User User {
      get { return user_ ?? global::gt_msg.User.DefaultInstance; }
    }
    
    public const int SignedFieldNumber = 3;
    private bool hasSigned;
    private int signed_;
    public bool HasSigned {
      get { return hasSigned; }
    }
    public int Signed {
      get { return signed_; }
    }
    
    public const int GameNameFieldNumber = 4;
    private pbc::PopsicleList<string> gameName_ = new pbc::PopsicleList<string>();
    public scg::IList<string> GameNameList {
      get { return pbc::Lists.AsReadOnly(gameName_); }
    }
    public int GameNameCount {
      get { return gameName_.Count; }
    }
    public string GetGameName(int index) {
      return gameName_[index];
    }
    
    public const int HornitemFieldNumber = 5;
    private bool hasHornitem;
    private int hornitem_;
    public bool HasHornitem {
      get { return hasHornitem; }
    }
    public int Hornitem {
      get { return hornitem_; }
    }
    
    public const int HornitemnumFieldNumber = 6;
    private bool hasHornitemnum;
    private int hornitemnum_;
    public bool HasHornitemnum {
      get { return hasHornitemnum; }
    }
    public int Hornitemnum {
      get { return hornitemnum_; }
    }
    
    public const int HornlvFieldNumber = 7;
    private bool hasHornlv;
    private int hornlv_;
    public bool HasHornlv {
      get { return hasHornlv; }
    }
    public int Hornlv {
      get { return hornlv_; }
    }
    
    public const int LogindaysFieldNumber = 8;
    private bool hasLogindays;
    private int logindays_;
    public bool HasLogindays {
      get { return hasLogindays; }
    }
    public int Logindays {
      get { return logindays_; }
    }
    
    public const int LoginitemtypeFieldNumber = 9;
    private pbc::PopsicleList<int> loginitemtype_ = new pbc::PopsicleList<int>();
    public scg::IList<int> LoginitemtypeList {
      get { return pbc::Lists.AsReadOnly(loginitemtype_); }
    }
    public int LoginitemtypeCount {
      get { return loginitemtype_.Count; }
    }
    public int GetLoginitemtype(int index) {
      return loginitemtype_[index];
    }
    
    public const int LoginitemnumFieldNumber = 10;
    private pbc::PopsicleList<int> loginitemnum_ = new pbc::PopsicleList<int>();
    public scg::IList<int> LoginitemnumList {
      get { return pbc::Lists.AsReadOnly(loginitemnum_); }
    }
    public int LoginitemnumCount {
      get { return loginitemnum_.Count; }
    }
    public int GetLoginitemnum(int index) {
      return loginitemnum_[index];
    }
    
    public const int LoginprizerateFieldNumber = 11;
    private pbc::PopsicleList<int> loginprizerate_ = new pbc::PopsicleList<int>();
    public scg::IList<int> LoginprizerateList {
      get { return pbc::Lists.AsReadOnly(loginprizerate_); }
    }
    public int LoginprizerateCount {
      get { return loginprizerate_.Count; }
    }
    public int GetLoginprizerate(int index) {
      return loginprizerate_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        if (HasUser) {
          if (!User.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _loginResponseFieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[0], (int) Code, Code);
      }
      if (hasUser) {
        output.WriteMessage(2, field_names[10], User);
      }
      if (hasSigned) {
        output.WriteInt32(3, field_names[9], Signed);
      }
      if (gameName_.Count > 0) {
        output.WriteStringArray(4, field_names[1], gameName_);
      }
      if (hasHornitem) {
        output.WriteInt32(5, field_names[2], Hornitem);
      }
      if (hasHornitemnum) {
        output.WriteInt32(6, field_names[3], Hornitemnum);
      }
      if (hasHornlv) {
        output.WriteInt32(7, field_names[4], Hornlv);
      }
      if (hasLogindays) {
        output.WriteInt32(8, field_names[5], Logindays);
      }
      if (loginitemtype_.Count > 0) {
        output.WriteInt32Array(9, field_names[7], loginitemtype_);
      }
      if (loginitemnum_.Count > 0) {
        output.WriteInt32Array(10, field_names[6], loginitemnum_);
      }
      if (loginprizerate_.Count > 0) {
        output.WriteInt32Array(11, field_names[8], loginprizerate_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasUser) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, User);
      }
      if (hasSigned) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Signed);
      }
      {
        int dataSize = 0;
        foreach (string element in GameNameList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * gameName_.Count;
      }
      if (hasHornitem) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, Hornitem);
      }
      if (hasHornitemnum) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, Hornitemnum);
      }
      if (hasHornlv) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, Hornlv);
      }
      if (hasLogindays) {
        size += pb::CodedOutputStream.ComputeInt32Size(8, Logindays);
      }
      {
        int dataSize = 0;
        foreach (int element in LoginitemtypeList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * loginitemtype_.Count;
      }
      {
        int dataSize = 0;
        foreach (int element in LoginitemnumList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * loginitemnum_.Count;
      }
      {
        int dataSize = 0;
        foreach (int element in LoginprizerateList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * loginprizerate_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LoginResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LoginResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LoginResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LoginResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoginResponse MakeReadOnly() {
      gameName_.MakeReadOnly();
      loginitemtype_.MakeReadOnly();
      loginitemnum_.MakeReadOnly();
      loginprizerate_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LoginResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LoginResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoginResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoginResponse result;
      
      private LoginResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          LoginResponse original = result;
          result = new LoginResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoginResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.LoginResponse.Descriptor; }
      }
      
      public override LoginResponse DefaultInstanceForType {
        get { return global::gt_msg.LoginResponse.DefaultInstance; }
      }
      
      public override LoginResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LoginResponse) {
          return MergeFrom((LoginResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoginResponse other) {
        if (other == global::gt_msg.LoginResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasUser) {
          MergeUser(other.User);
        }
        if (other.HasSigned) {
          Signed = other.Signed;
        }
        if (other.gameName_.Count != 0) {
          result.gameName_.Add(other.gameName_);
        }
        if (other.HasHornitem) {
          Hornitem = other.Hornitem;
        }
        if (other.HasHornitemnum) {
          Hornitemnum = other.Hornitemnum;
        }
        if (other.HasHornlv) {
          Hornlv = other.Hornlv;
        }
        if (other.HasLogindays) {
          Logindays = other.Logindays;
        }
        if (other.loginitemtype_.Count != 0) {
          result.loginitemtype_.Add(other.loginitemtype_);
        }
        if (other.loginitemnum_.Count != 0) {
          result.loginitemnum_.Add(other.loginitemnum_);
        }
        if (other.loginprizerate_.Count != 0) {
          result.loginprizerate_.Add(other.loginprizerate_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loginResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loginResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              global::gt_msg.User.Builder subBuilder = global::gt_msg.User.CreateBuilder();
              if (result.hasUser) {
                subBuilder.MergeFrom(User);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              User = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasSigned = input.ReadInt32(ref result.signed_);
              break;
            }
            case 34: {
              input.ReadStringArray(tag, field_name, result.gameName_);
              break;
            }
            case 40: {
              result.hasHornitem = input.ReadInt32(ref result.hornitem_);
              break;
            }
            case 48: {
              result.hasHornitemnum = input.ReadInt32(ref result.hornitemnum_);
              break;
            }
            case 56: {
              result.hasHornlv = input.ReadInt32(ref result.hornlv_);
              break;
            }
            case 64: {
              result.hasLogindays = input.ReadInt32(ref result.logindays_);
              break;
            }
            case 74:
            case 72: {
              input.ReadInt32Array(tag, field_name, result.loginitemtype_);
              break;
            }
            case 82:
            case 80: {
              input.ReadInt32Array(tag, field_name, result.loginitemnum_);
              break;
            }
            case 90:
            case 88: {
              input.ReadInt32Array(tag, field_name, result.loginprizerate_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.LoginResponse.Types.LoginResponseCode Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.LoginResponse.Types.LoginResponseCode value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.LoginResponse.Types.LoginResponseCode.OK;
        return this;
      }
      
      public bool HasUser {
       get { return result.hasUser; }
      }
      public global::gt_msg.User User {
        get { return result.User; }
        set { SetUser(value); }
      }
      public Builder SetUser(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = value;
        return this;
      }
      public Builder SetUser(global::gt_msg.User.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUser(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUser &&
            result.user_ != global::gt_msg.User.DefaultInstance) {
            result.user_ = global::gt_msg.User.CreateBuilder(result.user_).MergeFrom(value).BuildPartial();
        } else {
          result.user_ = value;
        }
        result.hasUser = true;
        return this;
      }
      public Builder ClearUser() {
        PrepareBuilder();
        result.hasUser = false;
        result.user_ = null;
        return this;
      }
      
      public bool HasSigned {
        get { return result.hasSigned; }
      }
      public int Signed {
        get { return result.Signed; }
        set { SetSigned(value); }
      }
      public Builder SetSigned(int value) {
        PrepareBuilder();
        result.hasSigned = true;
        result.signed_ = value;
        return this;
      }
      public Builder ClearSigned() {
        PrepareBuilder();
        result.hasSigned = false;
        result.signed_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<string> GameNameList {
        get { return PrepareBuilder().gameName_; }
      }
      public int GameNameCount {
        get { return result.GameNameCount; }
      }
      public string GetGameName(int index) {
        return result.GetGameName(index);
      }
      public Builder SetGameName(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gameName_[index] = value;
        return this;
      }
      public Builder AddGameName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gameName_.Add(value);
        return this;
      }
      public Builder AddRangeGameName(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.gameName_.Add(values);
        return this;
      }
      public Builder ClearGameName() {
        PrepareBuilder();
        result.gameName_.Clear();
        return this;
      }
      
      public bool HasHornitem {
        get { return result.hasHornitem; }
      }
      public int Hornitem {
        get { return result.Hornitem; }
        set { SetHornitem(value); }
      }
      public Builder SetHornitem(int value) {
        PrepareBuilder();
        result.hasHornitem = true;
        result.hornitem_ = value;
        return this;
      }
      public Builder ClearHornitem() {
        PrepareBuilder();
        result.hasHornitem = false;
        result.hornitem_ = 0;
        return this;
      }
      
      public bool HasHornitemnum {
        get { return result.hasHornitemnum; }
      }
      public int Hornitemnum {
        get { return result.Hornitemnum; }
        set { SetHornitemnum(value); }
      }
      public Builder SetHornitemnum(int value) {
        PrepareBuilder();
        result.hasHornitemnum = true;
        result.hornitemnum_ = value;
        return this;
      }
      public Builder ClearHornitemnum() {
        PrepareBuilder();
        result.hasHornitemnum = false;
        result.hornitemnum_ = 0;
        return this;
      }
      
      public bool HasHornlv {
        get { return result.hasHornlv; }
      }
      public int Hornlv {
        get { return result.Hornlv; }
        set { SetHornlv(value); }
      }
      public Builder SetHornlv(int value) {
        PrepareBuilder();
        result.hasHornlv = true;
        result.hornlv_ = value;
        return this;
      }
      public Builder ClearHornlv() {
        PrepareBuilder();
        result.hasHornlv = false;
        result.hornlv_ = 0;
        return this;
      }
      
      public bool HasLogindays {
        get { return result.hasLogindays; }
      }
      public int Logindays {
        get { return result.Logindays; }
        set { SetLogindays(value); }
      }
      public Builder SetLogindays(int value) {
        PrepareBuilder();
        result.hasLogindays = true;
        result.logindays_ = value;
        return this;
      }
      public Builder ClearLogindays() {
        PrepareBuilder();
        result.hasLogindays = false;
        result.logindays_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<int> LoginitemtypeList {
        get { return PrepareBuilder().loginitemtype_; }
      }
      public int LoginitemtypeCount {
        get { return result.LoginitemtypeCount; }
      }
      public int GetLoginitemtype(int index) {
        return result.GetLoginitemtype(index);
      }
      public Builder SetLoginitemtype(int index, int value) {
        PrepareBuilder();
        result.loginitemtype_[index] = value;
        return this;
      }
      public Builder AddLoginitemtype(int value) {
        PrepareBuilder();
        result.loginitemtype_.Add(value);
        return this;
      }
      public Builder AddRangeLoginitemtype(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.loginitemtype_.Add(values);
        return this;
      }
      public Builder ClearLoginitemtype() {
        PrepareBuilder();
        result.loginitemtype_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<int> LoginitemnumList {
        get { return PrepareBuilder().loginitemnum_; }
      }
      public int LoginitemnumCount {
        get { return result.LoginitemnumCount; }
      }
      public int GetLoginitemnum(int index) {
        return result.GetLoginitemnum(index);
      }
      public Builder SetLoginitemnum(int index, int value) {
        PrepareBuilder();
        result.loginitemnum_[index] = value;
        return this;
      }
      public Builder AddLoginitemnum(int value) {
        PrepareBuilder();
        result.loginitemnum_.Add(value);
        return this;
      }
      public Builder AddRangeLoginitemnum(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.loginitemnum_.Add(values);
        return this;
      }
      public Builder ClearLoginitemnum() {
        PrepareBuilder();
        result.loginitemnum_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<int> LoginprizerateList {
        get { return PrepareBuilder().loginprizerate_; }
      }
      public int LoginprizerateCount {
        get { return result.LoginprizerateCount; }
      }
      public int GetLoginprizerate(int index) {
        return result.GetLoginprizerate(index);
      }
      public Builder SetLoginprizerate(int index, int value) {
        PrepareBuilder();
        result.loginprizerate_[index] = value;
        return this;
      }
      public Builder AddLoginprizerate(int value) {
        PrepareBuilder();
        result.loginprizerate_.Add(value);
        return this;
      }
      public Builder AddRangeLoginprizerate(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.loginprizerate_.Add(values);
        return this;
      }
      public Builder ClearLoginprizerate() {
        PrepareBuilder();
        result.loginprizerate_.Clear();
        return this;
      }
    }
    static LoginResponse() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LogoutRequest : pb::GeneratedMessage<LogoutRequest, LogoutRequest.Builder> {
    private LogoutRequest() { }
    private static readonly LogoutRequest defaultInstance = new LogoutRequest().MakeReadOnly();
    private static readonly string[] _logoutRequestFieldNames = new string[] { "uid" };
    private static readonly uint[] _logoutRequestFieldTags = new uint[] { 10 };
    public static LogoutRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LogoutRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LogoutRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_LogoutRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LogoutRequest, LogoutRequest.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_LogoutRequest__FieldAccessorTable; }
    }
    
    public const int UidFieldNumber = 1;
    private bool hasUid;
    private string uid_ = "";
    public bool HasUid {
      get { return hasUid; }
    }
    public string Uid {
      get { return uid_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUid) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _logoutRequestFieldNames;
      if (hasUid) {
        output.WriteString(1, field_names[0], Uid);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Uid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LogoutRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogoutRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogoutRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogoutRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogoutRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogoutRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LogoutRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LogoutRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LogoutRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogoutRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LogoutRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LogoutRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LogoutRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LogoutRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LogoutRequest result;
      
      private LogoutRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          LogoutRequest original = result;
          result = new LogoutRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LogoutRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.LogoutRequest.Descriptor; }
      }
      
      public override LogoutRequest DefaultInstanceForType {
        get { return global::gt_msg.LogoutRequest.DefaultInstance; }
      }
      
      public override LogoutRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LogoutRequest) {
          return MergeFrom((LogoutRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LogoutRequest other) {
        if (other == global::gt_msg.LogoutRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUid) {
          Uid = other.Uid;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_logoutRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _logoutRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUid = input.ReadString(ref result.uid_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUid {
        get { return result.hasUid; }
      }
      public string Uid {
        get { return result.Uid; }
        set { SetUid(value); }
      }
      public Builder SetUid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder ClearUid() {
        PrepareBuilder();
        result.hasUid = false;
        result.uid_ = "";
        return this;
      }
    }
    static LogoutRequest() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LogoutResponse : pb::GeneratedMessage<LogoutResponse, LogoutResponse.Builder> {
    private LogoutResponse() { }
    private static readonly LogoutResponse defaultInstance = new LogoutResponse().MakeReadOnly();
    private static readonly string[] _logoutResponseFieldNames = new string[] { "code" };
    private static readonly uint[] _logoutResponseFieldTags = new uint[] { 8 };
    public static LogoutResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LogoutResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LogoutResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_LogoutResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LogoutResponse, LogoutResponse.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_LogoutResponse__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum LogoutResponseCode {
        Ok = 0,
        Forbidden = 1,
        Fail = 2,
        OtherLogin = 3,
        WillExitForOtherLogin = 4,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.LogoutResponse.Types.LogoutResponseCode code_ = global::gt_msg.LogoutResponse.Types.LogoutResponseCode.Ok;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.LogoutResponse.Types.LogoutResponseCode Code {
      get { return code_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _logoutResponseFieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[0], (int) Code, Code);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LogoutResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogoutResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogoutResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogoutResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogoutResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogoutResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LogoutResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LogoutResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LogoutResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogoutResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LogoutResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LogoutResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LogoutResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LogoutResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LogoutResponse result;
      
      private LogoutResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          LogoutResponse original = result;
          result = new LogoutResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LogoutResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.LogoutResponse.Descriptor; }
      }
      
      public override LogoutResponse DefaultInstanceForType {
        get { return global::gt_msg.LogoutResponse.DefaultInstance; }
      }
      
      public override LogoutResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LogoutResponse) {
          return MergeFrom((LogoutResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LogoutResponse other) {
        if (other == global::gt_msg.LogoutResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_logoutResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _logoutResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.LogoutResponse.Types.LogoutResponseCode Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.LogoutResponse.Types.LogoutResponseCode value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.LogoutResponse.Types.LogoutResponseCode.Ok;
        return this;
      }
    }
    static LogoutResponse() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ItemChangedEvent : pb::GeneratedMessage<ItemChangedEvent, ItemChangedEvent.Builder> {
    private ItemChangedEvent() { }
    private static readonly ItemChangedEvent defaultInstance = new ItemChangedEvent().MakeReadOnly();
    private static readonly string[] _itemChangedEventFieldNames = new string[] { "ItemNums", "ItemTypes" };
    private static readonly uint[] _itemChangedEventFieldTags = new uint[] { 18, 8 };
    public static ItemChangedEvent DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ItemChangedEvent DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ItemChangedEvent ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_ItemChangedEvent__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ItemChangedEvent, ItemChangedEvent.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_ItemChangedEvent__FieldAccessorTable; }
    }
    
    public const int ItemTypesFieldNumber = 1;
    private pbc::PopsicleList<int> itemTypes_ = new pbc::PopsicleList<int>();
    public scg::IList<int> ItemTypesList {
      get { return pbc::Lists.AsReadOnly(itemTypes_); }
    }
    public int ItemTypesCount {
      get { return itemTypes_.Count; }
    }
    public int GetItemTypes(int index) {
      return itemTypes_[index];
    }
    
    public const int ItemNumsFieldNumber = 2;
    private int itemNumsMemoizedSerializedSize;
    private pbc::PopsicleList<long> itemNums_ = new pbc::PopsicleList<long>();
    public scg::IList<long> ItemNumsList {
      get { return pbc::Lists.AsReadOnly(itemNums_); }
    }
    public int ItemNumsCount {
      get { return itemNums_.Count; }
    }
    public long GetItemNums(int index) {
      return itemNums_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _itemChangedEventFieldNames;
      if (itemTypes_.Count > 0) {
        output.WriteInt32Array(1, field_names[1], itemTypes_);
      }
      if (itemNums_.Count > 0) {
        output.WritePackedInt64Array(2, field_names[0], itemNumsMemoizedSerializedSize, itemNums_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (int element in ItemTypesList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * itemTypes_.Count;
      }
      {
        int dataSize = 0;
        foreach (long element in ItemNumsList) {
          dataSize += pb::CodedOutputStream.ComputeInt64SizeNoTag(element);
        }
        size += dataSize;
        if (itemNums_.Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
        }
        itemNumsMemoizedSerializedSize = dataSize;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ItemChangedEvent ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ItemChangedEvent ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ItemChangedEvent ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ItemChangedEvent ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ItemChangedEvent ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ItemChangedEvent ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ItemChangedEvent ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ItemChangedEvent ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ItemChangedEvent ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ItemChangedEvent ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ItemChangedEvent MakeReadOnly() {
      itemTypes_.MakeReadOnly();
      itemNums_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ItemChangedEvent prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ItemChangedEvent, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ItemChangedEvent cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ItemChangedEvent result;
      
      private ItemChangedEvent PrepareBuilder() {
        if (resultIsReadOnly) {
          ItemChangedEvent original = result;
          result = new ItemChangedEvent();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ItemChangedEvent MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.ItemChangedEvent.Descriptor; }
      }
      
      public override ItemChangedEvent DefaultInstanceForType {
        get { return global::gt_msg.ItemChangedEvent.DefaultInstance; }
      }
      
      public override ItemChangedEvent BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ItemChangedEvent) {
          return MergeFrom((ItemChangedEvent) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ItemChangedEvent other) {
        if (other == global::gt_msg.ItemChangedEvent.DefaultInstance) return this;
        PrepareBuilder();
        if (other.itemTypes_.Count != 0) {
          result.itemTypes_.Add(other.itemTypes_);
        }
        if (other.itemNums_.Count != 0) {
          result.itemNums_.Add(other.itemNums_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_itemChangedEventFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _itemChangedEventFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10:
            case 8: {
              input.ReadInt32Array(tag, field_name, result.itemTypes_);
              break;
            }
            case 18:
            case 16: {
              input.ReadInt64Array(tag, field_name, result.itemNums_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<int> ItemTypesList {
        get { return PrepareBuilder().itemTypes_; }
      }
      public int ItemTypesCount {
        get { return result.ItemTypesCount; }
      }
      public int GetItemTypes(int index) {
        return result.GetItemTypes(index);
      }
      public Builder SetItemTypes(int index, int value) {
        PrepareBuilder();
        result.itemTypes_[index] = value;
        return this;
      }
      public Builder AddItemTypes(int value) {
        PrepareBuilder();
        result.itemTypes_.Add(value);
        return this;
      }
      public Builder AddRangeItemTypes(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.itemTypes_.Add(values);
        return this;
      }
      public Builder ClearItemTypes() {
        PrepareBuilder();
        result.itemTypes_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<long> ItemNumsList {
        get { return PrepareBuilder().itemNums_; }
      }
      public int ItemNumsCount {
        get { return result.ItemNumsCount; }
      }
      public long GetItemNums(int index) {
        return result.GetItemNums(index);
      }
      public Builder SetItemNums(int index, long value) {
        PrepareBuilder();
        result.itemNums_[index] = value;
        return this;
      }
      public Builder AddItemNums(long value) {
        PrepareBuilder();
        result.itemNums_.Add(value);
        return this;
      }
      public Builder AddRangeItemNums(scg::IEnumerable<long> values) {
        PrepareBuilder();
        result.itemNums_.Add(values);
        return this;
      }
      public Builder ClearItemNums() {
        PrepareBuilder();
        result.itemNums_.Clear();
        return this;
      }
    }
    static ItemChangedEvent() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OnLineMembersRequest : pb::GeneratedMessage<OnLineMembersRequest, OnLineMembersRequest.Builder> {
    private OnLineMembersRequest() { }
    private static readonly OnLineMembersRequest defaultInstance = new OnLineMembersRequest().MakeReadOnly();
    private static readonly string[] _onLineMembersRequestFieldNames = new string[] { "gameName", "level" };
    private static readonly uint[] _onLineMembersRequestFieldTags = new uint[] { 10, 16 };
    public static OnLineMembersRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OnLineMembersRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OnLineMembersRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_OnLineMembersRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OnLineMembersRequest, OnLineMembersRequest.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_OnLineMembersRequest__FieldAccessorTable; }
    }
    
    public const int GameNameFieldNumber = 1;
    private bool hasGameName;
    private string gameName_ = "";
    public bool HasGameName {
      get { return hasGameName; }
    }
    public string GameName {
      get { return gameName_; }
    }
    
    public const int LevelFieldNumber = 2;
    private bool hasLevel;
    private int level_;
    public bool HasLevel {
      get { return hasLevel; }
    }
    public int Level {
      get { return level_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGameName) return false;
        if (!hasLevel) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _onLineMembersRequestFieldNames;
      if (hasGameName) {
        output.WriteString(1, field_names[0], GameName);
      }
      if (hasLevel) {
        output.WriteInt32(2, field_names[1], Level);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasGameName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, GameName);
      }
      if (hasLevel) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Level);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OnLineMembersRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OnLineMembersRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OnLineMembersRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OnLineMembersRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OnLineMembersRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OnLineMembersRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OnLineMembersRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OnLineMembersRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OnLineMembersRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OnLineMembersRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OnLineMembersRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OnLineMembersRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OnLineMembersRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OnLineMembersRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OnLineMembersRequest result;
      
      private OnLineMembersRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          OnLineMembersRequest original = result;
          result = new OnLineMembersRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OnLineMembersRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.OnLineMembersRequest.Descriptor; }
      }
      
      public override OnLineMembersRequest DefaultInstanceForType {
        get { return global::gt_msg.OnLineMembersRequest.DefaultInstance; }
      }
      
      public override OnLineMembersRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OnLineMembersRequest) {
          return MergeFrom((OnLineMembersRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OnLineMembersRequest other) {
        if (other == global::gt_msg.OnLineMembersRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameName) {
          GameName = other.GameName;
        }
        if (other.HasLevel) {
          Level = other.Level;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_onLineMembersRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _onLineMembersRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGameName = input.ReadString(ref result.gameName_);
              break;
            }
            case 16: {
              result.hasLevel = input.ReadInt32(ref result.level_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameName {
        get { return result.hasGameName; }
      }
      public string GameName {
        get { return result.GameName; }
        set { SetGameName(value); }
      }
      public Builder SetGameName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameName = true;
        result.gameName_ = value;
        return this;
      }
      public Builder ClearGameName() {
        PrepareBuilder();
        result.hasGameName = false;
        result.gameName_ = "";
        return this;
      }
      
      public bool HasLevel {
        get { return result.hasLevel; }
      }
      public int Level {
        get { return result.Level; }
        set { SetLevel(value); }
      }
      public Builder SetLevel(int value) {
        PrepareBuilder();
        result.hasLevel = true;
        result.level_ = value;
        return this;
      }
      public Builder ClearLevel() {
        PrepareBuilder();
        result.hasLevel = false;
        result.level_ = 0;
        return this;
      }
    }
    static OnLineMembersRequest() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OnLineMembersResponse : pb::GeneratedMessage<OnLineMembersResponse, OnLineMembersResponse.Builder> {
    private OnLineMembersResponse() { }
    private static readonly OnLineMembersResponse defaultInstance = new OnLineMembersResponse().MakeReadOnly();
    private static readonly string[] _onLineMembersResponseFieldNames = new string[] { "count", "gameName", "level" };
    private static readonly uint[] _onLineMembersResponseFieldTags = new uint[] { 24, 10, 16 };
    public static OnLineMembersResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OnLineMembersResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OnLineMembersResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_OnLineMembersResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OnLineMembersResponse, OnLineMembersResponse.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_OnLineMembersResponse__FieldAccessorTable; }
    }
    
    public const int GameNameFieldNumber = 1;
    private bool hasGameName;
    private string gameName_ = "";
    public bool HasGameName {
      get { return hasGameName; }
    }
    public string GameName {
      get { return gameName_; }
    }
    
    public const int LevelFieldNumber = 2;
    private bool hasLevel;
    private int level_;
    public bool HasLevel {
      get { return hasLevel; }
    }
    public int Level {
      get { return level_; }
    }
    
    public const int CountFieldNumber = 3;
    private bool hasCount;
    private int count_;
    public bool HasCount {
      get { return hasCount; }
    }
    public int Count {
      get { return count_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGameName) return false;
        if (!hasLevel) return false;
        if (!hasCount) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _onLineMembersResponseFieldNames;
      if (hasGameName) {
        output.WriteString(1, field_names[1], GameName);
      }
      if (hasLevel) {
        output.WriteInt32(2, field_names[2], Level);
      }
      if (hasCount) {
        output.WriteInt32(3, field_names[0], Count);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasGameName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, GameName);
      }
      if (hasLevel) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Level);
      }
      if (hasCount) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Count);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OnLineMembersResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OnLineMembersResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OnLineMembersResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OnLineMembersResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OnLineMembersResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OnLineMembersResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OnLineMembersResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OnLineMembersResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OnLineMembersResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OnLineMembersResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OnLineMembersResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OnLineMembersResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OnLineMembersResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OnLineMembersResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OnLineMembersResponse result;
      
      private OnLineMembersResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          OnLineMembersResponse original = result;
          result = new OnLineMembersResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OnLineMembersResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.OnLineMembersResponse.Descriptor; }
      }
      
      public override OnLineMembersResponse DefaultInstanceForType {
        get { return global::gt_msg.OnLineMembersResponse.DefaultInstance; }
      }
      
      public override OnLineMembersResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OnLineMembersResponse) {
          return MergeFrom((OnLineMembersResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OnLineMembersResponse other) {
        if (other == global::gt_msg.OnLineMembersResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameName) {
          GameName = other.GameName;
        }
        if (other.HasLevel) {
          Level = other.Level;
        }
        if (other.HasCount) {
          Count = other.Count;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_onLineMembersResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _onLineMembersResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGameName = input.ReadString(ref result.gameName_);
              break;
            }
            case 16: {
              result.hasLevel = input.ReadInt32(ref result.level_);
              break;
            }
            case 24: {
              result.hasCount = input.ReadInt32(ref result.count_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameName {
        get { return result.hasGameName; }
      }
      public string GameName {
        get { return result.GameName; }
        set { SetGameName(value); }
      }
      public Builder SetGameName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameName = true;
        result.gameName_ = value;
        return this;
      }
      public Builder ClearGameName() {
        PrepareBuilder();
        result.hasGameName = false;
        result.gameName_ = "";
        return this;
      }
      
      public bool HasLevel {
        get { return result.hasLevel; }
      }
      public int Level {
        get { return result.Level; }
        set { SetLevel(value); }
      }
      public Builder SetLevel(int value) {
        PrepareBuilder();
        result.hasLevel = true;
        result.level_ = value;
        return this;
      }
      public Builder ClearLevel() {
        PrepareBuilder();
        result.hasLevel = false;
        result.level_ = 0;
        return this;
      }
      
      public bool HasCount {
        get { return result.hasCount; }
      }
      public int Count {
        get { return result.Count; }
        set { SetCount(value); }
      }
      public Builder SetCount(int value) {
        PrepareBuilder();
        result.hasCount = true;
        result.count_ = value;
        return this;
      }
      public Builder ClearCount() {
        PrepareBuilder();
        result.hasCount = false;
        result.count_ = 0;
        return this;
      }
    }
    static OnLineMembersResponse() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BXXSetRequest : pb::GeneratedMessage<BXXSetRequest, BXXSetRequest.Builder> {
    private BXXSetRequest() { }
    private static readonly BXXSetRequest defaultInstance = new BXXSetRequest().MakeReadOnly();
    private static readonly string[] _bXXSetRequestFieldNames = new string[] { "inBXX", "inHand" };
    private static readonly uint[] _bXXSetRequestFieldTags = new uint[] { 16, 8 };
    public static BXXSetRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BXXSetRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BXXSetRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_BXXSetRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BXXSetRequest, BXXSetRequest.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_BXXSetRequest__FieldAccessorTable; }
    }
    
    public const int InHandFieldNumber = 1;
    private bool hasInHand;
    private long inHand_;
    public bool HasInHand {
      get { return hasInHand; }
    }
    public long InHand {
      get { return inHand_; }
    }
    
    public const int InBXXFieldNumber = 2;
    private bool hasInBXX;
    private long inBXX_;
    public bool HasInBXX {
      get { return hasInBXX; }
    }
    public long InBXX {
      get { return inBXX_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasInHand) return false;
        if (!hasInBXX) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _bXXSetRequestFieldNames;
      if (hasInHand) {
        output.WriteInt64(1, field_names[1], InHand);
      }
      if (hasInBXX) {
        output.WriteInt64(2, field_names[0], InBXX);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasInHand) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, InHand);
      }
      if (hasInBXX) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, InBXX);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BXXSetRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BXXSetRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BXXSetRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BXXSetRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BXXSetRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BXXSetRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BXXSetRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BXXSetRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BXXSetRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BXXSetRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BXXSetRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BXXSetRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BXXSetRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BXXSetRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BXXSetRequest result;
      
      private BXXSetRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          BXXSetRequest original = result;
          result = new BXXSetRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BXXSetRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.BXXSetRequest.Descriptor; }
      }
      
      public override BXXSetRequest DefaultInstanceForType {
        get { return global::gt_msg.BXXSetRequest.DefaultInstance; }
      }
      
      public override BXXSetRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BXXSetRequest) {
          return MergeFrom((BXXSetRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BXXSetRequest other) {
        if (other == global::gt_msg.BXXSetRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasInHand) {
          InHand = other.InHand;
        }
        if (other.HasInBXX) {
          InBXX = other.InBXX;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_bXXSetRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _bXXSetRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasInHand = input.ReadInt64(ref result.inHand_);
              break;
            }
            case 16: {
              result.hasInBXX = input.ReadInt64(ref result.inBXX_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasInHand {
        get { return result.hasInHand; }
      }
      public long InHand {
        get { return result.InHand; }
        set { SetInHand(value); }
      }
      public Builder SetInHand(long value) {
        PrepareBuilder();
        result.hasInHand = true;
        result.inHand_ = value;
        return this;
      }
      public Builder ClearInHand() {
        PrepareBuilder();
        result.hasInHand = false;
        result.inHand_ = 0L;
        return this;
      }
      
      public bool HasInBXX {
        get { return result.hasInBXX; }
      }
      public long InBXX {
        get { return result.InBXX; }
        set { SetInBXX(value); }
      }
      public Builder SetInBXX(long value) {
        PrepareBuilder();
        result.hasInBXX = true;
        result.inBXX_ = value;
        return this;
      }
      public Builder ClearInBXX() {
        PrepareBuilder();
        result.hasInBXX = false;
        result.inBXX_ = 0L;
        return this;
      }
    }
    static BXXSetRequest() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BXXSetResponse : pb::GeneratedMessage<BXXSetResponse, BXXSetResponse.Builder> {
    private BXXSetResponse() { }
    private static readonly BXXSetResponse defaultInstance = new BXXSetResponse().MakeReadOnly();
    private static readonly string[] _bXXSetResponseFieldNames = new string[] { "code", "inBXX", "inHand" };
    private static readonly uint[] _bXXSetResponseFieldTags = new uint[] { 8, 24, 16 };
    public static BXXSetResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BXXSetResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BXXSetResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_BXXSetResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BXXSetResponse, BXXSetResponse.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_BXXSetResponse__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Code {
        Ok = 0,
        Failed = 1,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.BXXSetResponse.Types.Code code_ = global::gt_msg.BXXSetResponse.Types.Code.Ok;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.BXXSetResponse.Types.Code Code {
      get { return code_; }
    }
    
    public const int InHandFieldNumber = 2;
    private bool hasInHand;
    private long inHand_;
    public bool HasInHand {
      get { return hasInHand; }
    }
    public long InHand {
      get { return inHand_; }
    }
    
    public const int InBXXFieldNumber = 3;
    private bool hasInBXX;
    private long inBXX_;
    public bool HasInBXX {
      get { return hasInBXX; }
    }
    public long InBXX {
      get { return inBXX_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _bXXSetResponseFieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[0], (int) Code, Code);
      }
      if (hasInHand) {
        output.WriteInt64(2, field_names[2], InHand);
      }
      if (hasInBXX) {
        output.WriteInt64(3, field_names[1], InBXX);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasInHand) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, InHand);
      }
      if (hasInBXX) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, InBXX);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BXXSetResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BXXSetResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BXXSetResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BXXSetResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BXXSetResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BXXSetResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BXXSetResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BXXSetResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BXXSetResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BXXSetResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BXXSetResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BXXSetResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BXXSetResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BXXSetResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BXXSetResponse result;
      
      private BXXSetResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          BXXSetResponse original = result;
          result = new BXXSetResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BXXSetResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.BXXSetResponse.Descriptor; }
      }
      
      public override BXXSetResponse DefaultInstanceForType {
        get { return global::gt_msg.BXXSetResponse.DefaultInstance; }
      }
      
      public override BXXSetResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BXXSetResponse) {
          return MergeFrom((BXXSetResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BXXSetResponse other) {
        if (other == global::gt_msg.BXXSetResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasInHand) {
          InHand = other.InHand;
        }
        if (other.HasInBXX) {
          InBXX = other.InBXX;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_bXXSetResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _bXXSetResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasInHand = input.ReadInt64(ref result.inHand_);
              break;
            }
            case 24: {
              result.hasInBXX = input.ReadInt64(ref result.inBXX_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.BXXSetResponse.Types.Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.BXXSetResponse.Types.Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.BXXSetResponse.Types.Code.Ok;
        return this;
      }
      
      public bool HasInHand {
        get { return result.hasInHand; }
      }
      public long InHand {
        get { return result.InHand; }
        set { SetInHand(value); }
      }
      public Builder SetInHand(long value) {
        PrepareBuilder();
        result.hasInHand = true;
        result.inHand_ = value;
        return this;
      }
      public Builder ClearInHand() {
        PrepareBuilder();
        result.hasInHand = false;
        result.inHand_ = 0L;
        return this;
      }
      
      public bool HasInBXX {
        get { return result.hasInBXX; }
      }
      public long InBXX {
        get { return result.InBXX; }
        set { SetInBXX(value); }
      }
      public Builder SetInBXX(long value) {
        PrepareBuilder();
        result.hasInBXX = true;
        result.inBXX_ = value;
        return this;
      }
      public Builder ClearInBXX() {
        PrepareBuilder();
        result.hasInBXX = false;
        result.inBXX_ = 0L;
        return this;
      }
    }
    static BXXSetResponse() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserChatMsgRequest : pb::GeneratedMessage<UserChatMsgRequest, UserChatMsgRequest.Builder> {
    private UserChatMsgRequest() { }
    private static readonly UserChatMsgRequest defaultInstance = new UserChatMsgRequest().MakeReadOnly();
    private static readonly string[] _userChatMsgRequestFieldNames = new string[] { "msg", "type", "uid", "vmsg" };
    private static readonly uint[] _userChatMsgRequestFieldTags = new uint[] { 18, 24, 10, 34 };
    public static UserChatMsgRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserChatMsgRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserChatMsgRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserChatMsgRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserChatMsgRequest, UserChatMsgRequest.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserChatMsgRequest__FieldAccessorTable; }
    }
    
    public const int UidFieldNumber = 1;
    private bool hasUid;
    private string uid_ = "";
    public bool HasUid {
      get { return hasUid; }
    }
    public string Uid {
      get { return uid_; }
    }
    
    public const int MsgFieldNumber = 2;
    private bool hasMsg;
    private string msg_ = "";
    public bool HasMsg {
      get { return hasMsg; }
    }
    public string Msg {
      get { return msg_; }
    }
    
    public const int TypeFieldNumber = 3;
    private bool hasType;
    private int type_;
    public bool HasType {
      get { return hasType; }
    }
    public int Type {
      get { return type_; }
    }
    
    public const int VmsgFieldNumber = 4;
    private bool hasVmsg;
    private pb::ByteString vmsg_ = pb::ByteString.Empty;
    public bool HasVmsg {
      get { return hasVmsg; }
    }
    public pb::ByteString Vmsg {
      get { return vmsg_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUid) return false;
        if (!hasType) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userChatMsgRequestFieldNames;
      if (hasUid) {
        output.WriteString(1, field_names[2], Uid);
      }
      if (hasMsg) {
        output.WriteString(2, field_names[0], Msg);
      }
      if (hasType) {
        output.WriteInt32(3, field_names[1], Type);
      }
      if (hasVmsg) {
        output.WriteBytes(4, field_names[3], Vmsg);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Uid);
      }
      if (hasMsg) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Msg);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Type);
      }
      if (hasVmsg) {
        size += pb::CodedOutputStream.ComputeBytesSize(4, Vmsg);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserChatMsgRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserChatMsgRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserChatMsgRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserChatMsgRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserChatMsgRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserChatMsgRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserChatMsgRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserChatMsgRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserChatMsgRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserChatMsgRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserChatMsgRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserChatMsgRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserChatMsgRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserChatMsgRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserChatMsgRequest result;
      
      private UserChatMsgRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UserChatMsgRequest original = result;
          result = new UserChatMsgRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserChatMsgRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.UserChatMsgRequest.Descriptor; }
      }
      
      public override UserChatMsgRequest DefaultInstanceForType {
        get { return global::gt_msg.UserChatMsgRequest.DefaultInstance; }
      }
      
      public override UserChatMsgRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserChatMsgRequest) {
          return MergeFrom((UserChatMsgRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserChatMsgRequest other) {
        if (other == global::gt_msg.UserChatMsgRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUid) {
          Uid = other.Uid;
        }
        if (other.HasMsg) {
          Msg = other.Msg;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasVmsg) {
          Vmsg = other.Vmsg;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userChatMsgRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userChatMsgRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUid = input.ReadString(ref result.uid_);
              break;
            }
            case 18: {
              result.hasMsg = input.ReadString(ref result.msg_);
              break;
            }
            case 24: {
              result.hasType = input.ReadInt32(ref result.type_);
              break;
            }
            case 34: {
              result.hasVmsg = input.ReadBytes(ref result.vmsg_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUid {
        get { return result.hasUid; }
      }
      public string Uid {
        get { return result.Uid; }
        set { SetUid(value); }
      }
      public Builder SetUid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder ClearUid() {
        PrepareBuilder();
        result.hasUid = false;
        result.uid_ = "";
        return this;
      }
      
      public bool HasMsg {
        get { return result.hasMsg; }
      }
      public string Msg {
        get { return result.Msg; }
        set { SetMsg(value); }
      }
      public Builder SetMsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMsg = true;
        result.msg_ = value;
        return this;
      }
      public Builder ClearMsg() {
        PrepareBuilder();
        result.hasMsg = false;
        result.msg_ = "";
        return this;
      }
      
      public bool HasType {
        get { return result.hasType; }
      }
      public int Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(int value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
      
      public bool HasVmsg {
        get { return result.hasVmsg; }
      }
      public pb::ByteString Vmsg {
        get { return result.Vmsg; }
        set { SetVmsg(value); }
      }
      public Builder SetVmsg(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasVmsg = true;
        result.vmsg_ = value;
        return this;
      }
      public Builder ClearVmsg() {
        PrepareBuilder();
        result.hasVmsg = false;
        result.vmsg_ = pb::ByteString.Empty;
        return this;
      }
    }
    static UserChatMsgRequest() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserChatMsgResponse : pb::GeneratedMessage<UserChatMsgResponse, UserChatMsgResponse.Builder> {
    private UserChatMsgResponse() { }
    private static readonly UserChatMsgResponse defaultInstance = new UserChatMsgResponse().MakeReadOnly();
    private static readonly string[] _userChatMsgResponseFieldNames = new string[] { "msg", "type", "uid", "vmsg" };
    private static readonly uint[] _userChatMsgResponseFieldTags = new uint[] { 18, 24, 10, 34 };
    public static UserChatMsgResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserChatMsgResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserChatMsgResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserChatMsgResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserChatMsgResponse, UserChatMsgResponse.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserChatMsgResponse__FieldAccessorTable; }
    }
    
    public const int UidFieldNumber = 1;
    private bool hasUid;
    private string uid_ = "";
    public bool HasUid {
      get { return hasUid; }
    }
    public string Uid {
      get { return uid_; }
    }
    
    public const int MsgFieldNumber = 2;
    private bool hasMsg;
    private string msg_ = "";
    public bool HasMsg {
      get { return hasMsg; }
    }
    public string Msg {
      get { return msg_; }
    }
    
    public const int TypeFieldNumber = 3;
    private bool hasType;
    private int type_;
    public bool HasType {
      get { return hasType; }
    }
    public int Type {
      get { return type_; }
    }
    
    public const int VmsgFieldNumber = 4;
    private bool hasVmsg;
    private pb::ByteString vmsg_ = pb::ByteString.Empty;
    public bool HasVmsg {
      get { return hasVmsg; }
    }
    public pb::ByteString Vmsg {
      get { return vmsg_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUid) return false;
        if (!hasType) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userChatMsgResponseFieldNames;
      if (hasUid) {
        output.WriteString(1, field_names[2], Uid);
      }
      if (hasMsg) {
        output.WriteString(2, field_names[0], Msg);
      }
      if (hasType) {
        output.WriteInt32(3, field_names[1], Type);
      }
      if (hasVmsg) {
        output.WriteBytes(4, field_names[3], Vmsg);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Uid);
      }
      if (hasMsg) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Msg);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Type);
      }
      if (hasVmsg) {
        size += pb::CodedOutputStream.ComputeBytesSize(4, Vmsg);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserChatMsgResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserChatMsgResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserChatMsgResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserChatMsgResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserChatMsgResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserChatMsgResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserChatMsgResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserChatMsgResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserChatMsgResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserChatMsgResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserChatMsgResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserChatMsgResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserChatMsgResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserChatMsgResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserChatMsgResponse result;
      
      private UserChatMsgResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          UserChatMsgResponse original = result;
          result = new UserChatMsgResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserChatMsgResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.UserChatMsgResponse.Descriptor; }
      }
      
      public override UserChatMsgResponse DefaultInstanceForType {
        get { return global::gt_msg.UserChatMsgResponse.DefaultInstance; }
      }
      
      public override UserChatMsgResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserChatMsgResponse) {
          return MergeFrom((UserChatMsgResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserChatMsgResponse other) {
        if (other == global::gt_msg.UserChatMsgResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUid) {
          Uid = other.Uid;
        }
        if (other.HasMsg) {
          Msg = other.Msg;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasVmsg) {
          Vmsg = other.Vmsg;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userChatMsgResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userChatMsgResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUid = input.ReadString(ref result.uid_);
              break;
            }
            case 18: {
              result.hasMsg = input.ReadString(ref result.msg_);
              break;
            }
            case 24: {
              result.hasType = input.ReadInt32(ref result.type_);
              break;
            }
            case 34: {
              result.hasVmsg = input.ReadBytes(ref result.vmsg_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUid {
        get { return result.hasUid; }
      }
      public string Uid {
        get { return result.Uid; }
        set { SetUid(value); }
      }
      public Builder SetUid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder ClearUid() {
        PrepareBuilder();
        result.hasUid = false;
        result.uid_ = "";
        return this;
      }
      
      public bool HasMsg {
        get { return result.hasMsg; }
      }
      public string Msg {
        get { return result.Msg; }
        set { SetMsg(value); }
      }
      public Builder SetMsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMsg = true;
        result.msg_ = value;
        return this;
      }
      public Builder ClearMsg() {
        PrepareBuilder();
        result.hasMsg = false;
        result.msg_ = "";
        return this;
      }
      
      public bool HasType {
        get { return result.hasType; }
      }
      public int Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(int value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
      
      public bool HasVmsg {
        get { return result.hasVmsg; }
      }
      public pb::ByteString Vmsg {
        get { return result.Vmsg; }
        set { SetVmsg(value); }
      }
      public Builder SetVmsg(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasVmsg = true;
        result.vmsg_ = value;
        return this;
      }
      public Builder ClearVmsg() {
        PrepareBuilder();
        result.hasVmsg = false;
        result.vmsg_ = pb::ByteString.Empty;
        return this;
      }
    }
    static UserChatMsgResponse() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserCancleTGRequest : pb::GeneratedMessage<UserCancleTGRequest, UserCancleTGRequest.Builder> {
    private UserCancleTGRequest() { }
    private static readonly UserCancleTGRequest defaultInstance = new UserCancleTGRequest().MakeReadOnly();
    private static readonly string[] _userCancleTGRequestFieldNames = new string[] {  };
    private static readonly uint[] _userCancleTGRequestFieldTags = new uint[] {  };
    public static UserCancleTGRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserCancleTGRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserCancleTGRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserCancleTGRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserCancleTGRequest, UserCancleTGRequest.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserCancleTGRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userCancleTGRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserCancleTGRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserCancleTGRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserCancleTGRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserCancleTGRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserCancleTGRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserCancleTGRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserCancleTGRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserCancleTGRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserCancleTGRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserCancleTGRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserCancleTGRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserCancleTGRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserCancleTGRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserCancleTGRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserCancleTGRequest result;
      
      private UserCancleTGRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UserCancleTGRequest original = result;
          result = new UserCancleTGRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserCancleTGRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.UserCancleTGRequest.Descriptor; }
      }
      
      public override UserCancleTGRequest DefaultInstanceForType {
        get { return global::gt_msg.UserCancleTGRequest.DefaultInstance; }
      }
      
      public override UserCancleTGRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserCancleTGRequest) {
          return MergeFrom((UserCancleTGRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserCancleTGRequest other) {
        if (other == global::gt_msg.UserCancleTGRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userCancleTGRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userCancleTGRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UserCancleTGRequest() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserMessageIdRequest : pb::GeneratedMessage<UserMessageIdRequest, UserMessageIdRequest.Builder> {
    private UserMessageIdRequest() { }
    private static readonly UserMessageIdRequest defaultInstance = new UserMessageIdRequest().MakeReadOnly();
    private static readonly string[] _userMessageIdRequestFieldNames = new string[] {  };
    private static readonly uint[] _userMessageIdRequestFieldTags = new uint[] {  };
    public static UserMessageIdRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserMessageIdRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserMessageIdRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserMessageIdRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserMessageIdRequest, UserMessageIdRequest.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserMessageIdRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userMessageIdRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserMessageIdRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserMessageIdRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserMessageIdRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserMessageIdRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserMessageIdRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserMessageIdRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserMessageIdRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserMessageIdRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserMessageIdRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserMessageIdRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserMessageIdRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserMessageIdRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserMessageIdRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserMessageIdRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserMessageIdRequest result;
      
      private UserMessageIdRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UserMessageIdRequest original = result;
          result = new UserMessageIdRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserMessageIdRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.UserMessageIdRequest.Descriptor; }
      }
      
      public override UserMessageIdRequest DefaultInstanceForType {
        get { return global::gt_msg.UserMessageIdRequest.DefaultInstance; }
      }
      
      public override UserMessageIdRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserMessageIdRequest) {
          return MergeFrom((UserMessageIdRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserMessageIdRequest other) {
        if (other == global::gt_msg.UserMessageIdRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userMessageIdRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userMessageIdRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UserMessageIdRequest() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserMessageIdList : pb::GeneratedMessage<UserMessageIdList, UserMessageIdList.Builder> {
    private UserMessageIdList() { }
    private static readonly UserMessageIdList defaultInstance = new UserMessageIdList().MakeReadOnly();
    private static readonly string[] _userMessageIdListFieldNames = new string[] { "ids" };
    private static readonly uint[] _userMessageIdListFieldTags = new uint[] { 8 };
    public static UserMessageIdList DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserMessageIdList DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserMessageIdList ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserMessageIdList__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserMessageIdList, UserMessageIdList.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserMessageIdList__FieldAccessorTable; }
    }
    
    public const int IdsFieldNumber = 1;
    private pbc::PopsicleList<int> ids_ = new pbc::PopsicleList<int>();
    public scg::IList<int> IdsList {
      get { return pbc::Lists.AsReadOnly(ids_); }
    }
    public int IdsCount {
      get { return ids_.Count; }
    }
    public int GetIds(int index) {
      return ids_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userMessageIdListFieldNames;
      if (ids_.Count > 0) {
        output.WriteInt32Array(1, field_names[0], ids_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (int element in IdsList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * ids_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserMessageIdList ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserMessageIdList ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserMessageIdList ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserMessageIdList ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserMessageIdList ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserMessageIdList ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserMessageIdList ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserMessageIdList ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserMessageIdList ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserMessageIdList ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserMessageIdList MakeReadOnly() {
      ids_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserMessageIdList prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserMessageIdList, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserMessageIdList cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserMessageIdList result;
      
      private UserMessageIdList PrepareBuilder() {
        if (resultIsReadOnly) {
          UserMessageIdList original = result;
          result = new UserMessageIdList();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserMessageIdList MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.UserMessageIdList.Descriptor; }
      }
      
      public override UserMessageIdList DefaultInstanceForType {
        get { return global::gt_msg.UserMessageIdList.DefaultInstance; }
      }
      
      public override UserMessageIdList BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserMessageIdList) {
          return MergeFrom((UserMessageIdList) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserMessageIdList other) {
        if (other == global::gt_msg.UserMessageIdList.DefaultInstance) return this;
        PrepareBuilder();
        if (other.ids_.Count != 0) {
          result.ids_.Add(other.ids_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userMessageIdListFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userMessageIdListFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10:
            case 8: {
              input.ReadInt32Array(tag, field_name, result.ids_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<int> IdsList {
        get { return PrepareBuilder().ids_; }
      }
      public int IdsCount {
        get { return result.IdsCount; }
      }
      public int GetIds(int index) {
        return result.GetIds(index);
      }
      public Builder SetIds(int index, int value) {
        PrepareBuilder();
        result.ids_[index] = value;
        return this;
      }
      public Builder AddIds(int value) {
        PrepareBuilder();
        result.ids_.Add(value);
        return this;
      }
      public Builder AddRangeIds(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.ids_.Add(values);
        return this;
      }
      public Builder ClearIds() {
        PrepareBuilder();
        result.ids_.Clear();
        return this;
      }
    }
    static UserMessageIdList() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserMessageRequest : pb::GeneratedMessage<UserMessageRequest, UserMessageRequest.Builder> {
    private UserMessageRequest() { }
    private static readonly UserMessageRequest defaultInstance = new UserMessageRequest().MakeReadOnly();
    private static readonly string[] _userMessageRequestFieldNames = new string[] { "ids" };
    private static readonly uint[] _userMessageRequestFieldTags = new uint[] { 8 };
    public static UserMessageRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserMessageRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserMessageRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserMessageRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserMessageRequest, UserMessageRequest.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserMessageRequest__FieldAccessorTable; }
    }
    
    public const int IdsFieldNumber = 1;
    private pbc::PopsicleList<int> ids_ = new pbc::PopsicleList<int>();
    public scg::IList<int> IdsList {
      get { return pbc::Lists.AsReadOnly(ids_); }
    }
    public int IdsCount {
      get { return ids_.Count; }
    }
    public int GetIds(int index) {
      return ids_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userMessageRequestFieldNames;
      if (ids_.Count > 0) {
        output.WriteInt32Array(1, field_names[0], ids_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (int element in IdsList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * ids_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserMessageRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserMessageRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserMessageRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserMessageRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserMessageRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserMessageRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserMessageRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserMessageRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserMessageRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserMessageRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserMessageRequest MakeReadOnly() {
      ids_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserMessageRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserMessageRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserMessageRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserMessageRequest result;
      
      private UserMessageRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UserMessageRequest original = result;
          result = new UserMessageRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserMessageRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.UserMessageRequest.Descriptor; }
      }
      
      public override UserMessageRequest DefaultInstanceForType {
        get { return global::gt_msg.UserMessageRequest.DefaultInstance; }
      }
      
      public override UserMessageRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserMessageRequest) {
          return MergeFrom((UserMessageRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserMessageRequest other) {
        if (other == global::gt_msg.UserMessageRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.ids_.Count != 0) {
          result.ids_.Add(other.ids_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userMessageRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userMessageRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10:
            case 8: {
              input.ReadInt32Array(tag, field_name, result.ids_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<int> IdsList {
        get { return PrepareBuilder().ids_; }
      }
      public int IdsCount {
        get { return result.IdsCount; }
      }
      public int GetIds(int index) {
        return result.GetIds(index);
      }
      public Builder SetIds(int index, int value) {
        PrepareBuilder();
        result.ids_[index] = value;
        return this;
      }
      public Builder AddIds(int value) {
        PrepareBuilder();
        result.ids_.Add(value);
        return this;
      }
      public Builder AddRangeIds(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.ids_.Add(values);
        return this;
      }
      public Builder ClearIds() {
        PrepareBuilder();
        result.ids_.Clear();
        return this;
      }
    }
    static UserMessageRequest() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserMessageResponse : pb::GeneratedMessage<UserMessageResponse, UserMessageResponse.Builder> {
    private UserMessageResponse() { }
    private static readonly UserMessageResponse defaultInstance = new UserMessageResponse().MakeReadOnly();
    private static readonly string[] _userMessageResponseFieldNames = new string[] { "has_read", "json_params", "msg_id", "msg_time", "msg_type", "sender_nick" };
    private static readonly uint[] _userMessageResponseFieldTags = new uint[] { 24, 42, 16, 50, 8, 34 };
    public static UserMessageResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserMessageResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserMessageResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserMessageResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserMessageResponse, UserMessageResponse.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserMessageResponse__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum UserMessageType {
        Text = 0,
        TextAndItem = 1,
      }
      
    }
    #endregion
    
    public const int MsgTypeFieldNumber = 1;
    private bool hasMsgType;
    private global::gt_msg.UserMessageResponse.Types.UserMessageType msgType_ = global::gt_msg.UserMessageResponse.Types.UserMessageType.Text;
    public bool HasMsgType {
      get { return hasMsgType; }
    }
    public global::gt_msg.UserMessageResponse.Types.UserMessageType MsgType {
      get { return msgType_; }
    }
    
    public const int MsgIdFieldNumber = 2;
    private bool hasMsgId;
    private int msgId_;
    public bool HasMsgId {
      get { return hasMsgId; }
    }
    public int MsgId {
      get { return msgId_; }
    }
    
    public const int HasReadFieldNumber = 3;
    private bool hasHasRead;
    private bool hasRead_;
    public bool HasHasRead {
      get { return hasHasRead; }
    }
    public bool HasRead {
      get { return hasRead_; }
    }
    
    public const int SenderNickFieldNumber = 4;
    private bool hasSenderNick;
    private string senderNick_ = "";
    public bool HasSenderNick {
      get { return hasSenderNick; }
    }
    public string SenderNick {
      get { return senderNick_; }
    }
    
    public const int JsonParamsFieldNumber = 5;
    private bool hasJsonParams;
    private string jsonParams_ = "";
    public bool HasJsonParams {
      get { return hasJsonParams; }
    }
    public string JsonParams {
      get { return jsonParams_; }
    }
    
    public const int MsgTimeFieldNumber = 6;
    private bool hasMsgTime;
    private string msgTime_ = "";
    public bool HasMsgTime {
      get { return hasMsgTime; }
    }
    public string MsgTime {
      get { return msgTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMsgType) return false;
        if (!hasMsgId) return false;
        if (!hasHasRead) return false;
        if (!hasSenderNick) return false;
        if (!hasJsonParams) return false;
        if (!hasMsgTime) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userMessageResponseFieldNames;
      if (hasMsgType) {
        output.WriteEnum(1, field_names[4], (int) MsgType, MsgType);
      }
      if (hasMsgId) {
        output.WriteInt32(2, field_names[2], MsgId);
      }
      if (hasHasRead) {
        output.WriteBool(3, field_names[0], HasRead);
      }
      if (hasSenderNick) {
        output.WriteString(4, field_names[5], SenderNick);
      }
      if (hasJsonParams) {
        output.WriteString(5, field_names[1], JsonParams);
      }
      if (hasMsgTime) {
        output.WriteString(6, field_names[3], MsgTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMsgType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) MsgType);
      }
      if (hasMsgId) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, MsgId);
      }
      if (hasHasRead) {
        size += pb::CodedOutputStream.ComputeBoolSize(3, HasRead);
      }
      if (hasSenderNick) {
        size += pb::CodedOutputStream.ComputeStringSize(4, SenderNick);
      }
      if (hasJsonParams) {
        size += pb::CodedOutputStream.ComputeStringSize(5, JsonParams);
      }
      if (hasMsgTime) {
        size += pb::CodedOutputStream.ComputeStringSize(6, MsgTime);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserMessageResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserMessageResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserMessageResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserMessageResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserMessageResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserMessageResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserMessageResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserMessageResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserMessageResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserMessageResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserMessageResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserMessageResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserMessageResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserMessageResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserMessageResponse result;
      
      private UserMessageResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          UserMessageResponse original = result;
          result = new UserMessageResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserMessageResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.UserMessageResponse.Descriptor; }
      }
      
      public override UserMessageResponse DefaultInstanceForType {
        get { return global::gt_msg.UserMessageResponse.DefaultInstance; }
      }
      
      public override UserMessageResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserMessageResponse) {
          return MergeFrom((UserMessageResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserMessageResponse other) {
        if (other == global::gt_msg.UserMessageResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMsgType) {
          MsgType = other.MsgType;
        }
        if (other.HasMsgId) {
          MsgId = other.MsgId;
        }
        if (other.HasHasRead) {
          HasRead = other.HasRead;
        }
        if (other.HasSenderNick) {
          SenderNick = other.SenderNick;
        }
        if (other.HasJsonParams) {
          JsonParams = other.JsonParams;
        }
        if (other.HasMsgTime) {
          MsgTime = other.MsgTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userMessageResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userMessageResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.msgType_, out unknown)) {
                result.hasMsgType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasMsgId = input.ReadInt32(ref result.msgId_);
              break;
            }
            case 24: {
              result.hasHasRead = input.ReadBool(ref result.hasRead_);
              break;
            }
            case 34: {
              result.hasSenderNick = input.ReadString(ref result.senderNick_);
              break;
            }
            case 42: {
              result.hasJsonParams = input.ReadString(ref result.jsonParams_);
              break;
            }
            case 50: {
              result.hasMsgTime = input.ReadString(ref result.msgTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMsgType {
       get { return result.hasMsgType; }
      }
      public global::gt_msg.UserMessageResponse.Types.UserMessageType MsgType {
        get { return result.MsgType; }
        set { SetMsgType(value); }
      }
      public Builder SetMsgType(global::gt_msg.UserMessageResponse.Types.UserMessageType value) {
        PrepareBuilder();
        result.hasMsgType = true;
        result.msgType_ = value;
        return this;
      }
      public Builder ClearMsgType() {
        PrepareBuilder();
        result.hasMsgType = false;
        result.msgType_ = global::gt_msg.UserMessageResponse.Types.UserMessageType.Text;
        return this;
      }
      
      public bool HasMsgId {
        get { return result.hasMsgId; }
      }
      public int MsgId {
        get { return result.MsgId; }
        set { SetMsgId(value); }
      }
      public Builder SetMsgId(int value) {
        PrepareBuilder();
        result.hasMsgId = true;
        result.msgId_ = value;
        return this;
      }
      public Builder ClearMsgId() {
        PrepareBuilder();
        result.hasMsgId = false;
        result.msgId_ = 0;
        return this;
      }
      
      public bool HasHasRead {
        get { return result.hasHasRead; }
      }
      public bool HasRead {
        get { return result.HasRead; }
        set { SetHasRead(value); }
      }
      public Builder SetHasRead(bool value) {
        PrepareBuilder();
        result.hasHasRead = true;
        result.hasRead_ = value;
        return this;
      }
      public Builder ClearHasRead() {
        PrepareBuilder();
        result.hasHasRead = false;
        result.hasRead_ = false;
        return this;
      }
      
      public bool HasSenderNick {
        get { return result.hasSenderNick; }
      }
      public string SenderNick {
        get { return result.SenderNick; }
        set { SetSenderNick(value); }
      }
      public Builder SetSenderNick(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSenderNick = true;
        result.senderNick_ = value;
        return this;
      }
      public Builder ClearSenderNick() {
        PrepareBuilder();
        result.hasSenderNick = false;
        result.senderNick_ = "";
        return this;
      }
      
      public bool HasJsonParams {
        get { return result.hasJsonParams; }
      }
      public string JsonParams {
        get { return result.JsonParams; }
        set { SetJsonParams(value); }
      }
      public Builder SetJsonParams(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasJsonParams = true;
        result.jsonParams_ = value;
        return this;
      }
      public Builder ClearJsonParams() {
        PrepareBuilder();
        result.hasJsonParams = false;
        result.jsonParams_ = "";
        return this;
      }
      
      public bool HasMsgTime {
        get { return result.hasMsgTime; }
      }
      public string MsgTime {
        get { return result.MsgTime; }
        set { SetMsgTime(value); }
      }
      public Builder SetMsgTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMsgTime = true;
        result.msgTime_ = value;
        return this;
      }
      public Builder ClearMsgTime() {
        PrepareBuilder();
        result.hasMsgTime = false;
        result.msgTime_ = "";
        return this;
      }
    }
    static UserMessageResponse() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserMessageActionRequest : pb::GeneratedMessage<UserMessageActionRequest, UserMessageActionRequest.Builder> {
    private UserMessageActionRequest() { }
    private static readonly UserMessageActionRequest defaultInstance = new UserMessageActionRequest().MakeReadOnly();
    private static readonly string[] _userMessageActionRequestFieldNames = new string[] { "action", "msg_id" };
    private static readonly uint[] _userMessageActionRequestFieldTags = new uint[] { 8, 16 };
    public static UserMessageActionRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserMessageActionRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserMessageActionRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserMessageActionRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserMessageActionRequest, UserMessageActionRequest.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserMessageActionRequest__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum UserMessageActionCode {
        Delete = 0,
        MarkAsRead = 1,
        PickItem = 2,
      }
      
    }
    #endregion
    
    public const int ActionFieldNumber = 1;
    private bool hasAction;
    private global::gt_msg.UserMessageActionRequest.Types.UserMessageActionCode action_ = global::gt_msg.UserMessageActionRequest.Types.UserMessageActionCode.Delete;
    public bool HasAction {
      get { return hasAction; }
    }
    public global::gt_msg.UserMessageActionRequest.Types.UserMessageActionCode Action {
      get { return action_; }
    }
    
    public const int MsgIdFieldNumber = 2;
    private bool hasMsgId;
    private int msgId_;
    public bool HasMsgId {
      get { return hasMsgId; }
    }
    public int MsgId {
      get { return msgId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAction) return false;
        if (!hasMsgId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userMessageActionRequestFieldNames;
      if (hasAction) {
        output.WriteEnum(1, field_names[0], (int) Action, Action);
      }
      if (hasMsgId) {
        output.WriteInt32(2, field_names[1], MsgId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAction) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Action);
      }
      if (hasMsgId) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, MsgId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserMessageActionRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserMessageActionRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserMessageActionRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserMessageActionRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserMessageActionRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserMessageActionRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserMessageActionRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserMessageActionRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserMessageActionRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserMessageActionRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserMessageActionRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserMessageActionRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserMessageActionRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserMessageActionRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserMessageActionRequest result;
      
      private UserMessageActionRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UserMessageActionRequest original = result;
          result = new UserMessageActionRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserMessageActionRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.UserMessageActionRequest.Descriptor; }
      }
      
      public override UserMessageActionRequest DefaultInstanceForType {
        get { return global::gt_msg.UserMessageActionRequest.DefaultInstance; }
      }
      
      public override UserMessageActionRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserMessageActionRequest) {
          return MergeFrom((UserMessageActionRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserMessageActionRequest other) {
        if (other == global::gt_msg.UserMessageActionRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAction) {
          Action = other.Action;
        }
        if (other.HasMsgId) {
          MsgId = other.MsgId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userMessageActionRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userMessageActionRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.action_, out unknown)) {
                result.hasAction = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasMsgId = input.ReadInt32(ref result.msgId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAction {
       get { return result.hasAction; }
      }
      public global::gt_msg.UserMessageActionRequest.Types.UserMessageActionCode Action {
        get { return result.Action; }
        set { SetAction(value); }
      }
      public Builder SetAction(global::gt_msg.UserMessageActionRequest.Types.UserMessageActionCode value) {
        PrepareBuilder();
        result.hasAction = true;
        result.action_ = value;
        return this;
      }
      public Builder ClearAction() {
        PrepareBuilder();
        result.hasAction = false;
        result.action_ = global::gt_msg.UserMessageActionRequest.Types.UserMessageActionCode.Delete;
        return this;
      }
      
      public bool HasMsgId {
        get { return result.hasMsgId; }
      }
      public int MsgId {
        get { return result.MsgId; }
        set { SetMsgId(value); }
      }
      public Builder SetMsgId(int value) {
        PrepareBuilder();
        result.hasMsgId = true;
        result.msgId_ = value;
        return this;
      }
      public Builder ClearMsgId() {
        PrepareBuilder();
        result.hasMsgId = false;
        result.msgId_ = 0;
        return this;
      }
    }
    static UserMessageActionRequest() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserMessageActionResponse : pb::GeneratedMessage<UserMessageActionResponse, UserMessageActionResponse.Builder> {
    private UserMessageActionResponse() { }
    private static readonly UserMessageActionResponse defaultInstance = new UserMessageActionResponse().MakeReadOnly();
    private static readonly string[] _userMessageActionResponseFieldNames = new string[] { "action", "code", "item_amounts", "item_types", "msg_id" };
    private static readonly uint[] _userMessageActionResponseFieldTags = new uint[] { 40, 8, 34, 26, 16 };
    public static UserMessageActionResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserMessageActionResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserMessageActionResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserMessageActionResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserMessageActionResponse, UserMessageActionResponse.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserMessageActionResponse__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum UserMessageActRespCode {
        Ok = 0,
        NoSuchData = 1,
        ItemAlreadyPicked = 2,
        ItemNotExist = 3,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.UserMessageActionResponse.Types.UserMessageActRespCode code_ = global::gt_msg.UserMessageActionResponse.Types.UserMessageActRespCode.Ok;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.UserMessageActionResponse.Types.UserMessageActRespCode Code {
      get { return code_; }
    }
    
    public const int MsgIdFieldNumber = 2;
    private bool hasMsgId;
    private int msgId_;
    public bool HasMsgId {
      get { return hasMsgId; }
    }
    public int MsgId {
      get { return msgId_; }
    }
    
    public const int ItemTypesFieldNumber = 3;
    private int itemTypesMemoizedSerializedSize;
    private pbc::PopsicleList<int> itemTypes_ = new pbc::PopsicleList<int>();
    public scg::IList<int> ItemTypesList {
      get { return pbc::Lists.AsReadOnly(itemTypes_); }
    }
    public int ItemTypesCount {
      get { return itemTypes_.Count; }
    }
    public int GetItemTypes(int index) {
      return itemTypes_[index];
    }
    
    public const int ItemAmountsFieldNumber = 4;
    private int itemAmountsMemoizedSerializedSize;
    private pbc::PopsicleList<int> itemAmounts_ = new pbc::PopsicleList<int>();
    public scg::IList<int> ItemAmountsList {
      get { return pbc::Lists.AsReadOnly(itemAmounts_); }
    }
    public int ItemAmountsCount {
      get { return itemAmounts_.Count; }
    }
    public int GetItemAmounts(int index) {
      return itemAmounts_[index];
    }
    
    public const int ActionFieldNumber = 5;
    private bool hasAction;
    private global::gt_msg.UserMessageActionRequest.Types.UserMessageActionCode action_ = global::gt_msg.UserMessageActionRequest.Types.UserMessageActionCode.Delete;
    public bool HasAction {
      get { return hasAction; }
    }
    public global::gt_msg.UserMessageActionRequest.Types.UserMessageActionCode Action {
      get { return action_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        if (!hasMsgId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userMessageActionResponseFieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[1], (int) Code, Code);
      }
      if (hasMsgId) {
        output.WriteInt32(2, field_names[4], MsgId);
      }
      if (itemTypes_.Count > 0) {
        output.WritePackedInt32Array(3, field_names[3], itemTypesMemoizedSerializedSize, itemTypes_);
      }
      if (itemAmounts_.Count > 0) {
        output.WritePackedInt32Array(4, field_names[2], itemAmountsMemoizedSerializedSize, itemAmounts_);
      }
      if (hasAction) {
        output.WriteEnum(5, field_names[0], (int) Action, Action);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasMsgId) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, MsgId);
      }
      {
        int dataSize = 0;
        foreach (int element in ItemTypesList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        if (itemTypes_.Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
        }
        itemTypesMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        foreach (int element in ItemAmountsList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        if (itemAmounts_.Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
        }
        itemAmountsMemoizedSerializedSize = dataSize;
      }
      if (hasAction) {
        size += pb::CodedOutputStream.ComputeEnumSize(5, (int) Action);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserMessageActionResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserMessageActionResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserMessageActionResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserMessageActionResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserMessageActionResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserMessageActionResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserMessageActionResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserMessageActionResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserMessageActionResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserMessageActionResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserMessageActionResponse MakeReadOnly() {
      itemTypes_.MakeReadOnly();
      itemAmounts_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserMessageActionResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserMessageActionResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserMessageActionResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserMessageActionResponse result;
      
      private UserMessageActionResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          UserMessageActionResponse original = result;
          result = new UserMessageActionResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserMessageActionResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.UserMessageActionResponse.Descriptor; }
      }
      
      public override UserMessageActionResponse DefaultInstanceForType {
        get { return global::gt_msg.UserMessageActionResponse.DefaultInstance; }
      }
      
      public override UserMessageActionResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserMessageActionResponse) {
          return MergeFrom((UserMessageActionResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserMessageActionResponse other) {
        if (other == global::gt_msg.UserMessageActionResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasMsgId) {
          MsgId = other.MsgId;
        }
        if (other.itemTypes_.Count != 0) {
          result.itemTypes_.Add(other.itemTypes_);
        }
        if (other.itemAmounts_.Count != 0) {
          result.itemAmounts_.Add(other.itemAmounts_);
        }
        if (other.HasAction) {
          Action = other.Action;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userMessageActionResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userMessageActionResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasMsgId = input.ReadInt32(ref result.msgId_);
              break;
            }
            case 26:
            case 24: {
              input.ReadInt32Array(tag, field_name, result.itemTypes_);
              break;
            }
            case 34:
            case 32: {
              input.ReadInt32Array(tag, field_name, result.itemAmounts_);
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.action_, out unknown)) {
                result.hasAction = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.UserMessageActionResponse.Types.UserMessageActRespCode Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.UserMessageActionResponse.Types.UserMessageActRespCode value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.UserMessageActionResponse.Types.UserMessageActRespCode.Ok;
        return this;
      }
      
      public bool HasMsgId {
        get { return result.hasMsgId; }
      }
      public int MsgId {
        get { return result.MsgId; }
        set { SetMsgId(value); }
      }
      public Builder SetMsgId(int value) {
        PrepareBuilder();
        result.hasMsgId = true;
        result.msgId_ = value;
        return this;
      }
      public Builder ClearMsgId() {
        PrepareBuilder();
        result.hasMsgId = false;
        result.msgId_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<int> ItemTypesList {
        get { return PrepareBuilder().itemTypes_; }
      }
      public int ItemTypesCount {
        get { return result.ItemTypesCount; }
      }
      public int GetItemTypes(int index) {
        return result.GetItemTypes(index);
      }
      public Builder SetItemTypes(int index, int value) {
        PrepareBuilder();
        result.itemTypes_[index] = value;
        return this;
      }
      public Builder AddItemTypes(int value) {
        PrepareBuilder();
        result.itemTypes_.Add(value);
        return this;
      }
      public Builder AddRangeItemTypes(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.itemTypes_.Add(values);
        return this;
      }
      public Builder ClearItemTypes() {
        PrepareBuilder();
        result.itemTypes_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<int> ItemAmountsList {
        get { return PrepareBuilder().itemAmounts_; }
      }
      public int ItemAmountsCount {
        get { return result.ItemAmountsCount; }
      }
      public int GetItemAmounts(int index) {
        return result.GetItemAmounts(index);
      }
      public Builder SetItemAmounts(int index, int value) {
        PrepareBuilder();
        result.itemAmounts_[index] = value;
        return this;
      }
      public Builder AddItemAmounts(int value) {
        PrepareBuilder();
        result.itemAmounts_.Add(value);
        return this;
      }
      public Builder AddRangeItemAmounts(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.itemAmounts_.Add(values);
        return this;
      }
      public Builder ClearItemAmounts() {
        PrepareBuilder();
        result.itemAmounts_.Clear();
        return this;
      }
      
      public bool HasAction {
       get { return result.hasAction; }
      }
      public global::gt_msg.UserMessageActionRequest.Types.UserMessageActionCode Action {
        get { return result.Action; }
        set { SetAction(value); }
      }
      public Builder SetAction(global::gt_msg.UserMessageActionRequest.Types.UserMessageActionCode value) {
        PrepareBuilder();
        result.hasAction = true;
        result.action_ = value;
        return this;
      }
      public Builder ClearAction() {
        PrepareBuilder();
        result.hasAction = false;
        result.action_ = global::gt_msg.UserMessageActionRequest.Types.UserMessageActionCode.Delete;
        return this;
      }
    }
    static UserMessageActionResponse() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EnterTableInfoRequest : pb::GeneratedMessage<EnterTableInfoRequest, EnterTableInfoRequest.Builder> {
    private EnterTableInfoRequest() { }
    private static readonly EnterTableInfoRequest defaultInstance = new EnterTableInfoRequest().MakeReadOnly();
    private static readonly string[] _enterTableInfoRequestFieldNames = new string[] { "gameName", "type" };
    private static readonly uint[] _enterTableInfoRequestFieldTags = new uint[] { 10, 16 };
    public static EnterTableInfoRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EnterTableInfoRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EnterTableInfoRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_EnterTableInfoRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EnterTableInfoRequest, EnterTableInfoRequest.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_EnterTableInfoRequest__FieldAccessorTable; }
    }
    
    public const int GameNameFieldNumber = 1;
    private bool hasGameName;
    private string gameName_ = "";
    public bool HasGameName {
      get { return hasGameName; }
    }
    public string GameName {
      get { return gameName_; }
    }
    
    public const int TypeFieldNumber = 2;
    private bool hasType;
    private int type_;
    public bool HasType {
      get { return hasType; }
    }
    public int Type {
      get { return type_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGameName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _enterTableInfoRequestFieldNames;
      if (hasGameName) {
        output.WriteString(1, field_names[0], GameName);
      }
      if (hasType) {
        output.WriteInt32(2, field_names[1], Type);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasGameName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, GameName);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Type);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EnterTableInfoRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EnterTableInfoRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EnterTableInfoRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EnterTableInfoRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EnterTableInfoRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EnterTableInfoRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EnterTableInfoRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EnterTableInfoRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EnterTableInfoRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EnterTableInfoRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EnterTableInfoRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EnterTableInfoRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EnterTableInfoRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EnterTableInfoRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EnterTableInfoRequest result;
      
      private EnterTableInfoRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          EnterTableInfoRequest original = result;
          result = new EnterTableInfoRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EnterTableInfoRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.EnterTableInfoRequest.Descriptor; }
      }
      
      public override EnterTableInfoRequest DefaultInstanceForType {
        get { return global::gt_msg.EnterTableInfoRequest.DefaultInstance; }
      }
      
      public override EnterTableInfoRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EnterTableInfoRequest) {
          return MergeFrom((EnterTableInfoRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EnterTableInfoRequest other) {
        if (other == global::gt_msg.EnterTableInfoRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameName) {
          GameName = other.GameName;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_enterTableInfoRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _enterTableInfoRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGameName = input.ReadString(ref result.gameName_);
              break;
            }
            case 16: {
              result.hasType = input.ReadInt32(ref result.type_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameName {
        get { return result.hasGameName; }
      }
      public string GameName {
        get { return result.GameName; }
        set { SetGameName(value); }
      }
      public Builder SetGameName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameName = true;
        result.gameName_ = value;
        return this;
      }
      public Builder ClearGameName() {
        PrepareBuilder();
        result.hasGameName = false;
        result.gameName_ = "";
        return this;
      }
      
      public bool HasType {
        get { return result.hasType; }
      }
      public int Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(int value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
    }
    static EnterTableInfoRequest() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EnterInfo : pb::GeneratedMessage<EnterInfo, EnterInfo.Builder> {
    private EnterInfo() { }
    private static readonly EnterInfo defaultInstance = new EnterInfo().MakeReadOnly();
    private static readonly string[] _enterInfoFieldNames = new string[] { "OnlineNum", "basePoint", "level", "maxRound", "minEnter", "minEnterType", "minKickOut", "minKickOutType" };
    private static readonly uint[] _enterInfoFieldTags = new uint[] { 64, 8, 56, 48, 26, 16, 40, 32 };
    public static EnterInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EnterInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EnterInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_EnterInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EnterInfo, EnterInfo.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_EnterInfo__FieldAccessorTable; }
    }
    
    public const int BasePointFieldNumber = 1;
    private pbc::PopsicleList<int> basePoint_ = new pbc::PopsicleList<int>();
    public scg::IList<int> BasePointList {
      get { return pbc::Lists.AsReadOnly(basePoint_); }
    }
    public int BasePointCount {
      get { return basePoint_.Count; }
    }
    public int GetBasePoint(int index) {
      return basePoint_[index];
    }
    
    public const int MinEnterTypeFieldNumber = 2;
    private bool hasMinEnterType;
    private int minEnterType_;
    public bool HasMinEnterType {
      get { return hasMinEnterType; }
    }
    public int MinEnterType {
      get { return minEnterType_; }
    }
    
    public const int MinEnterFieldNumber = 3;
    private int minEnterMemoizedSerializedSize;
    private pbc::PopsicleList<int> minEnter_ = new pbc::PopsicleList<int>();
    public scg::IList<int> MinEnterList {
      get { return pbc::Lists.AsReadOnly(minEnter_); }
    }
    public int MinEnterCount {
      get { return minEnter_.Count; }
    }
    public int GetMinEnter(int index) {
      return minEnter_[index];
    }
    
    public const int MinKickOutTypeFieldNumber = 4;
    private bool hasMinKickOutType;
    private int minKickOutType_;
    public bool HasMinKickOutType {
      get { return hasMinKickOutType; }
    }
    public int MinKickOutType {
      get { return minKickOutType_; }
    }
    
    public const int MinKickOutFieldNumber = 5;
    private pbc::PopsicleList<int> minKickOut_ = new pbc::PopsicleList<int>();
    public scg::IList<int> MinKickOutList {
      get { return pbc::Lists.AsReadOnly(minKickOut_); }
    }
    public int MinKickOutCount {
      get { return minKickOut_.Count; }
    }
    public int GetMinKickOut(int index) {
      return minKickOut_[index];
    }
    
    public const int MaxRoundFieldNumber = 6;
    private bool hasMaxRound;
    private int maxRound_;
    public bool HasMaxRound {
      get { return hasMaxRound; }
    }
    public int MaxRound {
      get { return maxRound_; }
    }
    
    public const int LevelFieldNumber = 7;
    private bool hasLevel;
    private int level_;
    public bool HasLevel {
      get { return hasLevel; }
    }
    public int Level {
      get { return level_; }
    }
    
    public const int OnlineNumFieldNumber = 8;
    private bool hasOnlineNum;
    private int onlineNum_;
    public bool HasOnlineNum {
      get { return hasOnlineNum; }
    }
    public int OnlineNum {
      get { return onlineNum_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMinEnterType) return false;
        if (!hasMinKickOutType) return false;
        if (!hasLevel) return false;
        if (!hasOnlineNum) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _enterInfoFieldNames;
      if (basePoint_.Count > 0) {
        output.WriteInt32Array(1, field_names[1], basePoint_);
      }
      if (hasMinEnterType) {
        output.WriteInt32(2, field_names[5], MinEnterType);
      }
      if (minEnter_.Count > 0) {
        output.WritePackedInt32Array(3, field_names[4], minEnterMemoizedSerializedSize, minEnter_);
      }
      if (hasMinKickOutType) {
        output.WriteInt32(4, field_names[7], MinKickOutType);
      }
      if (minKickOut_.Count > 0) {
        output.WriteInt32Array(5, field_names[6], minKickOut_);
      }
      if (hasMaxRound) {
        output.WriteInt32(6, field_names[3], MaxRound);
      }
      if (hasLevel) {
        output.WriteInt32(7, field_names[2], Level);
      }
      if (hasOnlineNum) {
        output.WriteInt32(8, field_names[0], OnlineNum);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (int element in BasePointList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * basePoint_.Count;
      }
      if (hasMinEnterType) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, MinEnterType);
      }
      {
        int dataSize = 0;
        foreach (int element in MinEnterList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        if (minEnter_.Count != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
        }
        minEnterMemoizedSerializedSize = dataSize;
      }
      if (hasMinKickOutType) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, MinKickOutType);
      }
      {
        int dataSize = 0;
        foreach (int element in MinKickOutList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * minKickOut_.Count;
      }
      if (hasMaxRound) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, MaxRound);
      }
      if (hasLevel) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, Level);
      }
      if (hasOnlineNum) {
        size += pb::CodedOutputStream.ComputeInt32Size(8, OnlineNum);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EnterInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EnterInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EnterInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EnterInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EnterInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EnterInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EnterInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EnterInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EnterInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EnterInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EnterInfo MakeReadOnly() {
      basePoint_.MakeReadOnly();
      minEnter_.MakeReadOnly();
      minKickOut_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EnterInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EnterInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EnterInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EnterInfo result;
      
      private EnterInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          EnterInfo original = result;
          result = new EnterInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EnterInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.EnterInfo.Descriptor; }
      }
      
      public override EnterInfo DefaultInstanceForType {
        get { return global::gt_msg.EnterInfo.DefaultInstance; }
      }
      
      public override EnterInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EnterInfo) {
          return MergeFrom((EnterInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EnterInfo other) {
        if (other == global::gt_msg.EnterInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.basePoint_.Count != 0) {
          result.basePoint_.Add(other.basePoint_);
        }
        if (other.HasMinEnterType) {
          MinEnterType = other.MinEnterType;
        }
        if (other.minEnter_.Count != 0) {
          result.minEnter_.Add(other.minEnter_);
        }
        if (other.HasMinKickOutType) {
          MinKickOutType = other.MinKickOutType;
        }
        if (other.minKickOut_.Count != 0) {
          result.minKickOut_.Add(other.minKickOut_);
        }
        if (other.HasMaxRound) {
          MaxRound = other.MaxRound;
        }
        if (other.HasLevel) {
          Level = other.Level;
        }
        if (other.HasOnlineNum) {
          OnlineNum = other.OnlineNum;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_enterInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _enterInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10:
            case 8: {
              input.ReadInt32Array(tag, field_name, result.basePoint_);
              break;
            }
            case 16: {
              result.hasMinEnterType = input.ReadInt32(ref result.minEnterType_);
              break;
            }
            case 26:
            case 24: {
              input.ReadInt32Array(tag, field_name, result.minEnter_);
              break;
            }
            case 32: {
              result.hasMinKickOutType = input.ReadInt32(ref result.minKickOutType_);
              break;
            }
            case 42:
            case 40: {
              input.ReadInt32Array(tag, field_name, result.minKickOut_);
              break;
            }
            case 48: {
              result.hasMaxRound = input.ReadInt32(ref result.maxRound_);
              break;
            }
            case 56: {
              result.hasLevel = input.ReadInt32(ref result.level_);
              break;
            }
            case 64: {
              result.hasOnlineNum = input.ReadInt32(ref result.onlineNum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<int> BasePointList {
        get { return PrepareBuilder().basePoint_; }
      }
      public int BasePointCount {
        get { return result.BasePointCount; }
      }
      public int GetBasePoint(int index) {
        return result.GetBasePoint(index);
      }
      public Builder SetBasePoint(int index, int value) {
        PrepareBuilder();
        result.basePoint_[index] = value;
        return this;
      }
      public Builder AddBasePoint(int value) {
        PrepareBuilder();
        result.basePoint_.Add(value);
        return this;
      }
      public Builder AddRangeBasePoint(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.basePoint_.Add(values);
        return this;
      }
      public Builder ClearBasePoint() {
        PrepareBuilder();
        result.basePoint_.Clear();
        return this;
      }
      
      public bool HasMinEnterType {
        get { return result.hasMinEnterType; }
      }
      public int MinEnterType {
        get { return result.MinEnterType; }
        set { SetMinEnterType(value); }
      }
      public Builder SetMinEnterType(int value) {
        PrepareBuilder();
        result.hasMinEnterType = true;
        result.minEnterType_ = value;
        return this;
      }
      public Builder ClearMinEnterType() {
        PrepareBuilder();
        result.hasMinEnterType = false;
        result.minEnterType_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<int> MinEnterList {
        get { return PrepareBuilder().minEnter_; }
      }
      public int MinEnterCount {
        get { return result.MinEnterCount; }
      }
      public int GetMinEnter(int index) {
        return result.GetMinEnter(index);
      }
      public Builder SetMinEnter(int index, int value) {
        PrepareBuilder();
        result.minEnter_[index] = value;
        return this;
      }
      public Builder AddMinEnter(int value) {
        PrepareBuilder();
        result.minEnter_.Add(value);
        return this;
      }
      public Builder AddRangeMinEnter(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.minEnter_.Add(values);
        return this;
      }
      public Builder ClearMinEnter() {
        PrepareBuilder();
        result.minEnter_.Clear();
        return this;
      }
      
      public bool HasMinKickOutType {
        get { return result.hasMinKickOutType; }
      }
      public int MinKickOutType {
        get { return result.MinKickOutType; }
        set { SetMinKickOutType(value); }
      }
      public Builder SetMinKickOutType(int value) {
        PrepareBuilder();
        result.hasMinKickOutType = true;
        result.minKickOutType_ = value;
        return this;
      }
      public Builder ClearMinKickOutType() {
        PrepareBuilder();
        result.hasMinKickOutType = false;
        result.minKickOutType_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<int> MinKickOutList {
        get { return PrepareBuilder().minKickOut_; }
      }
      public int MinKickOutCount {
        get { return result.MinKickOutCount; }
      }
      public int GetMinKickOut(int index) {
        return result.GetMinKickOut(index);
      }
      public Builder SetMinKickOut(int index, int value) {
        PrepareBuilder();
        result.minKickOut_[index] = value;
        return this;
      }
      public Builder AddMinKickOut(int value) {
        PrepareBuilder();
        result.minKickOut_.Add(value);
        return this;
      }
      public Builder AddRangeMinKickOut(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.minKickOut_.Add(values);
        return this;
      }
      public Builder ClearMinKickOut() {
        PrepareBuilder();
        result.minKickOut_.Clear();
        return this;
      }
      
      public bool HasMaxRound {
        get { return result.hasMaxRound; }
      }
      public int MaxRound {
        get { return result.MaxRound; }
        set { SetMaxRound(value); }
      }
      public Builder SetMaxRound(int value) {
        PrepareBuilder();
        result.hasMaxRound = true;
        result.maxRound_ = value;
        return this;
      }
      public Builder ClearMaxRound() {
        PrepareBuilder();
        result.hasMaxRound = false;
        result.maxRound_ = 0;
        return this;
      }
      
      public bool HasLevel {
        get { return result.hasLevel; }
      }
      public int Level {
        get { return result.Level; }
        set { SetLevel(value); }
      }
      public Builder SetLevel(int value) {
        PrepareBuilder();
        result.hasLevel = true;
        result.level_ = value;
        return this;
      }
      public Builder ClearLevel() {
        PrepareBuilder();
        result.hasLevel = false;
        result.level_ = 0;
        return this;
      }
      
      public bool HasOnlineNum {
        get { return result.hasOnlineNum; }
      }
      public int OnlineNum {
        get { return result.OnlineNum; }
        set { SetOnlineNum(value); }
      }
      public Builder SetOnlineNum(int value) {
        PrepareBuilder();
        result.hasOnlineNum = true;
        result.onlineNum_ = value;
        return this;
      }
      public Builder ClearOnlineNum() {
        PrepareBuilder();
        result.hasOnlineNum = false;
        result.onlineNum_ = 0;
        return this;
      }
    }
    static EnterInfo() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EnterTableInfoResponse : pb::GeneratedMessage<EnterTableInfoResponse, EnterTableInfoResponse.Builder> {
    private EnterTableInfoResponse() { }
    private static readonly EnterTableInfoResponse defaultInstance = new EnterTableInfoResponse().MakeReadOnly();
    private static readonly string[] _enterTableInfoResponseFieldNames = new string[] { "gameName", "info" };
    private static readonly uint[] _enterTableInfoResponseFieldTags = new uint[] { 10, 18 };
    public static EnterTableInfoResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EnterTableInfoResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EnterTableInfoResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_EnterTableInfoResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EnterTableInfoResponse, EnterTableInfoResponse.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_EnterTableInfoResponse__FieldAccessorTable; }
    }
    
    public const int GameNameFieldNumber = 1;
    private bool hasGameName;
    private string gameName_ = "";
    public bool HasGameName {
      get { return hasGameName; }
    }
    public string GameName {
      get { return gameName_; }
    }
    
    public const int InfoFieldNumber = 2;
    private pbc::PopsicleList<global::gt_msg.EnterInfo> info_ = new pbc::PopsicleList<global::gt_msg.EnterInfo>();
    public scg::IList<global::gt_msg.EnterInfo> InfoList {
      get { return info_; }
    }
    public int InfoCount {
      get { return info_.Count; }
    }
    public global::gt_msg.EnterInfo GetInfo(int index) {
      return info_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasGameName) return false;
        foreach (global::gt_msg.EnterInfo element in InfoList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _enterTableInfoResponseFieldNames;
      if (hasGameName) {
        output.WriteString(1, field_names[0], GameName);
      }
      if (info_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], info_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasGameName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, GameName);
      }
      foreach (global::gt_msg.EnterInfo element in InfoList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EnterTableInfoResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EnterTableInfoResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EnterTableInfoResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EnterTableInfoResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EnterTableInfoResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EnterTableInfoResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EnterTableInfoResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EnterTableInfoResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EnterTableInfoResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EnterTableInfoResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EnterTableInfoResponse MakeReadOnly() {
      info_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EnterTableInfoResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EnterTableInfoResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EnterTableInfoResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EnterTableInfoResponse result;
      
      private EnterTableInfoResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          EnterTableInfoResponse original = result;
          result = new EnterTableInfoResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EnterTableInfoResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.EnterTableInfoResponse.Descriptor; }
      }
      
      public override EnterTableInfoResponse DefaultInstanceForType {
        get { return global::gt_msg.EnterTableInfoResponse.DefaultInstance; }
      }
      
      public override EnterTableInfoResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EnterTableInfoResponse) {
          return MergeFrom((EnterTableInfoResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EnterTableInfoResponse other) {
        if (other == global::gt_msg.EnterTableInfoResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGameName) {
          GameName = other.GameName;
        }
        if (other.info_.Count != 0) {
          result.info_.Add(other.info_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_enterTableInfoResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _enterTableInfoResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGameName = input.ReadString(ref result.gameName_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.info_, global::gt_msg.EnterInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGameName {
        get { return result.hasGameName; }
      }
      public string GameName {
        get { return result.GameName; }
        set { SetGameName(value); }
      }
      public Builder SetGameName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameName = true;
        result.gameName_ = value;
        return this;
      }
      public Builder ClearGameName() {
        PrepareBuilder();
        result.hasGameName = false;
        result.gameName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::gt_msg.EnterInfo> InfoList {
        get { return PrepareBuilder().info_; }
      }
      public int InfoCount {
        get { return result.InfoCount; }
      }
      public global::gt_msg.EnterInfo GetInfo(int index) {
        return result.GetInfo(index);
      }
      public Builder SetInfo(int index, global::gt_msg.EnterInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.info_[index] = value;
        return this;
      }
      public Builder SetInfo(int index, global::gt_msg.EnterInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.info_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddInfo(global::gt_msg.EnterInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.info_.Add(value);
        return this;
      }
      public Builder AddInfo(global::gt_msg.EnterInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.info_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeInfo(scg::IEnumerable<global::gt_msg.EnterInfo> values) {
        PrepareBuilder();
        result.info_.Add(values);
        return this;
      }
      public Builder ClearInfo() {
        PrepareBuilder();
        result.info_.Clear();
        return this;
      }
    }
    static EnterTableInfoResponse() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AlterNicknameRequest : pb::GeneratedMessage<AlterNicknameRequest, AlterNicknameRequest.Builder> {
    private AlterNicknameRequest() { }
    private static readonly AlterNicknameRequest defaultInstance = new AlterNicknameRequest().MakeReadOnly();
    private static readonly string[] _alterNicknameRequestFieldNames = new string[] { "nickname" };
    private static readonly uint[] _alterNicknameRequestFieldTags = new uint[] { 10 };
    public static AlterNicknameRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AlterNicknameRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AlterNicknameRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_AlterNicknameRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AlterNicknameRequest, AlterNicknameRequest.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_AlterNicknameRequest__FieldAccessorTable; }
    }
    
    public const int NicknameFieldNumber = 1;
    private bool hasNickname;
    private string nickname_ = "";
    public bool HasNickname {
      get { return hasNickname; }
    }
    public string Nickname {
      get { return nickname_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasNickname) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _alterNicknameRequestFieldNames;
      if (hasNickname) {
        output.WriteString(1, field_names[0], Nickname);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasNickname) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Nickname);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AlterNicknameRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AlterNicknameRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AlterNicknameRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AlterNicknameRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AlterNicknameRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AlterNicknameRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AlterNicknameRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AlterNicknameRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AlterNicknameRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AlterNicknameRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AlterNicknameRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AlterNicknameRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AlterNicknameRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AlterNicknameRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AlterNicknameRequest result;
      
      private AlterNicknameRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AlterNicknameRequest original = result;
          result = new AlterNicknameRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AlterNicknameRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.AlterNicknameRequest.Descriptor; }
      }
      
      public override AlterNicknameRequest DefaultInstanceForType {
        get { return global::gt_msg.AlterNicknameRequest.DefaultInstance; }
      }
      
      public override AlterNicknameRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AlterNicknameRequest) {
          return MergeFrom((AlterNicknameRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AlterNicknameRequest other) {
        if (other == global::gt_msg.AlterNicknameRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNickname) {
          Nickname = other.Nickname;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_alterNicknameRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _alterNicknameRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasNickname = input.ReadString(ref result.nickname_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNickname {
        get { return result.hasNickname; }
      }
      public string Nickname {
        get { return result.Nickname; }
        set { SetNickname(value); }
      }
      public Builder SetNickname(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNickname = true;
        result.nickname_ = value;
        return this;
      }
      public Builder ClearNickname() {
        PrepareBuilder();
        result.hasNickname = false;
        result.nickname_ = "";
        return this;
      }
    }
    static AlterNicknameRequest() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AlterNicknameResponse : pb::GeneratedMessage<AlterNicknameResponse, AlterNicknameResponse.Builder> {
    private AlterNicknameResponse() { }
    private static readonly AlterNicknameResponse defaultInstance = new AlterNicknameResponse().MakeReadOnly();
    private static readonly string[] _alterNicknameResponseFieldNames = new string[] { "code", "nickname" };
    private static readonly uint[] _alterNicknameResponseFieldTags = new uint[] { 8, 18 };
    public static AlterNicknameResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AlterNicknameResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AlterNicknameResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_AlterNicknameResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AlterNicknameResponse, AlterNicknameResponse.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_AlterNicknameResponse__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Code {
        Ok = 0,
        Failed = 1,
        InvalidChar = 2,
        InvalidLength = 3,
        Duplicate = 4,
        BadWord = 5,
        CountExhaust = 6,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.AlterNicknameResponse.Types.Code code_ = global::gt_msg.AlterNicknameResponse.Types.Code.Ok;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.AlterNicknameResponse.Types.Code Code {
      get { return code_; }
    }
    
    public const int NicknameFieldNumber = 2;
    private bool hasNickname;
    private string nickname_ = "";
    public bool HasNickname {
      get { return hasNickname; }
    }
    public string Nickname {
      get { return nickname_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        if (!hasNickname) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _alterNicknameResponseFieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[0], (int) Code, Code);
      }
      if (hasNickname) {
        output.WriteString(2, field_names[1], Nickname);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasNickname) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Nickname);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AlterNicknameResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AlterNicknameResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AlterNicknameResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AlterNicknameResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AlterNicknameResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AlterNicknameResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AlterNicknameResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AlterNicknameResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AlterNicknameResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AlterNicknameResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AlterNicknameResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AlterNicknameResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AlterNicknameResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AlterNicknameResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AlterNicknameResponse result;
      
      private AlterNicknameResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          AlterNicknameResponse original = result;
          result = new AlterNicknameResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AlterNicknameResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.AlterNicknameResponse.Descriptor; }
      }
      
      public override AlterNicknameResponse DefaultInstanceForType {
        get { return global::gt_msg.AlterNicknameResponse.DefaultInstance; }
      }
      
      public override AlterNicknameResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AlterNicknameResponse) {
          return MergeFrom((AlterNicknameResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AlterNicknameResponse other) {
        if (other == global::gt_msg.AlterNicknameResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasNickname) {
          Nickname = other.Nickname;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_alterNicknameResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _alterNicknameResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasNickname = input.ReadString(ref result.nickname_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.AlterNicknameResponse.Types.Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.AlterNicknameResponse.Types.Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.AlterNicknameResponse.Types.Code.Ok;
        return this;
      }
      
      public bool HasNickname {
        get { return result.hasNickname; }
      }
      public string Nickname {
        get { return result.Nickname; }
        set { SetNickname(value); }
      }
      public Builder SetNickname(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNickname = true;
        result.nickname_ = value;
        return this;
      }
      public Builder ClearNickname() {
        PrepareBuilder();
        result.hasNickname = false;
        result.nickname_ = "";
        return this;
      }
    }
    static AlterNicknameResponse() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EnterGameNotification : pb::GeneratedMessage<EnterGameNotification, EnterGameNotification.Builder> {
    private EnterGameNotification() { }
    private static readonly EnterGameNotification defaultInstance = new EnterGameNotification().MakeReadOnly();
    private static readonly string[] _enterGameNotificationFieldNames = new string[] { "addr", "uid" };
    private static readonly uint[] _enterGameNotificationFieldTags = new uint[] { 18, 10 };
    public static EnterGameNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EnterGameNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EnterGameNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_EnterGameNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EnterGameNotification, EnterGameNotification.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_EnterGameNotification__FieldAccessorTable; }
    }
    
    public const int UidFieldNumber = 1;
    private bool hasUid;
    private string uid_ = "";
    public bool HasUid {
      get { return hasUid; }
    }
    public string Uid {
      get { return uid_; }
    }
    
    public const int AddrFieldNumber = 2;
    private bool hasAddr;
    private string addr_ = "";
    public bool HasAddr {
      get { return hasAddr; }
    }
    public string Addr {
      get { return addr_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUid) return false;
        if (!hasAddr) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _enterGameNotificationFieldNames;
      if (hasUid) {
        output.WriteString(1, field_names[1], Uid);
      }
      if (hasAddr) {
        output.WriteString(2, field_names[0], Addr);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Uid);
      }
      if (hasAddr) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Addr);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EnterGameNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EnterGameNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EnterGameNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EnterGameNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EnterGameNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EnterGameNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EnterGameNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EnterGameNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EnterGameNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EnterGameNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EnterGameNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EnterGameNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EnterGameNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EnterGameNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EnterGameNotification result;
      
      private EnterGameNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          EnterGameNotification original = result;
          result = new EnterGameNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EnterGameNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.EnterGameNotification.Descriptor; }
      }
      
      public override EnterGameNotification DefaultInstanceForType {
        get { return global::gt_msg.EnterGameNotification.DefaultInstance; }
      }
      
      public override EnterGameNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EnterGameNotification) {
          return MergeFrom((EnterGameNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EnterGameNotification other) {
        if (other == global::gt_msg.EnterGameNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUid) {
          Uid = other.Uid;
        }
        if (other.HasAddr) {
          Addr = other.Addr;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_enterGameNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _enterGameNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUid = input.ReadString(ref result.uid_);
              break;
            }
            case 18: {
              result.hasAddr = input.ReadString(ref result.addr_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUid {
        get { return result.hasUid; }
      }
      public string Uid {
        get { return result.Uid; }
        set { SetUid(value); }
      }
      public Builder SetUid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder ClearUid() {
        PrepareBuilder();
        result.hasUid = false;
        result.uid_ = "";
        return this;
      }
      
      public bool HasAddr {
        get { return result.hasAddr; }
      }
      public string Addr {
        get { return result.Addr; }
        set { SetAddr(value); }
      }
      public Builder SetAddr(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAddr = true;
        result.addr_ = value;
        return this;
      }
      public Builder ClearAddr() {
        PrepareBuilder();
        result.hasAddr = false;
        result.addr_ = "";
        return this;
      }
    }
    static EnterGameNotification() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserInfoRequest : pb::GeneratedMessage<UserInfoRequest, UserInfoRequest.Builder> {
    private UserInfoRequest() { }
    private static readonly UserInfoRequest defaultInstance = new UserInfoRequest().MakeReadOnly();
    private static readonly string[] _userInfoRequestFieldNames = new string[] {  };
    private static readonly uint[] _userInfoRequestFieldTags = new uint[] {  };
    public static UserInfoRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserInfoRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserInfoRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserInfoRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserInfoRequest, UserInfoRequest.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserInfoRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userInfoRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserInfoRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserInfoRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserInfoRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserInfoRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserInfoRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserInfoRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserInfoRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserInfoRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserInfoRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserInfoRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserInfoRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserInfoRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserInfoRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserInfoRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserInfoRequest result;
      
      private UserInfoRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UserInfoRequest original = result;
          result = new UserInfoRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserInfoRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.UserInfoRequest.Descriptor; }
      }
      
      public override UserInfoRequest DefaultInstanceForType {
        get { return global::gt_msg.UserInfoRequest.DefaultInstance; }
      }
      
      public override UserInfoRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserInfoRequest) {
          return MergeFrom((UserInfoRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserInfoRequest other) {
        if (other == global::gt_msg.UserInfoRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userInfoRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userInfoRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UserInfoRequest() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserInfoResponse : pb::GeneratedMessage<UserInfoResponse, UserInfoResponse.Builder> {
    private UserInfoResponse() { }
    private static readonly UserInfoResponse defaultInstance = new UserInfoResponse().MakeReadOnly();
    private static readonly string[] _userInfoResponseFieldNames = new string[] { "user" };
    private static readonly uint[] _userInfoResponseFieldTags = new uint[] { 10 };
    public static UserInfoResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserInfoResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserInfoResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserInfoResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserInfoResponse, UserInfoResponse.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserInfoResponse__FieldAccessorTable; }
    }
    
    public const int UserFieldNumber = 1;
    private bool hasUser;
    private global::gt_msg.User user_;
    public bool HasUser {
      get { return hasUser; }
    }
    public global::gt_msg.User User {
      get { return user_ ?? global::gt_msg.User.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUser) return false;
        if (!User.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userInfoResponseFieldNames;
      if (hasUser) {
        output.WriteMessage(1, field_names[0], User);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUser) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, User);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserInfoResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserInfoResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserInfoResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserInfoResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserInfoResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserInfoResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserInfoResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserInfoResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserInfoResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserInfoResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserInfoResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserInfoResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserInfoResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserInfoResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserInfoResponse result;
      
      private UserInfoResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          UserInfoResponse original = result;
          result = new UserInfoResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserInfoResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.UserInfoResponse.Descriptor; }
      }
      
      public override UserInfoResponse DefaultInstanceForType {
        get { return global::gt_msg.UserInfoResponse.DefaultInstance; }
      }
      
      public override UserInfoResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserInfoResponse) {
          return MergeFrom((UserInfoResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserInfoResponse other) {
        if (other == global::gt_msg.UserInfoResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUser) {
          MergeUser(other.User);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userInfoResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userInfoResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::gt_msg.User.Builder subBuilder = global::gt_msg.User.CreateBuilder();
              if (result.hasUser) {
                subBuilder.MergeFrom(User);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              User = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUser {
       get { return result.hasUser; }
      }
      public global::gt_msg.User User {
        get { return result.User; }
        set { SetUser(value); }
      }
      public Builder SetUser(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = value;
        return this;
      }
      public Builder SetUser(global::gt_msg.User.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUser(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUser &&
            result.user_ != global::gt_msg.User.DefaultInstance) {
            result.user_ = global::gt_msg.User.CreateBuilder(result.user_).MergeFrom(value).BuildPartial();
        } else {
          result.user_ = value;
        }
        result.hasUser = true;
        return this;
      }
      public Builder ClearUser() {
        PrepareBuilder();
        result.hasUser = false;
        result.user_ = null;
        return this;
      }
    }
    static UserInfoResponse() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserDoHornRequest : pb::GeneratedMessage<UserDoHornRequest, UserDoHornRequest.Builder> {
    private UserDoHornRequest() { }
    private static readonly UserDoHornRequest defaultInstance = new UserDoHornRequest().MakeReadOnly();
    private static readonly string[] _userDoHornRequestFieldNames = new string[] { "Context", "lv" };
    private static readonly uint[] _userDoHornRequestFieldTags = new uint[] { 10, 16 };
    public static UserDoHornRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserDoHornRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserDoHornRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserDoHornRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserDoHornRequest, UserDoHornRequest.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserDoHornRequest__FieldAccessorTable; }
    }
    
    public const int ContextFieldNumber = 1;
    private bool hasContext;
    private string context_ = "";
    public bool HasContext {
      get { return hasContext; }
    }
    public string Context {
      get { return context_; }
    }
    
    public const int LvFieldNumber = 2;
    private bool hasLv;
    private int lv_;
    public bool HasLv {
      get { return hasLv; }
    }
    public int Lv {
      get { return lv_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasContext) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userDoHornRequestFieldNames;
      if (hasContext) {
        output.WriteString(1, field_names[0], Context);
      }
      if (hasLv) {
        output.WriteInt32(2, field_names[1], Lv);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasContext) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Context);
      }
      if (hasLv) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Lv);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserDoHornRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserDoHornRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserDoHornRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserDoHornRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserDoHornRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserDoHornRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserDoHornRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserDoHornRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserDoHornRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserDoHornRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserDoHornRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserDoHornRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserDoHornRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserDoHornRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserDoHornRequest result;
      
      private UserDoHornRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UserDoHornRequest original = result;
          result = new UserDoHornRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserDoHornRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.UserDoHornRequest.Descriptor; }
      }
      
      public override UserDoHornRequest DefaultInstanceForType {
        get { return global::gt_msg.UserDoHornRequest.DefaultInstance; }
      }
      
      public override UserDoHornRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserDoHornRequest) {
          return MergeFrom((UserDoHornRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserDoHornRequest other) {
        if (other == global::gt_msg.UserDoHornRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasContext) {
          Context = other.Context;
        }
        if (other.HasLv) {
          Lv = other.Lv;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userDoHornRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userDoHornRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasContext = input.ReadString(ref result.context_);
              break;
            }
            case 16: {
              result.hasLv = input.ReadInt32(ref result.lv_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasContext {
        get { return result.hasContext; }
      }
      public string Context {
        get { return result.Context; }
        set { SetContext(value); }
      }
      public Builder SetContext(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContext = true;
        result.context_ = value;
        return this;
      }
      public Builder ClearContext() {
        PrepareBuilder();
        result.hasContext = false;
        result.context_ = "";
        return this;
      }
      
      public bool HasLv {
        get { return result.hasLv; }
      }
      public int Lv {
        get { return result.Lv; }
        set { SetLv(value); }
      }
      public Builder SetLv(int value) {
        PrepareBuilder();
        result.hasLv = true;
        result.lv_ = value;
        return this;
      }
      public Builder ClearLv() {
        PrepareBuilder();
        result.hasLv = false;
        result.lv_ = 0;
        return this;
      }
    }
    static UserDoHornRequest() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserDoHornResponse : pb::GeneratedMessage<UserDoHornResponse, UserDoHornResponse.Builder> {
    private UserDoHornResponse() { }
    private static readonly UserDoHornResponse defaultInstance = new UserDoHornResponse().MakeReadOnly();
    private static readonly string[] _userDoHornResponseFieldNames = new string[] { "code", "itemNo", "itemNum" };
    private static readonly uint[] _userDoHornResponseFieldTags = new uint[] { 8, 16, 24 };
    public static UserDoHornResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserDoHornResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserDoHornResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserDoHornResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserDoHornResponse, UserDoHornResponse.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_UserDoHornResponse__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum UserDoHornRespCode {
        Ok = 0,
        NoMoney = 1,
        Other = 2,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.UserDoHornResponse.Types.UserDoHornRespCode code_ = global::gt_msg.UserDoHornResponse.Types.UserDoHornRespCode.Ok;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.UserDoHornResponse.Types.UserDoHornRespCode Code {
      get { return code_; }
    }
    
    public const int ItemNoFieldNumber = 2;
    private bool hasItemNo;
    private int itemNo_;
    public bool HasItemNo {
      get { return hasItemNo; }
    }
    public int ItemNo {
      get { return itemNo_; }
    }
    
    public const int ItemNumFieldNumber = 3;
    private bool hasItemNum;
    private int itemNum_;
    public bool HasItemNum {
      get { return hasItemNum; }
    }
    public int ItemNum {
      get { return itemNum_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userDoHornResponseFieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[0], (int) Code, Code);
      }
      if (hasItemNo) {
        output.WriteInt32(2, field_names[1], ItemNo);
      }
      if (hasItemNum) {
        output.WriteInt32(3, field_names[2], ItemNum);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasItemNo) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, ItemNo);
      }
      if (hasItemNum) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, ItemNum);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserDoHornResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserDoHornResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserDoHornResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserDoHornResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserDoHornResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserDoHornResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserDoHornResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserDoHornResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserDoHornResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserDoHornResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserDoHornResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserDoHornResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserDoHornResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserDoHornResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserDoHornResponse result;
      
      private UserDoHornResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          UserDoHornResponse original = result;
          result = new UserDoHornResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserDoHornResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.UserDoHornResponse.Descriptor; }
      }
      
      public override UserDoHornResponse DefaultInstanceForType {
        get { return global::gt_msg.UserDoHornResponse.DefaultInstance; }
      }
      
      public override UserDoHornResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserDoHornResponse) {
          return MergeFrom((UserDoHornResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserDoHornResponse other) {
        if (other == global::gt_msg.UserDoHornResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasItemNo) {
          ItemNo = other.ItemNo;
        }
        if (other.HasItemNum) {
          ItemNum = other.ItemNum;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userDoHornResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userDoHornResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasItemNo = input.ReadInt32(ref result.itemNo_);
              break;
            }
            case 24: {
              result.hasItemNum = input.ReadInt32(ref result.itemNum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.UserDoHornResponse.Types.UserDoHornRespCode Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.UserDoHornResponse.Types.UserDoHornRespCode value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.UserDoHornResponse.Types.UserDoHornRespCode.Ok;
        return this;
      }
      
      public bool HasItemNo {
        get { return result.hasItemNo; }
      }
      public int ItemNo {
        get { return result.ItemNo; }
        set { SetItemNo(value); }
      }
      public Builder SetItemNo(int value) {
        PrepareBuilder();
        result.hasItemNo = true;
        result.itemNo_ = value;
        return this;
      }
      public Builder ClearItemNo() {
        PrepareBuilder();
        result.hasItemNo = false;
        result.itemNo_ = 0;
        return this;
      }
      
      public bool HasItemNum {
        get { return result.hasItemNum; }
      }
      public int ItemNum {
        get { return result.ItemNum; }
        set { SetItemNum(value); }
      }
      public Builder SetItemNum(int value) {
        PrepareBuilder();
        result.hasItemNum = true;
        result.itemNum_ = value;
        return this;
      }
      public Builder ClearItemNum() {
        PrepareBuilder();
        result.hasItemNum = false;
        result.itemNum_ = 0;
        return this;
      }
    }
    static UserDoHornResponse() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PushMessageResponse : pb::GeneratedMessage<PushMessageResponse, PushMessageResponse.Builder> {
    private PushMessageResponse() { }
    private static readonly PushMessageResponse defaultInstance = new PushMessageResponse().MakeReadOnly();
    private static readonly string[] _pushMessageResponseFieldNames = new string[] { "Context", "Context_color", "Delay_time", "Msg_sender", "Msg_type", "Title", "Title_color" };
    private static readonly uint[] _pushMessageResponseFieldTags = new uint[] { 34, 26, 48, 58, 40, 18, 10 };
    public static PushMessageResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PushMessageResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PushMessageResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_PushMessageResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PushMessageResponse, PushMessageResponse.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_PushMessageResponse__FieldAccessorTable; }
    }
    
    public const int TitleColorFieldNumber = 1;
    private bool hasTitleColor;
    private string titleColor_ = "";
    public bool HasTitleColor {
      get { return hasTitleColor; }
    }
    public string TitleColor {
      get { return titleColor_; }
    }
    
    public const int TitleFieldNumber = 2;
    private bool hasTitle;
    private string title_ = "";
    public bool HasTitle {
      get { return hasTitle; }
    }
    public string Title {
      get { return title_; }
    }
    
    public const int ContextColorFieldNumber = 3;
    private bool hasContextColor;
    private string contextColor_ = "";
    public bool HasContextColor {
      get { return hasContextColor; }
    }
    public string ContextColor {
      get { return contextColor_; }
    }
    
    public const int ContextFieldNumber = 4;
    private bool hasContext;
    private string context_ = "";
    public bool HasContext {
      get { return hasContext; }
    }
    public string Context {
      get { return context_; }
    }
    
    public const int MsgTypeFieldNumber = 5;
    private bool hasMsgType;
    private int msgType_;
    public bool HasMsgType {
      get { return hasMsgType; }
    }
    public int MsgType {
      get { return msgType_; }
    }
    
    public const int DelayTimeFieldNumber = 6;
    private bool hasDelayTime;
    private int delayTime_;
    public bool HasDelayTime {
      get { return hasDelayTime; }
    }
    public int DelayTime {
      get { return delayTime_; }
    }
    
    public const int MsgSenderFieldNumber = 7;
    private bool hasMsgSender;
    private string msgSender_ = "";
    public bool HasMsgSender {
      get { return hasMsgSender; }
    }
    public string MsgSender {
      get { return msgSender_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTitleColor) return false;
        if (!hasTitle) return false;
        if (!hasContextColor) return false;
        if (!hasContext) return false;
        if (!hasMsgType) return false;
        if (!hasDelayTime) return false;
        if (!hasMsgSender) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _pushMessageResponseFieldNames;
      if (hasTitleColor) {
        output.WriteString(1, field_names[6], TitleColor);
      }
      if (hasTitle) {
        output.WriteString(2, field_names[5], Title);
      }
      if (hasContextColor) {
        output.WriteString(3, field_names[1], ContextColor);
      }
      if (hasContext) {
        output.WriteString(4, field_names[0], Context);
      }
      if (hasMsgType) {
        output.WriteInt32(5, field_names[4], MsgType);
      }
      if (hasDelayTime) {
        output.WriteInt32(6, field_names[2], DelayTime);
      }
      if (hasMsgSender) {
        output.WriteString(7, field_names[3], MsgSender);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTitleColor) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TitleColor);
      }
      if (hasTitle) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Title);
      }
      if (hasContextColor) {
        size += pb::CodedOutputStream.ComputeStringSize(3, ContextColor);
      }
      if (hasContext) {
        size += pb::CodedOutputStream.ComputeStringSize(4, Context);
      }
      if (hasMsgType) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, MsgType);
      }
      if (hasDelayTime) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, DelayTime);
      }
      if (hasMsgSender) {
        size += pb::CodedOutputStream.ComputeStringSize(7, MsgSender);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PushMessageResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PushMessageResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PushMessageResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PushMessageResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PushMessageResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PushMessageResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PushMessageResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PushMessageResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PushMessageResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PushMessageResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PushMessageResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PushMessageResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PushMessageResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PushMessageResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PushMessageResponse result;
      
      private PushMessageResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          PushMessageResponse original = result;
          result = new PushMessageResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PushMessageResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.PushMessageResponse.Descriptor; }
      }
      
      public override PushMessageResponse DefaultInstanceForType {
        get { return global::gt_msg.PushMessageResponse.DefaultInstance; }
      }
      
      public override PushMessageResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PushMessageResponse) {
          return MergeFrom((PushMessageResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PushMessageResponse other) {
        if (other == global::gt_msg.PushMessageResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTitleColor) {
          TitleColor = other.TitleColor;
        }
        if (other.HasTitle) {
          Title = other.Title;
        }
        if (other.HasContextColor) {
          ContextColor = other.ContextColor;
        }
        if (other.HasContext) {
          Context = other.Context;
        }
        if (other.HasMsgType) {
          MsgType = other.MsgType;
        }
        if (other.HasDelayTime) {
          DelayTime = other.DelayTime;
        }
        if (other.HasMsgSender) {
          MsgSender = other.MsgSender;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pushMessageResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pushMessageResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTitleColor = input.ReadString(ref result.titleColor_);
              break;
            }
            case 18: {
              result.hasTitle = input.ReadString(ref result.title_);
              break;
            }
            case 26: {
              result.hasContextColor = input.ReadString(ref result.contextColor_);
              break;
            }
            case 34: {
              result.hasContext = input.ReadString(ref result.context_);
              break;
            }
            case 40: {
              result.hasMsgType = input.ReadInt32(ref result.msgType_);
              break;
            }
            case 48: {
              result.hasDelayTime = input.ReadInt32(ref result.delayTime_);
              break;
            }
            case 58: {
              result.hasMsgSender = input.ReadString(ref result.msgSender_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTitleColor {
        get { return result.hasTitleColor; }
      }
      public string TitleColor {
        get { return result.TitleColor; }
        set { SetTitleColor(value); }
      }
      public Builder SetTitleColor(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTitleColor = true;
        result.titleColor_ = value;
        return this;
      }
      public Builder ClearTitleColor() {
        PrepareBuilder();
        result.hasTitleColor = false;
        result.titleColor_ = "";
        return this;
      }
      
      public bool HasTitle {
        get { return result.hasTitle; }
      }
      public string Title {
        get { return result.Title; }
        set { SetTitle(value); }
      }
      public Builder SetTitle(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTitle = true;
        result.title_ = value;
        return this;
      }
      public Builder ClearTitle() {
        PrepareBuilder();
        result.hasTitle = false;
        result.title_ = "";
        return this;
      }
      
      public bool HasContextColor {
        get { return result.hasContextColor; }
      }
      public string ContextColor {
        get { return result.ContextColor; }
        set { SetContextColor(value); }
      }
      public Builder SetContextColor(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContextColor = true;
        result.contextColor_ = value;
        return this;
      }
      public Builder ClearContextColor() {
        PrepareBuilder();
        result.hasContextColor = false;
        result.contextColor_ = "";
        return this;
      }
      
      public bool HasContext {
        get { return result.hasContext; }
      }
      public string Context {
        get { return result.Context; }
        set { SetContext(value); }
      }
      public Builder SetContext(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContext = true;
        result.context_ = value;
        return this;
      }
      public Builder ClearContext() {
        PrepareBuilder();
        result.hasContext = false;
        result.context_ = "";
        return this;
      }
      
      public bool HasMsgType {
        get { return result.hasMsgType; }
      }
      public int MsgType {
        get { return result.MsgType; }
        set { SetMsgType(value); }
      }
      public Builder SetMsgType(int value) {
        PrepareBuilder();
        result.hasMsgType = true;
        result.msgType_ = value;
        return this;
      }
      public Builder ClearMsgType() {
        PrepareBuilder();
        result.hasMsgType = false;
        result.msgType_ = 0;
        return this;
      }
      
      public bool HasDelayTime {
        get { return result.hasDelayTime; }
      }
      public int DelayTime {
        get { return result.DelayTime; }
        set { SetDelayTime(value); }
      }
      public Builder SetDelayTime(int value) {
        PrepareBuilder();
        result.hasDelayTime = true;
        result.delayTime_ = value;
        return this;
      }
      public Builder ClearDelayTime() {
        PrepareBuilder();
        result.hasDelayTime = false;
        result.delayTime_ = 0;
        return this;
      }
      
      public bool HasMsgSender {
        get { return result.hasMsgSender; }
      }
      public string MsgSender {
        get { return result.MsgSender; }
        set { SetMsgSender(value); }
      }
      public Builder SetMsgSender(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMsgSender = true;
        result.msgSender_ = value;
        return this;
      }
      public Builder ClearMsgSender() {
        PrepareBuilder();
        result.hasMsgSender = false;
        result.msgSender_ = "";
        return this;
      }
    }
    static PushMessageResponse() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LoginPrizeRequest : pb::GeneratedMessage<LoginPrizeRequest, LoginPrizeRequest.Builder> {
    private LoginPrizeRequest() { }
    private static readonly LoginPrizeRequest defaultInstance = new LoginPrizeRequest().MakeReadOnly();
    private static readonly string[] _loginPrizeRequestFieldNames = new string[] {  };
    private static readonly uint[] _loginPrizeRequestFieldTags = new uint[] {  };
    public static LoginPrizeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LoginPrizeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoginPrizeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_LoginPrizeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LoginPrizeRequest, LoginPrizeRequest.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_LoginPrizeRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _loginPrizeRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LoginPrizeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginPrizeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginPrizeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginPrizeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginPrizeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginPrizeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LoginPrizeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LoginPrizeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LoginPrizeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginPrizeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoginPrizeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LoginPrizeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LoginPrizeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoginPrizeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoginPrizeRequest result;
      
      private LoginPrizeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          LoginPrizeRequest original = result;
          result = new LoginPrizeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoginPrizeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.LoginPrizeRequest.Descriptor; }
      }
      
      public override LoginPrizeRequest DefaultInstanceForType {
        get { return global::gt_msg.LoginPrizeRequest.DefaultInstance; }
      }
      
      public override LoginPrizeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LoginPrizeRequest) {
          return MergeFrom((LoginPrizeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoginPrizeRequest other) {
        if (other == global::gt_msg.LoginPrizeRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loginPrizeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loginPrizeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static LoginPrizeRequest() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LoginPrizeResponse : pb::GeneratedMessage<LoginPrizeResponse, LoginPrizeResponse.Builder> {
    private LoginPrizeResponse() { }
    private static readonly LoginPrizeResponse defaultInstance = new LoginPrizeResponse().MakeReadOnly();
    private static readonly string[] _loginPrizeResponseFieldNames = new string[] { "code", "prizeindex", "prizenum", "prizerate", "prizetype" };
    private static readonly uint[] _loginPrizeResponseFieldTags = new uint[] { 8, 16, 32, 40, 24 };
    public static LoginPrizeResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LoginPrizeResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoginPrizeResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_LoginPrizeResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LoginPrizeResponse, LoginPrizeResponse.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_LoginPrizeResponse__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum LoginPrizeRespCode {
        OK = 0,
        NoTimes = 1,
        Other = 2,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.LoginPrizeResponse.Types.LoginPrizeRespCode code_ = global::gt_msg.LoginPrizeResponse.Types.LoginPrizeRespCode.OK;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.LoginPrizeResponse.Types.LoginPrizeRespCode Code {
      get { return code_; }
    }
    
    public const int PrizeindexFieldNumber = 2;
    private bool hasPrizeindex;
    private int prizeindex_;
    public bool HasPrizeindex {
      get { return hasPrizeindex; }
    }
    public int Prizeindex {
      get { return prizeindex_; }
    }
    
    public const int PrizetypeFieldNumber = 3;
    private bool hasPrizetype;
    private int prizetype_;
    public bool HasPrizetype {
      get { return hasPrizetype; }
    }
    public int Prizetype {
      get { return prizetype_; }
    }
    
    public const int PrizenumFieldNumber = 4;
    private bool hasPrizenum;
    private int prizenum_;
    public bool HasPrizenum {
      get { return hasPrizenum; }
    }
    public int Prizenum {
      get { return prizenum_; }
    }
    
    public const int PrizerateFieldNumber = 5;
    private bool hasPrizerate;
    private int prizerate_;
    public bool HasPrizerate {
      get { return hasPrizerate; }
    }
    public int Prizerate {
      get { return prizerate_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _loginPrizeResponseFieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[0], (int) Code, Code);
      }
      if (hasPrizeindex) {
        output.WriteInt32(2, field_names[1], Prizeindex);
      }
      if (hasPrizetype) {
        output.WriteInt32(3, field_names[4], Prizetype);
      }
      if (hasPrizenum) {
        output.WriteInt32(4, field_names[2], Prizenum);
      }
      if (hasPrizerate) {
        output.WriteInt32(5, field_names[3], Prizerate);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasPrizeindex) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Prizeindex);
      }
      if (hasPrizetype) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Prizetype);
      }
      if (hasPrizenum) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, Prizenum);
      }
      if (hasPrizerate) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, Prizerate);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LoginPrizeResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginPrizeResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginPrizeResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginPrizeResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginPrizeResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginPrizeResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LoginPrizeResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LoginPrizeResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LoginPrizeResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginPrizeResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoginPrizeResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LoginPrizeResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LoginPrizeResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoginPrizeResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoginPrizeResponse result;
      
      private LoginPrizeResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          LoginPrizeResponse original = result;
          result = new LoginPrizeResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoginPrizeResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.LoginPrizeResponse.Descriptor; }
      }
      
      public override LoginPrizeResponse DefaultInstanceForType {
        get { return global::gt_msg.LoginPrizeResponse.DefaultInstance; }
      }
      
      public override LoginPrizeResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LoginPrizeResponse) {
          return MergeFrom((LoginPrizeResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoginPrizeResponse other) {
        if (other == global::gt_msg.LoginPrizeResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasPrizeindex) {
          Prizeindex = other.Prizeindex;
        }
        if (other.HasPrizetype) {
          Prizetype = other.Prizetype;
        }
        if (other.HasPrizenum) {
          Prizenum = other.Prizenum;
        }
        if (other.HasPrizerate) {
          Prizerate = other.Prizerate;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loginPrizeResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loginPrizeResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasPrizeindex = input.ReadInt32(ref result.prizeindex_);
              break;
            }
            case 24: {
              result.hasPrizetype = input.ReadInt32(ref result.prizetype_);
              break;
            }
            case 32: {
              result.hasPrizenum = input.ReadInt32(ref result.prizenum_);
              break;
            }
            case 40: {
              result.hasPrizerate = input.ReadInt32(ref result.prizerate_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.LoginPrizeResponse.Types.LoginPrizeRespCode Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.LoginPrizeResponse.Types.LoginPrizeRespCode value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.LoginPrizeResponse.Types.LoginPrizeRespCode.OK;
        return this;
      }
      
      public bool HasPrizeindex {
        get { return result.hasPrizeindex; }
      }
      public int Prizeindex {
        get { return result.Prizeindex; }
        set { SetPrizeindex(value); }
      }
      public Builder SetPrizeindex(int value) {
        PrepareBuilder();
        result.hasPrizeindex = true;
        result.prizeindex_ = value;
        return this;
      }
      public Builder ClearPrizeindex() {
        PrepareBuilder();
        result.hasPrizeindex = false;
        result.prizeindex_ = 0;
        return this;
      }
      
      public bool HasPrizetype {
        get { return result.hasPrizetype; }
      }
      public int Prizetype {
        get { return result.Prizetype; }
        set { SetPrizetype(value); }
      }
      public Builder SetPrizetype(int value) {
        PrepareBuilder();
        result.hasPrizetype = true;
        result.prizetype_ = value;
        return this;
      }
      public Builder ClearPrizetype() {
        PrepareBuilder();
        result.hasPrizetype = false;
        result.prizetype_ = 0;
        return this;
      }
      
      public bool HasPrizenum {
        get { return result.hasPrizenum; }
      }
      public int Prizenum {
        get { return result.Prizenum; }
        set { SetPrizenum(value); }
      }
      public Builder SetPrizenum(int value) {
        PrepareBuilder();
        result.hasPrizenum = true;
        result.prizenum_ = value;
        return this;
      }
      public Builder ClearPrizenum() {
        PrepareBuilder();
        result.hasPrizenum = false;
        result.prizenum_ = 0;
        return this;
      }
      
      public bool HasPrizerate {
        get { return result.hasPrizerate; }
      }
      public int Prizerate {
        get { return result.Prizerate; }
        set { SetPrizerate(value); }
      }
      public Builder SetPrizerate(int value) {
        PrepareBuilder();
        result.hasPrizerate = true;
        result.prizerate_ = value;
        return this;
      }
      public Builder ClearPrizerate() {
        PrepareBuilder();
        result.hasPrizerate = false;
        result.prizerate_ = 0;
        return this;
      }
    }
    static LoginPrizeResponse() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RegUserRequest : pb::GeneratedMessage<RegUserRequest, RegUserRequest.Builder> {
    private RegUserRequest() { }
    private static readonly RegUserRequest defaultInstance = new RegUserRequest().MakeReadOnly();
    private static readonly string[] _regUserRequestFieldNames = new string[] { "cardid", "channel", "devid", "faceurl", "loginname", "mobile", "nickname", "platform", "puid", "pw", "sex" };
    private static readonly uint[] _regUserRequestFieldTags = new uint[] { 34, 48, 90, 74, 10, 42, 18, 56, 82, 26, 64 };
    public static RegUserRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RegUserRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RegUserRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_RegUserRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RegUserRequest, RegUserRequest.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_RegUserRequest__FieldAccessorTable; }
    }
    
    public const int LoginnameFieldNumber = 1;
    private bool hasLoginname;
    private string loginname_ = "";
    public bool HasLoginname {
      get { return hasLoginname; }
    }
    public string Loginname {
      get { return loginname_; }
    }
    
    public const int NicknameFieldNumber = 2;
    private bool hasNickname;
    private string nickname_ = "";
    public bool HasNickname {
      get { return hasNickname; }
    }
    public string Nickname {
      get { return nickname_; }
    }
    
    public const int PwFieldNumber = 3;
    private bool hasPw;
    private string pw_ = "";
    public bool HasPw {
      get { return hasPw; }
    }
    public string Pw {
      get { return pw_; }
    }
    
    public const int CardidFieldNumber = 4;
    private bool hasCardid;
    private string cardid_ = "";
    public bool HasCardid {
      get { return hasCardid; }
    }
    public string Cardid {
      get { return cardid_; }
    }
    
    public const int MobileFieldNumber = 5;
    private bool hasMobile;
    private string mobile_ = "";
    public bool HasMobile {
      get { return hasMobile; }
    }
    public string Mobile {
      get { return mobile_; }
    }
    
    public const int ChannelFieldNumber = 6;
    private bool hasChannel;
    private int channel_;
    public bool HasChannel {
      get { return hasChannel; }
    }
    public int Channel {
      get { return channel_; }
    }
    
    public const int PlatformFieldNumber = 7;
    private bool hasPlatform;
    private int platform_;
    public bool HasPlatform {
      get { return hasPlatform; }
    }
    public int Platform {
      get { return platform_; }
    }
    
    public const int SexFieldNumber = 8;
    private bool hasSex;
    private int sex_;
    public bool HasSex {
      get { return hasSex; }
    }
    public int Sex {
      get { return sex_; }
    }
    
    public const int FaceurlFieldNumber = 9;
    private bool hasFaceurl;
    private string faceurl_ = "";
    public bool HasFaceurl {
      get { return hasFaceurl; }
    }
    public string Faceurl {
      get { return faceurl_; }
    }
    
    public const int PuidFieldNumber = 10;
    private bool hasPuid;
    private string puid_ = "";
    public bool HasPuid {
      get { return hasPuid; }
    }
    public string Puid {
      get { return puid_; }
    }
    
    public const int DevidFieldNumber = 11;
    private bool hasDevid;
    private string devid_ = "";
    public bool HasDevid {
      get { return hasDevid; }
    }
    public string Devid {
      get { return devid_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasLoginname) return false;
        if (!hasNickname) return false;
        if (!hasPw) return false;
        if (!hasCardid) return false;
        if (!hasMobile) return false;
        if (!hasChannel) return false;
        if (!hasPlatform) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _regUserRequestFieldNames;
      if (hasLoginname) {
        output.WriteString(1, field_names[4], Loginname);
      }
      if (hasNickname) {
        output.WriteString(2, field_names[6], Nickname);
      }
      if (hasPw) {
        output.WriteString(3, field_names[9], Pw);
      }
      if (hasCardid) {
        output.WriteString(4, field_names[0], Cardid);
      }
      if (hasMobile) {
        output.WriteString(5, field_names[5], Mobile);
      }
      if (hasChannel) {
        output.WriteInt32(6, field_names[1], Channel);
      }
      if (hasPlatform) {
        output.WriteInt32(7, field_names[7], Platform);
      }
      if (hasSex) {
        output.WriteInt32(8, field_names[10], Sex);
      }
      if (hasFaceurl) {
        output.WriteString(9, field_names[3], Faceurl);
      }
      if (hasPuid) {
        output.WriteString(10, field_names[8], Puid);
      }
      if (hasDevid) {
        output.WriteString(11, field_names[2], Devid);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLoginname) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Loginname);
      }
      if (hasNickname) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Nickname);
      }
      if (hasPw) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Pw);
      }
      if (hasCardid) {
        size += pb::CodedOutputStream.ComputeStringSize(4, Cardid);
      }
      if (hasMobile) {
        size += pb::CodedOutputStream.ComputeStringSize(5, Mobile);
      }
      if (hasChannel) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, Channel);
      }
      if (hasPlatform) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, Platform);
      }
      if (hasSex) {
        size += pb::CodedOutputStream.ComputeInt32Size(8, Sex);
      }
      if (hasFaceurl) {
        size += pb::CodedOutputStream.ComputeStringSize(9, Faceurl);
      }
      if (hasPuid) {
        size += pb::CodedOutputStream.ComputeStringSize(10, Puid);
      }
      if (hasDevid) {
        size += pb::CodedOutputStream.ComputeStringSize(11, Devid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RegUserRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RegUserRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RegUserRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RegUserRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RegUserRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RegUserRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RegUserRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RegUserRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RegUserRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RegUserRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RegUserRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RegUserRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RegUserRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RegUserRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RegUserRequest result;
      
      private RegUserRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          RegUserRequest original = result;
          result = new RegUserRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RegUserRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.RegUserRequest.Descriptor; }
      }
      
      public override RegUserRequest DefaultInstanceForType {
        get { return global::gt_msg.RegUserRequest.DefaultInstance; }
      }
      
      public override RegUserRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RegUserRequest) {
          return MergeFrom((RegUserRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RegUserRequest other) {
        if (other == global::gt_msg.RegUserRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLoginname) {
          Loginname = other.Loginname;
        }
        if (other.HasNickname) {
          Nickname = other.Nickname;
        }
        if (other.HasPw) {
          Pw = other.Pw;
        }
        if (other.HasCardid) {
          Cardid = other.Cardid;
        }
        if (other.HasMobile) {
          Mobile = other.Mobile;
        }
        if (other.HasChannel) {
          Channel = other.Channel;
        }
        if (other.HasPlatform) {
          Platform = other.Platform;
        }
        if (other.HasSex) {
          Sex = other.Sex;
        }
        if (other.HasFaceurl) {
          Faceurl = other.Faceurl;
        }
        if (other.HasPuid) {
          Puid = other.Puid;
        }
        if (other.HasDevid) {
          Devid = other.Devid;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_regUserRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _regUserRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasLoginname = input.ReadString(ref result.loginname_);
              break;
            }
            case 18: {
              result.hasNickname = input.ReadString(ref result.nickname_);
              break;
            }
            case 26: {
              result.hasPw = input.ReadString(ref result.pw_);
              break;
            }
            case 34: {
              result.hasCardid = input.ReadString(ref result.cardid_);
              break;
            }
            case 42: {
              result.hasMobile = input.ReadString(ref result.mobile_);
              break;
            }
            case 48: {
              result.hasChannel = input.ReadInt32(ref result.channel_);
              break;
            }
            case 56: {
              result.hasPlatform = input.ReadInt32(ref result.platform_);
              break;
            }
            case 64: {
              result.hasSex = input.ReadInt32(ref result.sex_);
              break;
            }
            case 74: {
              result.hasFaceurl = input.ReadString(ref result.faceurl_);
              break;
            }
            case 82: {
              result.hasPuid = input.ReadString(ref result.puid_);
              break;
            }
            case 90: {
              result.hasDevid = input.ReadString(ref result.devid_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLoginname {
        get { return result.hasLoginname; }
      }
      public string Loginname {
        get { return result.Loginname; }
        set { SetLoginname(value); }
      }
      public Builder SetLoginname(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLoginname = true;
        result.loginname_ = value;
        return this;
      }
      public Builder ClearLoginname() {
        PrepareBuilder();
        result.hasLoginname = false;
        result.loginname_ = "";
        return this;
      }
      
      public bool HasNickname {
        get { return result.hasNickname; }
      }
      public string Nickname {
        get { return result.Nickname; }
        set { SetNickname(value); }
      }
      public Builder SetNickname(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNickname = true;
        result.nickname_ = value;
        return this;
      }
      public Builder ClearNickname() {
        PrepareBuilder();
        result.hasNickname = false;
        result.nickname_ = "";
        return this;
      }
      
      public bool HasPw {
        get { return result.hasPw; }
      }
      public string Pw {
        get { return result.Pw; }
        set { SetPw(value); }
      }
      public Builder SetPw(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPw = true;
        result.pw_ = value;
        return this;
      }
      public Builder ClearPw() {
        PrepareBuilder();
        result.hasPw = false;
        result.pw_ = "";
        return this;
      }
      
      public bool HasCardid {
        get { return result.hasCardid; }
      }
      public string Cardid {
        get { return result.Cardid; }
        set { SetCardid(value); }
      }
      public Builder SetCardid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCardid = true;
        result.cardid_ = value;
        return this;
      }
      public Builder ClearCardid() {
        PrepareBuilder();
        result.hasCardid = false;
        result.cardid_ = "";
        return this;
      }
      
      public bool HasMobile {
        get { return result.hasMobile; }
      }
      public string Mobile {
        get { return result.Mobile; }
        set { SetMobile(value); }
      }
      public Builder SetMobile(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMobile = true;
        result.mobile_ = value;
        return this;
      }
      public Builder ClearMobile() {
        PrepareBuilder();
        result.hasMobile = false;
        result.mobile_ = "";
        return this;
      }
      
      public bool HasChannel {
        get { return result.hasChannel; }
      }
      public int Channel {
        get { return result.Channel; }
        set { SetChannel(value); }
      }
      public Builder SetChannel(int value) {
        PrepareBuilder();
        result.hasChannel = true;
        result.channel_ = value;
        return this;
      }
      public Builder ClearChannel() {
        PrepareBuilder();
        result.hasChannel = false;
        result.channel_ = 0;
        return this;
      }
      
      public bool HasPlatform {
        get { return result.hasPlatform; }
      }
      public int Platform {
        get { return result.Platform; }
        set { SetPlatform(value); }
      }
      public Builder SetPlatform(int value) {
        PrepareBuilder();
        result.hasPlatform = true;
        result.platform_ = value;
        return this;
      }
      public Builder ClearPlatform() {
        PrepareBuilder();
        result.hasPlatform = false;
        result.platform_ = 0;
        return this;
      }
      
      public bool HasSex {
        get { return result.hasSex; }
      }
      public int Sex {
        get { return result.Sex; }
        set { SetSex(value); }
      }
      public Builder SetSex(int value) {
        PrepareBuilder();
        result.hasSex = true;
        result.sex_ = value;
        return this;
      }
      public Builder ClearSex() {
        PrepareBuilder();
        result.hasSex = false;
        result.sex_ = 0;
        return this;
      }
      
      public bool HasFaceurl {
        get { return result.hasFaceurl; }
      }
      public string Faceurl {
        get { return result.Faceurl; }
        set { SetFaceurl(value); }
      }
      public Builder SetFaceurl(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFaceurl = true;
        result.faceurl_ = value;
        return this;
      }
      public Builder ClearFaceurl() {
        PrepareBuilder();
        result.hasFaceurl = false;
        result.faceurl_ = "";
        return this;
      }
      
      public bool HasPuid {
        get { return result.hasPuid; }
      }
      public string Puid {
        get { return result.Puid; }
        set { SetPuid(value); }
      }
      public Builder SetPuid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPuid = true;
        result.puid_ = value;
        return this;
      }
      public Builder ClearPuid() {
        PrepareBuilder();
        result.hasPuid = false;
        result.puid_ = "";
        return this;
      }
      
      public bool HasDevid {
        get { return result.hasDevid; }
      }
      public string Devid {
        get { return result.Devid; }
        set { SetDevid(value); }
      }
      public Builder SetDevid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDevid = true;
        result.devid_ = value;
        return this;
      }
      public Builder ClearDevid() {
        PrepareBuilder();
        result.hasDevid = false;
        result.devid_ = "";
        return this;
      }
    }
    static RegUserRequest() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RegUserResponse : pb::GeneratedMessage<RegUserResponse, RegUserResponse.Builder> {
    private RegUserResponse() { }
    private static readonly RegUserResponse defaultInstance = new RegUserResponse().MakeReadOnly();
    private static readonly string[] _regUserResponseFieldNames = new string[] { "code" };
    private static readonly uint[] _regUserResponseFieldTags = new uint[] { 8 };
    public static RegUserResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RegUserResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RegUserResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_RegUserResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RegUserResponse, RegUserResponse.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtBase.internal__static_gt_msg_RegUserResponse__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum RegUserRespCode {
        OK = 0,
        Loginnameexist = 1,
        nicknameexist = 2,
        pwlenerr = 3,
        cardiderr = 4,
        mobileerr = 5,
        cardidtimeserr = 6,
        mobiletimeserr = 7,
        channelerr = 8,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.RegUserResponse.Types.RegUserRespCode code_ = global::gt_msg.RegUserResponse.Types.RegUserRespCode.OK;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.RegUserResponse.Types.RegUserRespCode Code {
      get { return code_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _regUserResponseFieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[0], (int) Code, Code);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RegUserResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RegUserResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RegUserResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RegUserResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RegUserResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RegUserResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RegUserResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RegUserResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RegUserResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RegUserResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RegUserResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RegUserResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RegUserResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RegUserResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RegUserResponse result;
      
      private RegUserResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          RegUserResponse original = result;
          result = new RegUserResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RegUserResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.RegUserResponse.Descriptor; }
      }
      
      public override RegUserResponse DefaultInstanceForType {
        get { return global::gt_msg.RegUserResponse.DefaultInstance; }
      }
      
      public override RegUserResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RegUserResponse) {
          return MergeFrom((RegUserResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RegUserResponse other) {
        if (other == global::gt_msg.RegUserResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_regUserResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _regUserResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.RegUserResponse.Types.RegUserRespCode Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.RegUserResponse.Types.RegUserRespCode value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.RegUserResponse.Types.RegUserRespCode.OK;
        return this;
      }
    }
    static RegUserResponse() {
      object.ReferenceEquals(global::gt_msg.GtBase.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
