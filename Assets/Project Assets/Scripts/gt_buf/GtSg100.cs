// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace gt_msg {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class GtSg100 {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_gt_msg_JoinFreeRequestsg100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.JoinFreeRequestsg100, global::gt_msg.JoinFreeRequestsg100.Builder> internal__static_gt_msg_JoinFreeRequestsg100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_JoinFreeResponsesg100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.JoinFreeResponsesg100, global::gt_msg.JoinFreeResponsesg100.Builder> internal__static_gt_msg_JoinFreeResponsesg100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_ActionRequestsg100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.ActionRequestsg100, global::gt_msg.ActionRequestsg100.Builder> internal__static_gt_msg_ActionRequestsg100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_ActionResponsesg100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.ActionResponsesg100, global::gt_msg.ActionResponsesg100.Builder> internal__static_gt_msg_ActionResponsesg100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_UserPaysg100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserPaysg100, global::gt_msg.UserPaysg100.Builder> internal__static_gt_msg_UserPaysg100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_TableUserStatssg100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableUserStatssg100, global::gt_msg.TableUserStatssg100.Builder> internal__static_gt_msg_TableUserStatssg100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_TableStatssg100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableStatssg100, global::gt_msg.TableStatssg100.Builder> internal__static_gt_msg_TableStatssg100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_TableUserResultsg100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableUserResultsg100, global::gt_msg.TableUserResultsg100.Builder> internal__static_gt_msg_TableUserResultsg100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_RoundEndedEventsg100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.RoundEndedEventsg100, global::gt_msg.RoundEndedEventsg100.Builder> internal__static_gt_msg_RoundEndedEventsg100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_ForceExitTableRequestsg100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.ForceExitTableRequestsg100, global::gt_msg.ForceExitTableRequestsg100.Builder> internal__static_gt_msg_ForceExitTableRequestsg100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_ForceExitTableResponsesg100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.ForceExitTableResponsesg100, global::gt_msg.ForceExitTableResponsesg100.Builder> internal__static_gt_msg_ForceExitTableResponsesg100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_GameLifeRequestsg100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameLifeRequestsg100, global::gt_msg.GameLifeRequestsg100.Builder> internal__static_gt_msg_GameLifeRequestsg100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_GameLifeResponsesg100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameLifeResponsesg100, global::gt_msg.GameLifeResponsesg100.Builder> internal__static_gt_msg_GameLifeResponsesg100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_GameRankListRequestsg100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameRankListRequestsg100, global::gt_msg.GameRankListRequestsg100.Builder> internal__static_gt_msg_GameRankListRequestsg100__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_gt_msg_GameRankListResponsesg100__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameRankListResponsesg100, global::gt_msg.GameRankListResponsesg100.Builder> internal__static_gt_msg_GameRankListResponsesg100__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static GtSg100() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5ndF9zZzEwMC5wcm90bxIGZ3RfbXNnGg1ndF9iYXNlLnByb3RvIl8KFEpv", 
            "aW5GcmVlUmVxdWVzdHNnMTAwEg8KB3VzZXJfaWQYASACKAkSGgoEcnVsZRgC", 
            "IAIoDjIMLmd0X21zZy5SdWxlEhoKBHJhbmsYAyABKA4yDC5ndF9tc2cuUmFu", 
            "ayKOBAoVSm9pbkZyZWVSZXNwb25zZXNnMTAwEkUKBGNvZGUYASACKA4yNy5n", 
            "dF9tc2cuSm9pbkZyZWVSZXNwb25zZXNnMTAwLkpvaW5GcmVlUmVzcG9uc2Vz", 
            "ZzEwMENvZGUSGAoQcmVjb25uZWN0ZWRfdXNlchgCIAEoCBIRCgltaW5fY29p", 
            "bnMYAyABKAMSGAoQaGFzX2Jhc2ljX2xpdmluZxgEIAEoCBIeChZiYXNpY19s", 
            "aXZpbmdfYWxsX3RpbWVzGAUgASgFEh4KFmJhc2ljX2xpdmluZ191c2VfdGlt", 
            "ZXMYBiABKAUSGgoSYmFzaWNfbGl2aW5nX2NvaW5zGAcgASgFEiIKDHJhbmtf", 
            "cmVxdWVzdBgIIAEoDjIMLmd0X21zZy5SYW5rEhoKBHJhbmsYCSABKA4yDC5n", 
            "dF9tc2cuUmFuaxIrCgpnYW1lX3N0YXRzGAogASgLMhcuZ3RfbXNnLlRhYmxl", 
            "U3RhdHNzZzEwMBIUCgxQYXlNb25leUxpc3QYCyADKAUSEAoISXRlbVR5cGUY", 
            "DCACKAUidgoZSm9pbkZyZWVSZXNwb25zZXNnMTAwQ29kZRIGCgJPaxAAEhgK", 
            "FE1pbmltdW1Db2luc1JlcXVpcmVkEAESGgoWTWluaW11bURpYW1vbmRSZXF1", 
            "aXJlZBACEhAKDE5vVGFibGVBdmFpbBADEgkKBU90aGVyEAQirwEKEkFjdGlv", 
            "blJlcXVlc3RzZzEwMBI/CgRjb2RlGAEgAigOMjEuZ3RfbXNnLkFjdGlvblJl", 
            "cXVlc3RzZzEwMC5BY3Rpb25SZXF1ZXN0c2cxMDBDb2RlEhEKCVBheU51bU1p", 
            "bhgCIAEoAxIRCglQYXlOdW1NYXgYAyABKAMiMgoWQWN0aW9uUmVxdWVzdHNn", 
            "MTAwQ29kZRILCgdCdXlTZWF0EAESCwoHQXV0b0J1eRACIvsBChNBY3Rpb25S", 
            "ZXNwb25zZXNnMTAwEkEKBGNvZGUYASACKA4yMy5ndF9tc2cuQWN0aW9uUmVz", 
            "cG9uc2VzZzEwMC5BY3Rpb25SZXNwb25zZXNnMTAwQ29kZSKgAQoXQWN0aW9u", 
            "UmVzcG9uc2VzZzEwMENvZGUSBgoCT0sQABIRCg1QbGF5ZXJOb0V4aXN0EAES", 
            "DgoKUGxheWVyRnVsbBACEhEKDUFjdGlvblR5cGVFcnIQAxIQCgxDYW5ub3RB", 
            "Y3Rpb24QBBIRCg1Nb25leU5vRW5vdWdoEAUSFwoTT2xkQnV5Tm9Fbm91Z2hN", 
            "b25leRAGEgkKBU90aGVyEAciOQoMVXNlclBheXNnMTAwEgwKBHNlYXQYASAC", 
            "KAMSDAoEcmF0ZRgCIAEoBRINCgV2YWx1ZRgDIAIoAyKUAQoTVGFibGVVc2Vy", 
            "U3RhdHNzZzEwMBIfCgl1c2VyX2luZm8YASACKAsyDC5ndF9tc2cuVXNlchIp", 
            "CgtQb2ludE9uU2VhdBgCIAMoCzIULmd0X21zZy5Vc2VyUGF5c2cxMDASMQoN", 
            "TmV3QWN0aW9uTGlzdBgDIAMoCzIaLmd0X21zZy5BY3Rpb25SZXF1ZXN0c2cx", 
            "MDAikgIKD1RhYmxlU3RhdHNzZzEwMBIPCgdUYWJsZUlEGAEgAigFEg0KBVN0", 
            "YWdlGAIgAigFEhoKBFJhbmsYAyACKA4yDC5ndF9tc2cuUmFuaxIaCgRSdWxl", 
            "GAQgAigOMgwuZ3RfbXNnLlJ1bGUSGQoRTmV4dEFjdGlvblRpbWVPdXQYBSAC", 
            "KAUSDAoEU3RlcBgGIAIoBRItCghVc2VyU2VsZhgHIAEoCzIbLmd0X21zZy5U", 
            "YWJsZVVzZXJTdGF0c3NnMTAwEhEKCUhpc3RvcnlMVxgIIAMoBRIpCgtQb2lu", 
            "dE9uU2VhdBgJIAMoCzIULmd0X21zZy5Vc2VyUGF5c2cxMDASEQoJQmVnaW5J", 
            "dGVtGAogAygFIqwBChRUYWJsZVVzZXJSZXN1bHRzZzEwMBIfCgl1c2VyX2lu", 
            "Zm8YASACKAsyDC5ndF9tc2cuVXNlchIpCgtQb2ludE9uU2VhdBgCIAMoCzIU", 
            "Lmd0X21zZy5Vc2VyUGF5c2cxMDASJgoITFdPblNlYXQYAyADKAsyFC5ndF9t", 
            "c2cuVXNlclBheXNnMTAwEgsKA1RBWBgEIAEoAxITCgtDb250aW51ZVdpbhgF", 
            "IAEoBSLSAQoUUm91bmRFbmRlZEV2ZW50c2cxMDASDwoHVGFibGVJRBgBIAIo", 
            "BRIcChROZXh0U3RhcnRUaW1lb3V0U2VjcxgCIAIoBRIuCghVc2VyU2VsZhgD", 
            "IAEoCzIcLmd0X21zZy5UYWJsZVVzZXJSZXN1bHRzZzEwMBISCgpNYXhXaW5O", 
            "aWNrGAQgAigJEhEKCU1heFdpbk51bRgFIAIoBRIQCghPcGVuU2VhdBgGIAMo", 
            "BRIPCgdXaW5TZWF0GAcgAygFEhEKCUJlZ2luSXRlbRgIIAMoBSIcChpGb3Jj", 
            "ZUV4aXRUYWJsZVJlcXVlc3RzZzEwMCLUAQobRm9yY2VFeGl0VGFibGVSZXNw", 
            "b25zZXNnMTAwEjYKBGNvZGUYASACKA4yKC5ndF9tc2cuRm9yY2VFeGl0VGFi", 
            "bGVSZXNwb25zZXNnMTAwLkNvZGUifQoEQ29kZRIKCgZOb3JtYWwQABIKCgZH", 
            "aXZlVXAQARIRCg1Ob0Vub3VnaE1vbmV5EAISDwoLQ2hhbmdlVGFibGUQAxIY", 
            "ChRDYW5Ob3RFeGl0Rm9yUGxheWluZxAEEh8KG0Nhbk5vdENoYW5nZVRhYmxl", 
            "Rm9yUGxheWluZxAFIiMKFEdhbWVMaWZlUmVxdWVzdHNnMTAwEgsKA3VpZBgB", 
            "IAIoCSLcAwoVR2FtZUxpZmVSZXNwb25zZXNnMTAwEjAKBGNvZGUYASACKA4y", 
            "Ii5ndF9tc2cuR2FtZUxpZmVSZXNwb25zZXNnMTAwLkNvZGUSHwoJdXNlcl9p", 
            "bmZvGAIgAigLMgwuZ3RfbXNnLlVzZXISEAoId2luVGltZXMYAyABKAUSEQoJ", 
            "bG9zdFRpbWVzGAQgASgFEhMKC2NvbnRpbnVlV2luGAUgASgFEhYKDmxldmVs", 
            "MVdpbkNoaXBzGAYgASgDEhoKEmxldmVsMVdpbkNoaXBzUmFuaxgHIAEoBRIW", 
            "Cg5sZXZlbDJXaW5DaGlwcxgIIAEoAxIaChJsZXZlbDJXaW5DaGlwc1JhbmsY", 
            "CSABKAUSFgoObGV2ZWwzV2luQ2hpcHMYCiABKAMSGgoSbGV2ZWwzV2luQ2hp", 
            "cHNSYW5rGAsgASgFEhYKDmxldmVsNFdpbkNoaXBzGAwgASgDEhoKEmxldmVs", 
            "NFdpbkNoaXBzUmFuaxgNIAEoBRIWCg5sZXZlbDVXaW5DaGlwcxgOIAEoAxIa", 
            "ChJsZXZlbDVXaW5DaGlwc1JhbmsYDyABKAUSFgoOZ2FtZUFsbFVzZXJOdW0Y", 
            "ECABKAUiGgoEQ29kZRIGCgJPaxAAEgoKBkZhaWxlZBABIhoKGEdhbWVSYW5r", 
            "TGlzdFJlcXVlc3RzZzEwMCK3AQoZR2FtZVJhbmtMaXN0UmVzcG9uc2VzZzEw", 
            "MBI0CgRjb2RlGAEgAigOMiYuZ3RfbXNnLkdhbWVSYW5rTGlzdFJlc3BvbnNl", 
            "c2cxMDAuQ29kZRILCgN1aWQYAiACKAkSFQoNZGF5X3dpbl9jaGlwcxgDIAMo", 
            "CRIRCglhbGxfdGltZXMYBCADKAkSEQoJYWxsX2NoaXBzGAUgAygJIhoKBENv", 
          "ZGUSBgoCT2sQABIKCgZGYWlsZWQQAQ=="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_gt_msg_JoinFreeRequestsg100__Descriptor = Descriptor.MessageTypes[0];
        internal__static_gt_msg_JoinFreeRequestsg100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.JoinFreeRequestsg100, global::gt_msg.JoinFreeRequestsg100.Builder>(internal__static_gt_msg_JoinFreeRequestsg100__Descriptor,
                new string[] { "UserId", "Rule", "Rank", });
        internal__static_gt_msg_JoinFreeResponsesg100__Descriptor = Descriptor.MessageTypes[1];
        internal__static_gt_msg_JoinFreeResponsesg100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.JoinFreeResponsesg100, global::gt_msg.JoinFreeResponsesg100.Builder>(internal__static_gt_msg_JoinFreeResponsesg100__Descriptor,
                new string[] { "Code", "ReconnectedUser", "MinCoins", "HasBasicLiving", "BasicLivingAllTimes", "BasicLivingUseTimes", "BasicLivingCoins", "RankRequest", "Rank", "GameStats", "PayMoneyList", "ItemType", });
        internal__static_gt_msg_ActionRequestsg100__Descriptor = Descriptor.MessageTypes[2];
        internal__static_gt_msg_ActionRequestsg100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.ActionRequestsg100, global::gt_msg.ActionRequestsg100.Builder>(internal__static_gt_msg_ActionRequestsg100__Descriptor,
                new string[] { "Code", "PayNumMin", "PayNumMax", });
        internal__static_gt_msg_ActionResponsesg100__Descriptor = Descriptor.MessageTypes[3];
        internal__static_gt_msg_ActionResponsesg100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.ActionResponsesg100, global::gt_msg.ActionResponsesg100.Builder>(internal__static_gt_msg_ActionResponsesg100__Descriptor,
                new string[] { "Code", });
        internal__static_gt_msg_UserPaysg100__Descriptor = Descriptor.MessageTypes[4];
        internal__static_gt_msg_UserPaysg100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.UserPaysg100, global::gt_msg.UserPaysg100.Builder>(internal__static_gt_msg_UserPaysg100__Descriptor,
                new string[] { "Seat", "Rate", "Value", });
        internal__static_gt_msg_TableUserStatssg100__Descriptor = Descriptor.MessageTypes[5];
        internal__static_gt_msg_TableUserStatssg100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableUserStatssg100, global::gt_msg.TableUserStatssg100.Builder>(internal__static_gt_msg_TableUserStatssg100__Descriptor,
                new string[] { "UserInfo", "PointOnSeat", "NewActionList", });
        internal__static_gt_msg_TableStatssg100__Descriptor = Descriptor.MessageTypes[6];
        internal__static_gt_msg_TableStatssg100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableStatssg100, global::gt_msg.TableStatssg100.Builder>(internal__static_gt_msg_TableStatssg100__Descriptor,
                new string[] { "TableID", "Stage", "Rank", "Rule", "NextActionTimeOut", "Step", "UserSelf", "HistoryLW", "PointOnSeat", "BeginItem", });
        internal__static_gt_msg_TableUserResultsg100__Descriptor = Descriptor.MessageTypes[7];
        internal__static_gt_msg_TableUserResultsg100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.TableUserResultsg100, global::gt_msg.TableUserResultsg100.Builder>(internal__static_gt_msg_TableUserResultsg100__Descriptor,
                new string[] { "UserInfo", "PointOnSeat", "LWOnSeat", "TAX", "ContinueWin", });
        internal__static_gt_msg_RoundEndedEventsg100__Descriptor = Descriptor.MessageTypes[8];
        internal__static_gt_msg_RoundEndedEventsg100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.RoundEndedEventsg100, global::gt_msg.RoundEndedEventsg100.Builder>(internal__static_gt_msg_RoundEndedEventsg100__Descriptor,
                new string[] { "TableID", "NextStartTimeoutSecs", "UserSelf", "MaxWinNick", "MaxWinNum", "OpenSeat", "WinSeat", "BeginItem", });
        internal__static_gt_msg_ForceExitTableRequestsg100__Descriptor = Descriptor.MessageTypes[9];
        internal__static_gt_msg_ForceExitTableRequestsg100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.ForceExitTableRequestsg100, global::gt_msg.ForceExitTableRequestsg100.Builder>(internal__static_gt_msg_ForceExitTableRequestsg100__Descriptor,
                new string[] { });
        internal__static_gt_msg_ForceExitTableResponsesg100__Descriptor = Descriptor.MessageTypes[10];
        internal__static_gt_msg_ForceExitTableResponsesg100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.ForceExitTableResponsesg100, global::gt_msg.ForceExitTableResponsesg100.Builder>(internal__static_gt_msg_ForceExitTableResponsesg100__Descriptor,
                new string[] { "Code", });
        internal__static_gt_msg_GameLifeRequestsg100__Descriptor = Descriptor.MessageTypes[11];
        internal__static_gt_msg_GameLifeRequestsg100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameLifeRequestsg100, global::gt_msg.GameLifeRequestsg100.Builder>(internal__static_gt_msg_GameLifeRequestsg100__Descriptor,
                new string[] { "Uid", });
        internal__static_gt_msg_GameLifeResponsesg100__Descriptor = Descriptor.MessageTypes[12];
        internal__static_gt_msg_GameLifeResponsesg100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameLifeResponsesg100, global::gt_msg.GameLifeResponsesg100.Builder>(internal__static_gt_msg_GameLifeResponsesg100__Descriptor,
                new string[] { "Code", "UserInfo", "WinTimes", "LostTimes", "ContinueWin", "Level1WinChips", "Level1WinChipsRank", "Level2WinChips", "Level2WinChipsRank", "Level3WinChips", "Level3WinChipsRank", "Level4WinChips", "Level4WinChipsRank", "Level5WinChips", "Level5WinChipsRank", "GameAllUserNum", });
        internal__static_gt_msg_GameRankListRequestsg100__Descriptor = Descriptor.MessageTypes[13];
        internal__static_gt_msg_GameRankListRequestsg100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameRankListRequestsg100, global::gt_msg.GameRankListRequestsg100.Builder>(internal__static_gt_msg_GameRankListRequestsg100__Descriptor,
                new string[] { });
        internal__static_gt_msg_GameRankListResponsesg100__Descriptor = Descriptor.MessageTypes[14];
        internal__static_gt_msg_GameRankListResponsesg100__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::gt_msg.GameRankListResponsesg100, global::gt_msg.GameRankListResponsesg100.Builder>(internal__static_gt_msg_GameRankListResponsesg100__Descriptor,
                new string[] { "Code", "Uid", "DayWinChips", "AllTimes", "AllChips", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::gt_msg.GtBase.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class JoinFreeRequestsg100 : pb::GeneratedMessage<JoinFreeRequestsg100, JoinFreeRequestsg100.Builder> {
    private JoinFreeRequestsg100() { }
    private static readonly JoinFreeRequestsg100 defaultInstance = new JoinFreeRequestsg100().MakeReadOnly();
    private static readonly string[] _joinFreeRequestsg100FieldNames = new string[] { "rank", "rule", "user_id" };
    private static readonly uint[] _joinFreeRequestsg100FieldTags = new uint[] { 24, 16, 10 };
    public static JoinFreeRequestsg100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinFreeRequestsg100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinFreeRequestsg100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_JoinFreeRequestsg100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinFreeRequestsg100, JoinFreeRequestsg100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_JoinFreeRequestsg100__FieldAccessorTable; }
    }
    
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private string userId_ = "";
    public bool HasUserId {
      get { return hasUserId; }
    }
    public string UserId {
      get { return userId_; }
    }
    
    public const int RuleFieldNumber = 2;
    private bool hasRule;
    private global::gt_msg.Rule rule_ = global::gt_msg.Rule.RuleNormal;
    public bool HasRule {
      get { return hasRule; }
    }
    public global::gt_msg.Rule Rule {
      get { return rule_; }
    }
    
    public const int RankFieldNumber = 3;
    private bool hasRank;
    private global::gt_msg.Rank rank_ = global::gt_msg.Rank.LV0;
    public bool HasRank {
      get { return hasRank; }
    }
    public global::gt_msg.Rank Rank {
      get { return rank_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserId) return false;
        if (!hasRule) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _joinFreeRequestsg100FieldNames;
      if (hasUserId) {
        output.WriteString(1, field_names[2], UserId);
      }
      if (hasRule) {
        output.WriteEnum(2, field_names[1], (int) Rule, Rule);
      }
      if (hasRank) {
        output.WriteEnum(3, field_names[0], (int) Rank, Rank);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, UserId);
      }
      if (hasRule) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Rule);
      }
      if (hasRank) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Rank);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static JoinFreeRequestsg100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinFreeRequestsg100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeRequestsg100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinFreeRequestsg100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeRequestsg100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinFreeRequestsg100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeRequestsg100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinFreeRequestsg100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinFreeRequestsg100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinFreeRequestsg100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinFreeRequestsg100 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinFreeRequestsg100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinFreeRequestsg100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinFreeRequestsg100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinFreeRequestsg100 result;
      
      private JoinFreeRequestsg100 PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinFreeRequestsg100 original = result;
          result = new JoinFreeRequestsg100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinFreeRequestsg100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.JoinFreeRequestsg100.Descriptor; }
      }
      
      public override JoinFreeRequestsg100 DefaultInstanceForType {
        get { return global::gt_msg.JoinFreeRequestsg100.DefaultInstance; }
      }
      
      public override JoinFreeRequestsg100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is JoinFreeRequestsg100) {
          return MergeFrom((JoinFreeRequestsg100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(JoinFreeRequestsg100 other) {
        if (other == global::gt_msg.JoinFreeRequestsg100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasRule) {
          Rule = other.Rule;
        }
        if (other.HasRank) {
          Rank = other.Rank;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_joinFreeRequestsg100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _joinFreeRequestsg100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserId = input.ReadString(ref result.userId_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.rule_, out unknown)) {
                result.hasRule = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.rank_, out unknown)) {
                result.hasRank = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public string UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = "";
        return this;
      }
      
      public bool HasRule {
       get { return result.hasRule; }
      }
      public global::gt_msg.Rule Rule {
        get { return result.Rule; }
        set { SetRule(value); }
      }
      public Builder SetRule(global::gt_msg.Rule value) {
        PrepareBuilder();
        result.hasRule = true;
        result.rule_ = value;
        return this;
      }
      public Builder ClearRule() {
        PrepareBuilder();
        result.hasRule = false;
        result.rule_ = global::gt_msg.Rule.RuleNormal;
        return this;
      }
      
      public bool HasRank {
       get { return result.hasRank; }
      }
      public global::gt_msg.Rank Rank {
        get { return result.Rank; }
        set { SetRank(value); }
      }
      public Builder SetRank(global::gt_msg.Rank value) {
        PrepareBuilder();
        result.hasRank = true;
        result.rank_ = value;
        return this;
      }
      public Builder ClearRank() {
        PrepareBuilder();
        result.hasRank = false;
        result.rank_ = global::gt_msg.Rank.LV0;
        return this;
      }
    }
    static JoinFreeRequestsg100() {
      object.ReferenceEquals(global::gt_msg.GtSg100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class JoinFreeResponsesg100 : pb::GeneratedMessage<JoinFreeResponsesg100, JoinFreeResponsesg100.Builder> {
    private JoinFreeResponsesg100() { }
    private static readonly JoinFreeResponsesg100 defaultInstance = new JoinFreeResponsesg100().MakeReadOnly();
    private static readonly string[] _joinFreeResponsesg100FieldNames = new string[] { "ItemType", "PayMoneyList", "basic_living_all_times", "basic_living_coins", "basic_living_use_times", "code", "game_stats", "has_basic_living", "min_coins", "rank", "rank_request", "reconnected_user" };
    private static readonly uint[] _joinFreeResponsesg100FieldTags = new uint[] { 96, 88, 40, 56, 48, 8, 82, 32, 24, 72, 64, 16 };
    public static JoinFreeResponsesg100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinFreeResponsesg100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinFreeResponsesg100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_JoinFreeResponsesg100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinFreeResponsesg100, JoinFreeResponsesg100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_JoinFreeResponsesg100__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum JoinFreeResponsesg100Code {
        Ok = 0,
        MinimumCoinsRequired = 1,
        MinimumDiamondRequired = 2,
        NoTableAvail = 3,
        Other = 4,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.JoinFreeResponsesg100.Types.JoinFreeResponsesg100Code code_ = global::gt_msg.JoinFreeResponsesg100.Types.JoinFreeResponsesg100Code.Ok;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.JoinFreeResponsesg100.Types.JoinFreeResponsesg100Code Code {
      get { return code_; }
    }
    
    public const int ReconnectedUserFieldNumber = 2;
    private bool hasReconnectedUser;
    private bool reconnectedUser_;
    public bool HasReconnectedUser {
      get { return hasReconnectedUser; }
    }
    public bool ReconnectedUser {
      get { return reconnectedUser_; }
    }
    
    public const int MinCoinsFieldNumber = 3;
    private bool hasMinCoins;
    private long minCoins_;
    public bool HasMinCoins {
      get { return hasMinCoins; }
    }
    public long MinCoins {
      get { return minCoins_; }
    }
    
    public const int HasBasicLivingFieldNumber = 4;
    private bool hasHasBasicLiving;
    private bool hasBasicLiving_;
    public bool HasHasBasicLiving {
      get { return hasHasBasicLiving; }
    }
    public bool HasBasicLiving {
      get { return hasBasicLiving_; }
    }
    
    public const int BasicLivingAllTimesFieldNumber = 5;
    private bool hasBasicLivingAllTimes;
    private int basicLivingAllTimes_;
    public bool HasBasicLivingAllTimes {
      get { return hasBasicLivingAllTimes; }
    }
    public int BasicLivingAllTimes {
      get { return basicLivingAllTimes_; }
    }
    
    public const int BasicLivingUseTimesFieldNumber = 6;
    private bool hasBasicLivingUseTimes;
    private int basicLivingUseTimes_;
    public bool HasBasicLivingUseTimes {
      get { return hasBasicLivingUseTimes; }
    }
    public int BasicLivingUseTimes {
      get { return basicLivingUseTimes_; }
    }
    
    public const int BasicLivingCoinsFieldNumber = 7;
    private bool hasBasicLivingCoins;
    private int basicLivingCoins_;
    public bool HasBasicLivingCoins {
      get { return hasBasicLivingCoins; }
    }
    public int BasicLivingCoins {
      get { return basicLivingCoins_; }
    }
    
    public const int RankRequestFieldNumber = 8;
    private bool hasRankRequest;
    private global::gt_msg.Rank rankRequest_ = global::gt_msg.Rank.LV0;
    public bool HasRankRequest {
      get { return hasRankRequest; }
    }
    public global::gt_msg.Rank RankRequest {
      get { return rankRequest_; }
    }
    
    public const int RankFieldNumber = 9;
    private bool hasRank;
    private global::gt_msg.Rank rank_ = global::gt_msg.Rank.LV0;
    public bool HasRank {
      get { return hasRank; }
    }
    public global::gt_msg.Rank Rank {
      get { return rank_; }
    }
    
    public const int GameStatsFieldNumber = 10;
    private bool hasGameStats;
    private global::gt_msg.TableStatssg100 gameStats_;
    public bool HasGameStats {
      get { return hasGameStats; }
    }
    public global::gt_msg.TableStatssg100 GameStats {
      get { return gameStats_ ?? global::gt_msg.TableStatssg100.DefaultInstance; }
    }
    
    public const int PayMoneyListFieldNumber = 11;
    private pbc::PopsicleList<int> payMoneyList_ = new pbc::PopsicleList<int>();
    public scg::IList<int> PayMoneyListList {
      get { return pbc::Lists.AsReadOnly(payMoneyList_); }
    }
    public int PayMoneyListCount {
      get { return payMoneyList_.Count; }
    }
    public int GetPayMoneyList(int index) {
      return payMoneyList_[index];
    }
    
    public const int ItemTypeFieldNumber = 12;
    private bool hasItemType;
    private int itemType_;
    public bool HasItemType {
      get { return hasItemType; }
    }
    public int ItemType {
      get { return itemType_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        if (!hasItemType) return false;
        if (HasGameStats) {
          if (!GameStats.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _joinFreeResponsesg100FieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[5], (int) Code, Code);
      }
      if (hasReconnectedUser) {
        output.WriteBool(2, field_names[11], ReconnectedUser);
      }
      if (hasMinCoins) {
        output.WriteInt64(3, field_names[8], MinCoins);
      }
      if (hasHasBasicLiving) {
        output.WriteBool(4, field_names[7], HasBasicLiving);
      }
      if (hasBasicLivingAllTimes) {
        output.WriteInt32(5, field_names[2], BasicLivingAllTimes);
      }
      if (hasBasicLivingUseTimes) {
        output.WriteInt32(6, field_names[4], BasicLivingUseTimes);
      }
      if (hasBasicLivingCoins) {
        output.WriteInt32(7, field_names[3], BasicLivingCoins);
      }
      if (hasRankRequest) {
        output.WriteEnum(8, field_names[10], (int) RankRequest, RankRequest);
      }
      if (hasRank) {
        output.WriteEnum(9, field_names[9], (int) Rank, Rank);
      }
      if (hasGameStats) {
        output.WriteMessage(10, field_names[6], GameStats);
      }
      if (payMoneyList_.Count > 0) {
        output.WriteInt32Array(11, field_names[1], payMoneyList_);
      }
      if (hasItemType) {
        output.WriteInt32(12, field_names[0], ItemType);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasReconnectedUser) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, ReconnectedUser);
      }
      if (hasMinCoins) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, MinCoins);
      }
      if (hasHasBasicLiving) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, HasBasicLiving);
      }
      if (hasBasicLivingAllTimes) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, BasicLivingAllTimes);
      }
      if (hasBasicLivingUseTimes) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, BasicLivingUseTimes);
      }
      if (hasBasicLivingCoins) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, BasicLivingCoins);
      }
      if (hasRankRequest) {
        size += pb::CodedOutputStream.ComputeEnumSize(8, (int) RankRequest);
      }
      if (hasRank) {
        size += pb::CodedOutputStream.ComputeEnumSize(9, (int) Rank);
      }
      if (hasGameStats) {
        size += pb::CodedOutputStream.ComputeMessageSize(10, GameStats);
      }
      {
        int dataSize = 0;
        foreach (int element in PayMoneyListList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * payMoneyList_.Count;
      }
      if (hasItemType) {
        size += pb::CodedOutputStream.ComputeInt32Size(12, ItemType);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static JoinFreeResponsesg100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinFreeResponsesg100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeResponsesg100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinFreeResponsesg100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeResponsesg100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinFreeResponsesg100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinFreeResponsesg100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinFreeResponsesg100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinFreeResponsesg100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinFreeResponsesg100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinFreeResponsesg100 MakeReadOnly() {
      payMoneyList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinFreeResponsesg100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinFreeResponsesg100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinFreeResponsesg100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinFreeResponsesg100 result;
      
      private JoinFreeResponsesg100 PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinFreeResponsesg100 original = result;
          result = new JoinFreeResponsesg100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinFreeResponsesg100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.JoinFreeResponsesg100.Descriptor; }
      }
      
      public override JoinFreeResponsesg100 DefaultInstanceForType {
        get { return global::gt_msg.JoinFreeResponsesg100.DefaultInstance; }
      }
      
      public override JoinFreeResponsesg100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is JoinFreeResponsesg100) {
          return MergeFrom((JoinFreeResponsesg100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(JoinFreeResponsesg100 other) {
        if (other == global::gt_msg.JoinFreeResponsesg100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasReconnectedUser) {
          ReconnectedUser = other.ReconnectedUser;
        }
        if (other.HasMinCoins) {
          MinCoins = other.MinCoins;
        }
        if (other.HasHasBasicLiving) {
          HasBasicLiving = other.HasBasicLiving;
        }
        if (other.HasBasicLivingAllTimes) {
          BasicLivingAllTimes = other.BasicLivingAllTimes;
        }
        if (other.HasBasicLivingUseTimes) {
          BasicLivingUseTimes = other.BasicLivingUseTimes;
        }
        if (other.HasBasicLivingCoins) {
          BasicLivingCoins = other.BasicLivingCoins;
        }
        if (other.HasRankRequest) {
          RankRequest = other.RankRequest;
        }
        if (other.HasRank) {
          Rank = other.Rank;
        }
        if (other.HasGameStats) {
          MergeGameStats(other.GameStats);
        }
        if (other.payMoneyList_.Count != 0) {
          result.payMoneyList_.Add(other.payMoneyList_);
        }
        if (other.HasItemType) {
          ItemType = other.ItemType;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_joinFreeResponsesg100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _joinFreeResponsesg100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasReconnectedUser = input.ReadBool(ref result.reconnectedUser_);
              break;
            }
            case 24: {
              result.hasMinCoins = input.ReadInt64(ref result.minCoins_);
              break;
            }
            case 32: {
              result.hasHasBasicLiving = input.ReadBool(ref result.hasBasicLiving_);
              break;
            }
            case 40: {
              result.hasBasicLivingAllTimes = input.ReadInt32(ref result.basicLivingAllTimes_);
              break;
            }
            case 48: {
              result.hasBasicLivingUseTimes = input.ReadInt32(ref result.basicLivingUseTimes_);
              break;
            }
            case 56: {
              result.hasBasicLivingCoins = input.ReadInt32(ref result.basicLivingCoins_);
              break;
            }
            case 64: {
              object unknown;
              if(input.ReadEnum(ref result.rankRequest_, out unknown)) {
                result.hasRankRequest = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(8, (ulong)(int)unknown);
              }
              break;
            }
            case 72: {
              object unknown;
              if(input.ReadEnum(ref result.rank_, out unknown)) {
                result.hasRank = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(9, (ulong)(int)unknown);
              }
              break;
            }
            case 82: {
              global::gt_msg.TableStatssg100.Builder subBuilder = global::gt_msg.TableStatssg100.CreateBuilder();
              if (result.hasGameStats) {
                subBuilder.MergeFrom(GameStats);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameStats = subBuilder.BuildPartial();
              break;
            }
            case 90:
            case 88: {
              input.ReadInt32Array(tag, field_name, result.payMoneyList_);
              break;
            }
            case 96: {
              result.hasItemType = input.ReadInt32(ref result.itemType_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.JoinFreeResponsesg100.Types.JoinFreeResponsesg100Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.JoinFreeResponsesg100.Types.JoinFreeResponsesg100Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.JoinFreeResponsesg100.Types.JoinFreeResponsesg100Code.Ok;
        return this;
      }
      
      public bool HasReconnectedUser {
        get { return result.hasReconnectedUser; }
      }
      public bool ReconnectedUser {
        get { return result.ReconnectedUser; }
        set { SetReconnectedUser(value); }
      }
      public Builder SetReconnectedUser(bool value) {
        PrepareBuilder();
        result.hasReconnectedUser = true;
        result.reconnectedUser_ = value;
        return this;
      }
      public Builder ClearReconnectedUser() {
        PrepareBuilder();
        result.hasReconnectedUser = false;
        result.reconnectedUser_ = false;
        return this;
      }
      
      public bool HasMinCoins {
        get { return result.hasMinCoins; }
      }
      public long MinCoins {
        get { return result.MinCoins; }
        set { SetMinCoins(value); }
      }
      public Builder SetMinCoins(long value) {
        PrepareBuilder();
        result.hasMinCoins = true;
        result.minCoins_ = value;
        return this;
      }
      public Builder ClearMinCoins() {
        PrepareBuilder();
        result.hasMinCoins = false;
        result.minCoins_ = 0L;
        return this;
      }
      
      public bool HasHasBasicLiving {
        get { return result.hasHasBasicLiving; }
      }
      public bool HasBasicLiving {
        get { return result.HasBasicLiving; }
        set { SetHasBasicLiving(value); }
      }
      public Builder SetHasBasicLiving(bool value) {
        PrepareBuilder();
        result.hasHasBasicLiving = true;
        result.hasBasicLiving_ = value;
        return this;
      }
      public Builder ClearHasBasicLiving() {
        PrepareBuilder();
        result.hasHasBasicLiving = false;
        result.hasBasicLiving_ = false;
        return this;
      }
      
      public bool HasBasicLivingAllTimes {
        get { return result.hasBasicLivingAllTimes; }
      }
      public int BasicLivingAllTimes {
        get { return result.BasicLivingAllTimes; }
        set { SetBasicLivingAllTimes(value); }
      }
      public Builder SetBasicLivingAllTimes(int value) {
        PrepareBuilder();
        result.hasBasicLivingAllTimes = true;
        result.basicLivingAllTimes_ = value;
        return this;
      }
      public Builder ClearBasicLivingAllTimes() {
        PrepareBuilder();
        result.hasBasicLivingAllTimes = false;
        result.basicLivingAllTimes_ = 0;
        return this;
      }
      
      public bool HasBasicLivingUseTimes {
        get { return result.hasBasicLivingUseTimes; }
      }
      public int BasicLivingUseTimes {
        get { return result.BasicLivingUseTimes; }
        set { SetBasicLivingUseTimes(value); }
      }
      public Builder SetBasicLivingUseTimes(int value) {
        PrepareBuilder();
        result.hasBasicLivingUseTimes = true;
        result.basicLivingUseTimes_ = value;
        return this;
      }
      public Builder ClearBasicLivingUseTimes() {
        PrepareBuilder();
        result.hasBasicLivingUseTimes = false;
        result.basicLivingUseTimes_ = 0;
        return this;
      }
      
      public bool HasBasicLivingCoins {
        get { return result.hasBasicLivingCoins; }
      }
      public int BasicLivingCoins {
        get { return result.BasicLivingCoins; }
        set { SetBasicLivingCoins(value); }
      }
      public Builder SetBasicLivingCoins(int value) {
        PrepareBuilder();
        result.hasBasicLivingCoins = true;
        result.basicLivingCoins_ = value;
        return this;
      }
      public Builder ClearBasicLivingCoins() {
        PrepareBuilder();
        result.hasBasicLivingCoins = false;
        result.basicLivingCoins_ = 0;
        return this;
      }
      
      public bool HasRankRequest {
       get { return result.hasRankRequest; }
      }
      public global::gt_msg.Rank RankRequest {
        get { return result.RankRequest; }
        set { SetRankRequest(value); }
      }
      public Builder SetRankRequest(global::gt_msg.Rank value) {
        PrepareBuilder();
        result.hasRankRequest = true;
        result.rankRequest_ = value;
        return this;
      }
      public Builder ClearRankRequest() {
        PrepareBuilder();
        result.hasRankRequest = false;
        result.rankRequest_ = global::gt_msg.Rank.LV0;
        return this;
      }
      
      public bool HasRank {
       get { return result.hasRank; }
      }
      public global::gt_msg.Rank Rank {
        get { return result.Rank; }
        set { SetRank(value); }
      }
      public Builder SetRank(global::gt_msg.Rank value) {
        PrepareBuilder();
        result.hasRank = true;
        result.rank_ = value;
        return this;
      }
      public Builder ClearRank() {
        PrepareBuilder();
        result.hasRank = false;
        result.rank_ = global::gt_msg.Rank.LV0;
        return this;
      }
      
      public bool HasGameStats {
       get { return result.hasGameStats; }
      }
      public global::gt_msg.TableStatssg100 GameStats {
        get { return result.GameStats; }
        set { SetGameStats(value); }
      }
      public Builder SetGameStats(global::gt_msg.TableStatssg100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameStats = true;
        result.gameStats_ = value;
        return this;
      }
      public Builder SetGameStats(global::gt_msg.TableStatssg100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameStats = true;
        result.gameStats_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameStats(global::gt_msg.TableStatssg100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameStats &&
            result.gameStats_ != global::gt_msg.TableStatssg100.DefaultInstance) {
            result.gameStats_ = global::gt_msg.TableStatssg100.CreateBuilder(result.gameStats_).MergeFrom(value).BuildPartial();
        } else {
          result.gameStats_ = value;
        }
        result.hasGameStats = true;
        return this;
      }
      public Builder ClearGameStats() {
        PrepareBuilder();
        result.hasGameStats = false;
        result.gameStats_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<int> PayMoneyListList {
        get { return PrepareBuilder().payMoneyList_; }
      }
      public int PayMoneyListCount {
        get { return result.PayMoneyListCount; }
      }
      public int GetPayMoneyList(int index) {
        return result.GetPayMoneyList(index);
      }
      public Builder SetPayMoneyList(int index, int value) {
        PrepareBuilder();
        result.payMoneyList_[index] = value;
        return this;
      }
      public Builder AddPayMoneyList(int value) {
        PrepareBuilder();
        result.payMoneyList_.Add(value);
        return this;
      }
      public Builder AddRangePayMoneyList(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.payMoneyList_.Add(values);
        return this;
      }
      public Builder ClearPayMoneyList() {
        PrepareBuilder();
        result.payMoneyList_.Clear();
        return this;
      }
      
      public bool HasItemType {
        get { return result.hasItemType; }
      }
      public int ItemType {
        get { return result.ItemType; }
        set { SetItemType(value); }
      }
      public Builder SetItemType(int value) {
        PrepareBuilder();
        result.hasItemType = true;
        result.itemType_ = value;
        return this;
      }
      public Builder ClearItemType() {
        PrepareBuilder();
        result.hasItemType = false;
        result.itemType_ = 0;
        return this;
      }
    }
    static JoinFreeResponsesg100() {
      object.ReferenceEquals(global::gt_msg.GtSg100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ActionRequestsg100 : pb::GeneratedMessage<ActionRequestsg100, ActionRequestsg100.Builder> {
    private ActionRequestsg100() { }
    private static readonly ActionRequestsg100 defaultInstance = new ActionRequestsg100().MakeReadOnly();
    private static readonly string[] _actionRequestsg100FieldNames = new string[] { "PayNumMax", "PayNumMin", "code" };
    private static readonly uint[] _actionRequestsg100FieldTags = new uint[] { 24, 16, 8 };
    public static ActionRequestsg100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ActionRequestsg100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ActionRequestsg100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_ActionRequestsg100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ActionRequestsg100, ActionRequestsg100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_ActionRequestsg100__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum ActionRequestsg100Code {
        BuySeat = 1,
        AutoBuy = 2,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.ActionRequestsg100.Types.ActionRequestsg100Code code_ = global::gt_msg.ActionRequestsg100.Types.ActionRequestsg100Code.BuySeat;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.ActionRequestsg100.Types.ActionRequestsg100Code Code {
      get { return code_; }
    }
    
    public const int PayNumMinFieldNumber = 2;
    private bool hasPayNumMin;
    private long payNumMin_;
    public bool HasPayNumMin {
      get { return hasPayNumMin; }
    }
    public long PayNumMin {
      get { return payNumMin_; }
    }
    
    public const int PayNumMaxFieldNumber = 3;
    private bool hasPayNumMax;
    private long payNumMax_;
    public bool HasPayNumMax {
      get { return hasPayNumMax; }
    }
    public long PayNumMax {
      get { return payNumMax_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _actionRequestsg100FieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[2], (int) Code, Code);
      }
      if (hasPayNumMin) {
        output.WriteInt64(2, field_names[1], PayNumMin);
      }
      if (hasPayNumMax) {
        output.WriteInt64(3, field_names[0], PayNumMax);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasPayNumMin) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, PayNumMin);
      }
      if (hasPayNumMax) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, PayNumMax);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ActionRequestsg100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActionRequestsg100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActionRequestsg100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActionRequestsg100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActionRequestsg100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActionRequestsg100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ActionRequestsg100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ActionRequestsg100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ActionRequestsg100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActionRequestsg100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ActionRequestsg100 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ActionRequestsg100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ActionRequestsg100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ActionRequestsg100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ActionRequestsg100 result;
      
      private ActionRequestsg100 PrepareBuilder() {
        if (resultIsReadOnly) {
          ActionRequestsg100 original = result;
          result = new ActionRequestsg100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ActionRequestsg100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.ActionRequestsg100.Descriptor; }
      }
      
      public override ActionRequestsg100 DefaultInstanceForType {
        get { return global::gt_msg.ActionRequestsg100.DefaultInstance; }
      }
      
      public override ActionRequestsg100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ActionRequestsg100) {
          return MergeFrom((ActionRequestsg100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ActionRequestsg100 other) {
        if (other == global::gt_msg.ActionRequestsg100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasPayNumMin) {
          PayNumMin = other.PayNumMin;
        }
        if (other.HasPayNumMax) {
          PayNumMax = other.PayNumMax;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_actionRequestsg100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _actionRequestsg100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasPayNumMin = input.ReadInt64(ref result.payNumMin_);
              break;
            }
            case 24: {
              result.hasPayNumMax = input.ReadInt64(ref result.payNumMax_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.ActionRequestsg100.Types.ActionRequestsg100Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.ActionRequestsg100.Types.ActionRequestsg100Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.ActionRequestsg100.Types.ActionRequestsg100Code.BuySeat;
        return this;
      }
      
      public bool HasPayNumMin {
        get { return result.hasPayNumMin; }
      }
      public long PayNumMin {
        get { return result.PayNumMin; }
        set { SetPayNumMin(value); }
      }
      public Builder SetPayNumMin(long value) {
        PrepareBuilder();
        result.hasPayNumMin = true;
        result.payNumMin_ = value;
        return this;
      }
      public Builder ClearPayNumMin() {
        PrepareBuilder();
        result.hasPayNumMin = false;
        result.payNumMin_ = 0L;
        return this;
      }
      
      public bool HasPayNumMax {
        get { return result.hasPayNumMax; }
      }
      public long PayNumMax {
        get { return result.PayNumMax; }
        set { SetPayNumMax(value); }
      }
      public Builder SetPayNumMax(long value) {
        PrepareBuilder();
        result.hasPayNumMax = true;
        result.payNumMax_ = value;
        return this;
      }
      public Builder ClearPayNumMax() {
        PrepareBuilder();
        result.hasPayNumMax = false;
        result.payNumMax_ = 0L;
        return this;
      }
    }
    static ActionRequestsg100() {
      object.ReferenceEquals(global::gt_msg.GtSg100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ActionResponsesg100 : pb::GeneratedMessage<ActionResponsesg100, ActionResponsesg100.Builder> {
    private ActionResponsesg100() { }
    private static readonly ActionResponsesg100 defaultInstance = new ActionResponsesg100().MakeReadOnly();
    private static readonly string[] _actionResponsesg100FieldNames = new string[] { "code" };
    private static readonly uint[] _actionResponsesg100FieldTags = new uint[] { 8 };
    public static ActionResponsesg100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ActionResponsesg100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ActionResponsesg100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_ActionResponsesg100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ActionResponsesg100, ActionResponsesg100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_ActionResponsesg100__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum ActionResponsesg100Code {
        OK = 0,
        PlayerNoExist = 1,
        PlayerFull = 2,
        ActionTypeErr = 3,
        CannotAction = 4,
        MoneyNoEnough = 5,
        OldBuyNoEnoughMoney = 6,
        Other = 7,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.ActionResponsesg100.Types.ActionResponsesg100Code code_ = global::gt_msg.ActionResponsesg100.Types.ActionResponsesg100Code.OK;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.ActionResponsesg100.Types.ActionResponsesg100Code Code {
      get { return code_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _actionResponsesg100FieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[0], (int) Code, Code);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ActionResponsesg100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActionResponsesg100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActionResponsesg100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActionResponsesg100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActionResponsesg100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActionResponsesg100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ActionResponsesg100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ActionResponsesg100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ActionResponsesg100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActionResponsesg100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ActionResponsesg100 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ActionResponsesg100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ActionResponsesg100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ActionResponsesg100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ActionResponsesg100 result;
      
      private ActionResponsesg100 PrepareBuilder() {
        if (resultIsReadOnly) {
          ActionResponsesg100 original = result;
          result = new ActionResponsesg100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ActionResponsesg100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.ActionResponsesg100.Descriptor; }
      }
      
      public override ActionResponsesg100 DefaultInstanceForType {
        get { return global::gt_msg.ActionResponsesg100.DefaultInstance; }
      }
      
      public override ActionResponsesg100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ActionResponsesg100) {
          return MergeFrom((ActionResponsesg100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ActionResponsesg100 other) {
        if (other == global::gt_msg.ActionResponsesg100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_actionResponsesg100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _actionResponsesg100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.ActionResponsesg100.Types.ActionResponsesg100Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.ActionResponsesg100.Types.ActionResponsesg100Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.ActionResponsesg100.Types.ActionResponsesg100Code.OK;
        return this;
      }
    }
    static ActionResponsesg100() {
      object.ReferenceEquals(global::gt_msg.GtSg100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserPaysg100 : pb::GeneratedMessage<UserPaysg100, UserPaysg100.Builder> {
    private UserPaysg100() { }
    private static readonly UserPaysg100 defaultInstance = new UserPaysg100().MakeReadOnly();
    private static readonly string[] _userPaysg100FieldNames = new string[] { "rate", "seat", "value" };
    private static readonly uint[] _userPaysg100FieldTags = new uint[] { 16, 8, 24 };
    public static UserPaysg100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserPaysg100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserPaysg100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_UserPaysg100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserPaysg100, UserPaysg100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_UserPaysg100__FieldAccessorTable; }
    }
    
    public const int SeatFieldNumber = 1;
    private bool hasSeat;
    private long seat_;
    public bool HasSeat {
      get { return hasSeat; }
    }
    public long Seat {
      get { return seat_; }
    }
    
    public const int RateFieldNumber = 2;
    private bool hasRate;
    private int rate_;
    public bool HasRate {
      get { return hasRate; }
    }
    public int Rate {
      get { return rate_; }
    }
    
    public const int ValueFieldNumber = 3;
    private bool hasValue;
    private long value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public long Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSeat) return false;
        if (!hasValue) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userPaysg100FieldNames;
      if (hasSeat) {
        output.WriteInt64(1, field_names[1], Seat);
      }
      if (hasRate) {
        output.WriteInt32(2, field_names[0], Rate);
      }
      if (hasValue) {
        output.WriteInt64(3, field_names[2], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSeat) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, Seat);
      }
      if (hasRate) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Rate);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserPaysg100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserPaysg100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserPaysg100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserPaysg100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserPaysg100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserPaysg100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserPaysg100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserPaysg100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserPaysg100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserPaysg100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserPaysg100 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserPaysg100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserPaysg100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserPaysg100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserPaysg100 result;
      
      private UserPaysg100 PrepareBuilder() {
        if (resultIsReadOnly) {
          UserPaysg100 original = result;
          result = new UserPaysg100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserPaysg100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.UserPaysg100.Descriptor; }
      }
      
      public override UserPaysg100 DefaultInstanceForType {
        get { return global::gt_msg.UserPaysg100.DefaultInstance; }
      }
      
      public override UserPaysg100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserPaysg100) {
          return MergeFrom((UserPaysg100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserPaysg100 other) {
        if (other == global::gt_msg.UserPaysg100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSeat) {
          Seat = other.Seat;
        }
        if (other.HasRate) {
          Rate = other.Rate;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userPaysg100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userPaysg100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSeat = input.ReadInt64(ref result.seat_);
              break;
            }
            case 16: {
              result.hasRate = input.ReadInt32(ref result.rate_);
              break;
            }
            case 24: {
              result.hasValue = input.ReadInt64(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSeat {
        get { return result.hasSeat; }
      }
      public long Seat {
        get { return result.Seat; }
        set { SetSeat(value); }
      }
      public Builder SetSeat(long value) {
        PrepareBuilder();
        result.hasSeat = true;
        result.seat_ = value;
        return this;
      }
      public Builder ClearSeat() {
        PrepareBuilder();
        result.hasSeat = false;
        result.seat_ = 0L;
        return this;
      }
      
      public bool HasRate {
        get { return result.hasRate; }
      }
      public int Rate {
        get { return result.Rate; }
        set { SetRate(value); }
      }
      public Builder SetRate(int value) {
        PrepareBuilder();
        result.hasRate = true;
        result.rate_ = value;
        return this;
      }
      public Builder ClearRate() {
        PrepareBuilder();
        result.hasRate = false;
        result.rate_ = 0;
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public long Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(long value) {
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = 0L;
        return this;
      }
    }
    static UserPaysg100() {
      object.ReferenceEquals(global::gt_msg.GtSg100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableUserStatssg100 : pb::GeneratedMessage<TableUserStatssg100, TableUserStatssg100.Builder> {
    private TableUserStatssg100() { }
    private static readonly TableUserStatssg100 defaultInstance = new TableUserStatssg100().MakeReadOnly();
    private static readonly string[] _tableUserStatssg100FieldNames = new string[] { "NewActionList", "PointOnSeat", "user_info" };
    private static readonly uint[] _tableUserStatssg100FieldTags = new uint[] { 26, 18, 10 };
    public static TableUserStatssg100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableUserStatssg100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableUserStatssg100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_TableUserStatssg100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableUserStatssg100, TableUserStatssg100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_TableUserStatssg100__FieldAccessorTable; }
    }
    
    public const int UserInfoFieldNumber = 1;
    private bool hasUserInfo;
    private global::gt_msg.User userInfo_;
    public bool HasUserInfo {
      get { return hasUserInfo; }
    }
    public global::gt_msg.User UserInfo {
      get { return userInfo_ ?? global::gt_msg.User.DefaultInstance; }
    }
    
    public const int PointOnSeatFieldNumber = 2;
    private pbc::PopsicleList<global::gt_msg.UserPaysg100> pointOnSeat_ = new pbc::PopsicleList<global::gt_msg.UserPaysg100>();
    public scg::IList<global::gt_msg.UserPaysg100> PointOnSeatList {
      get { return pointOnSeat_; }
    }
    public int PointOnSeatCount {
      get { return pointOnSeat_.Count; }
    }
    public global::gt_msg.UserPaysg100 GetPointOnSeat(int index) {
      return pointOnSeat_[index];
    }
    
    public const int NewActionListFieldNumber = 3;
    private pbc::PopsicleList<global::gt_msg.ActionRequestsg100> newActionList_ = new pbc::PopsicleList<global::gt_msg.ActionRequestsg100>();
    public scg::IList<global::gt_msg.ActionRequestsg100> NewActionListList {
      get { return newActionList_; }
    }
    public int NewActionListCount {
      get { return newActionList_.Count; }
    }
    public global::gt_msg.ActionRequestsg100 GetNewActionList(int index) {
      return newActionList_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserInfo) return false;
        if (!UserInfo.IsInitialized) return false;
        foreach (global::gt_msg.UserPaysg100 element in PointOnSeatList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::gt_msg.ActionRequestsg100 element in NewActionListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tableUserStatssg100FieldNames;
      if (hasUserInfo) {
        output.WriteMessage(1, field_names[2], UserInfo);
      }
      if (pointOnSeat_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], pointOnSeat_);
      }
      if (newActionList_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], newActionList_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserInfo) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, UserInfo);
      }
      foreach (global::gt_msg.UserPaysg100 element in PointOnSeatList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      foreach (global::gt_msg.ActionRequestsg100 element in NewActionListList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TableUserStatssg100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableUserStatssg100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableUserStatssg100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableUserStatssg100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableUserStatssg100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableUserStatssg100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableUserStatssg100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableUserStatssg100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableUserStatssg100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableUserStatssg100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableUserStatssg100 MakeReadOnly() {
      pointOnSeat_.MakeReadOnly();
      newActionList_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableUserStatssg100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableUserStatssg100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableUserStatssg100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableUserStatssg100 result;
      
      private TableUserStatssg100 PrepareBuilder() {
        if (resultIsReadOnly) {
          TableUserStatssg100 original = result;
          result = new TableUserStatssg100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableUserStatssg100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.TableUserStatssg100.Descriptor; }
      }
      
      public override TableUserStatssg100 DefaultInstanceForType {
        get { return global::gt_msg.TableUserStatssg100.DefaultInstance; }
      }
      
      public override TableUserStatssg100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableUserStatssg100) {
          return MergeFrom((TableUserStatssg100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableUserStatssg100 other) {
        if (other == global::gt_msg.TableUserStatssg100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserInfo) {
          MergeUserInfo(other.UserInfo);
        }
        if (other.pointOnSeat_.Count != 0) {
          result.pointOnSeat_.Add(other.pointOnSeat_);
        }
        if (other.newActionList_.Count != 0) {
          result.newActionList_.Add(other.newActionList_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableUserStatssg100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableUserStatssg100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::gt_msg.User.Builder subBuilder = global::gt_msg.User.CreateBuilder();
              if (result.hasUserInfo) {
                subBuilder.MergeFrom(UserInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserInfo = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.pointOnSeat_, global::gt_msg.UserPaysg100.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.newActionList_, global::gt_msg.ActionRequestsg100.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserInfo {
       get { return result.hasUserInfo; }
      }
      public global::gt_msg.User UserInfo {
        get { return result.UserInfo; }
        set { SetUserInfo(value); }
      }
      public Builder SetUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = value;
        return this;
      }
      public Builder SetUserInfo(global::gt_msg.User.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserInfo &&
            result.userInfo_ != global::gt_msg.User.DefaultInstance) {
            result.userInfo_ = global::gt_msg.User.CreateBuilder(result.userInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.userInfo_ = value;
        }
        result.hasUserInfo = true;
        return this;
      }
      public Builder ClearUserInfo() {
        PrepareBuilder();
        result.hasUserInfo = false;
        result.userInfo_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::gt_msg.UserPaysg100> PointOnSeatList {
        get { return PrepareBuilder().pointOnSeat_; }
      }
      public int PointOnSeatCount {
        get { return result.PointOnSeatCount; }
      }
      public global::gt_msg.UserPaysg100 GetPointOnSeat(int index) {
        return result.GetPointOnSeat(index);
      }
      public Builder SetPointOnSeat(int index, global::gt_msg.UserPaysg100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.pointOnSeat_[index] = value;
        return this;
      }
      public Builder SetPointOnSeat(int index, global::gt_msg.UserPaysg100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.pointOnSeat_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPointOnSeat(global::gt_msg.UserPaysg100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.pointOnSeat_.Add(value);
        return this;
      }
      public Builder AddPointOnSeat(global::gt_msg.UserPaysg100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.pointOnSeat_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePointOnSeat(scg::IEnumerable<global::gt_msg.UserPaysg100> values) {
        PrepareBuilder();
        result.pointOnSeat_.Add(values);
        return this;
      }
      public Builder ClearPointOnSeat() {
        PrepareBuilder();
        result.pointOnSeat_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::gt_msg.ActionRequestsg100> NewActionListList {
        get { return PrepareBuilder().newActionList_; }
      }
      public int NewActionListCount {
        get { return result.NewActionListCount; }
      }
      public global::gt_msg.ActionRequestsg100 GetNewActionList(int index) {
        return result.GetNewActionList(index);
      }
      public Builder SetNewActionList(int index, global::gt_msg.ActionRequestsg100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.newActionList_[index] = value;
        return this;
      }
      public Builder SetNewActionList(int index, global::gt_msg.ActionRequestsg100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.newActionList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddNewActionList(global::gt_msg.ActionRequestsg100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.newActionList_.Add(value);
        return this;
      }
      public Builder AddNewActionList(global::gt_msg.ActionRequestsg100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.newActionList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeNewActionList(scg::IEnumerable<global::gt_msg.ActionRequestsg100> values) {
        PrepareBuilder();
        result.newActionList_.Add(values);
        return this;
      }
      public Builder ClearNewActionList() {
        PrepareBuilder();
        result.newActionList_.Clear();
        return this;
      }
    }
    static TableUserStatssg100() {
      object.ReferenceEquals(global::gt_msg.GtSg100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableStatssg100 : pb::GeneratedMessage<TableStatssg100, TableStatssg100.Builder> {
    private TableStatssg100() { }
    private static readonly TableStatssg100 defaultInstance = new TableStatssg100().MakeReadOnly();
    private static readonly string[] _tableStatssg100FieldNames = new string[] { "BeginItem", "HistoryLW", "NextActionTimeOut", "PointOnSeat", "Rank", "Rule", "Stage", "Step", "TableID", "UserSelf" };
    private static readonly uint[] _tableStatssg100FieldTags = new uint[] { 80, 64, 40, 74, 24, 32, 16, 48, 8, 58 };
    public static TableStatssg100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableStatssg100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableStatssg100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_TableStatssg100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableStatssg100, TableStatssg100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_TableStatssg100__FieldAccessorTable; }
    }
    
    public const int TableIDFieldNumber = 1;
    private bool hasTableID;
    private int tableID_;
    public bool HasTableID {
      get { return hasTableID; }
    }
    public int TableID {
      get { return tableID_; }
    }
    
    public const int StageFieldNumber = 2;
    private bool hasStage;
    private int stage_;
    public bool HasStage {
      get { return hasStage; }
    }
    public int Stage {
      get { return stage_; }
    }
    
    public const int RankFieldNumber = 3;
    private bool hasRank;
    private global::gt_msg.Rank rank_ = global::gt_msg.Rank.LV0;
    public bool HasRank {
      get { return hasRank; }
    }
    public global::gt_msg.Rank Rank {
      get { return rank_; }
    }
    
    public const int RuleFieldNumber = 4;
    private bool hasRule;
    private global::gt_msg.Rule rule_ = global::gt_msg.Rule.RuleNormal;
    public bool HasRule {
      get { return hasRule; }
    }
    public global::gt_msg.Rule Rule {
      get { return rule_; }
    }
    
    public const int NextActionTimeOutFieldNumber = 5;
    private bool hasNextActionTimeOut;
    private int nextActionTimeOut_;
    public bool HasNextActionTimeOut {
      get { return hasNextActionTimeOut; }
    }
    public int NextActionTimeOut {
      get { return nextActionTimeOut_; }
    }
    
    public const int StepFieldNumber = 6;
    private bool hasStep;
    private int step_;
    public bool HasStep {
      get { return hasStep; }
    }
    public int Step {
      get { return step_; }
    }
    
    public const int UserSelfFieldNumber = 7;
    private bool hasUserSelf;
    private global::gt_msg.TableUserStatssg100 userSelf_;
    public bool HasUserSelf {
      get { return hasUserSelf; }
    }
    public global::gt_msg.TableUserStatssg100 UserSelf {
      get { return userSelf_ ?? global::gt_msg.TableUserStatssg100.DefaultInstance; }
    }
    
    public const int HistoryLWFieldNumber = 8;
    private pbc::PopsicleList<int> historyLW_ = new pbc::PopsicleList<int>();
    public scg::IList<int> HistoryLWList {
      get { return pbc::Lists.AsReadOnly(historyLW_); }
    }
    public int HistoryLWCount {
      get { return historyLW_.Count; }
    }
    public int GetHistoryLW(int index) {
      return historyLW_[index];
    }
    
    public const int PointOnSeatFieldNumber = 9;
    private pbc::PopsicleList<global::gt_msg.UserPaysg100> pointOnSeat_ = new pbc::PopsicleList<global::gt_msg.UserPaysg100>();
    public scg::IList<global::gt_msg.UserPaysg100> PointOnSeatList {
      get { return pointOnSeat_; }
    }
    public int PointOnSeatCount {
      get { return pointOnSeat_.Count; }
    }
    public global::gt_msg.UserPaysg100 GetPointOnSeat(int index) {
      return pointOnSeat_[index];
    }
    
    public const int BeginItemFieldNumber = 10;
    private pbc::PopsicleList<int> beginItem_ = new pbc::PopsicleList<int>();
    public scg::IList<int> BeginItemList {
      get { return pbc::Lists.AsReadOnly(beginItem_); }
    }
    public int BeginItemCount {
      get { return beginItem_.Count; }
    }
    public int GetBeginItem(int index) {
      return beginItem_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableID) return false;
        if (!hasStage) return false;
        if (!hasRank) return false;
        if (!hasRule) return false;
        if (!hasNextActionTimeOut) return false;
        if (!hasStep) return false;
        if (HasUserSelf) {
          if (!UserSelf.IsInitialized) return false;
        }
        foreach (global::gt_msg.UserPaysg100 element in PointOnSeatList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tableStatssg100FieldNames;
      if (hasTableID) {
        output.WriteInt32(1, field_names[8], TableID);
      }
      if (hasStage) {
        output.WriteInt32(2, field_names[6], Stage);
      }
      if (hasRank) {
        output.WriteEnum(3, field_names[4], (int) Rank, Rank);
      }
      if (hasRule) {
        output.WriteEnum(4, field_names[5], (int) Rule, Rule);
      }
      if (hasNextActionTimeOut) {
        output.WriteInt32(5, field_names[2], NextActionTimeOut);
      }
      if (hasStep) {
        output.WriteInt32(6, field_names[7], Step);
      }
      if (hasUserSelf) {
        output.WriteMessage(7, field_names[9], UserSelf);
      }
      if (historyLW_.Count > 0) {
        output.WriteInt32Array(8, field_names[1], historyLW_);
      }
      if (pointOnSeat_.Count > 0) {
        output.WriteMessageArray(9, field_names[3], pointOnSeat_);
      }
      if (beginItem_.Count > 0) {
        output.WriteInt32Array(10, field_names[0], beginItem_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableID) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, TableID);
      }
      if (hasStage) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Stage);
      }
      if (hasRank) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Rank);
      }
      if (hasRule) {
        size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Rule);
      }
      if (hasNextActionTimeOut) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, NextActionTimeOut);
      }
      if (hasStep) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, Step);
      }
      if (hasUserSelf) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, UserSelf);
      }
      {
        int dataSize = 0;
        foreach (int element in HistoryLWList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * historyLW_.Count;
      }
      foreach (global::gt_msg.UserPaysg100 element in PointOnSeatList) {
        size += pb::CodedOutputStream.ComputeMessageSize(9, element);
      }
      {
        int dataSize = 0;
        foreach (int element in BeginItemList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * beginItem_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TableStatssg100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableStatssg100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableStatssg100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableStatssg100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableStatssg100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableStatssg100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableStatssg100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableStatssg100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableStatssg100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableStatssg100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableStatssg100 MakeReadOnly() {
      historyLW_.MakeReadOnly();
      pointOnSeat_.MakeReadOnly();
      beginItem_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableStatssg100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableStatssg100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableStatssg100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableStatssg100 result;
      
      private TableStatssg100 PrepareBuilder() {
        if (resultIsReadOnly) {
          TableStatssg100 original = result;
          result = new TableStatssg100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableStatssg100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.TableStatssg100.Descriptor; }
      }
      
      public override TableStatssg100 DefaultInstanceForType {
        get { return global::gt_msg.TableStatssg100.DefaultInstance; }
      }
      
      public override TableStatssg100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableStatssg100) {
          return MergeFrom((TableStatssg100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableStatssg100 other) {
        if (other == global::gt_msg.TableStatssg100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableID) {
          TableID = other.TableID;
        }
        if (other.HasStage) {
          Stage = other.Stage;
        }
        if (other.HasRank) {
          Rank = other.Rank;
        }
        if (other.HasRule) {
          Rule = other.Rule;
        }
        if (other.HasNextActionTimeOut) {
          NextActionTimeOut = other.NextActionTimeOut;
        }
        if (other.HasStep) {
          Step = other.Step;
        }
        if (other.HasUserSelf) {
          MergeUserSelf(other.UserSelf);
        }
        if (other.historyLW_.Count != 0) {
          result.historyLW_.Add(other.historyLW_);
        }
        if (other.pointOnSeat_.Count != 0) {
          result.pointOnSeat_.Add(other.pointOnSeat_);
        }
        if (other.beginItem_.Count != 0) {
          result.beginItem_.Add(other.beginItem_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableStatssg100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableStatssg100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTableID = input.ReadInt32(ref result.tableID_);
              break;
            }
            case 16: {
              result.hasStage = input.ReadInt32(ref result.stage_);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.rank_, out unknown)) {
                result.hasRank = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.rule_, out unknown)) {
                result.hasRule = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
            case 40: {
              result.hasNextActionTimeOut = input.ReadInt32(ref result.nextActionTimeOut_);
              break;
            }
            case 48: {
              result.hasStep = input.ReadInt32(ref result.step_);
              break;
            }
            case 58: {
              global::gt_msg.TableUserStatssg100.Builder subBuilder = global::gt_msg.TableUserStatssg100.CreateBuilder();
              if (result.hasUserSelf) {
                subBuilder.MergeFrom(UserSelf);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserSelf = subBuilder.BuildPartial();
              break;
            }
            case 66:
            case 64: {
              input.ReadInt32Array(tag, field_name, result.historyLW_);
              break;
            }
            case 74: {
              input.ReadMessageArray(tag, field_name, result.pointOnSeat_, global::gt_msg.UserPaysg100.DefaultInstance, extensionRegistry);
              break;
            }
            case 82:
            case 80: {
              input.ReadInt32Array(tag, field_name, result.beginItem_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableID {
        get { return result.hasTableID; }
      }
      public int TableID {
        get { return result.TableID; }
        set { SetTableID(value); }
      }
      public Builder SetTableID(int value) {
        PrepareBuilder();
        result.hasTableID = true;
        result.tableID_ = value;
        return this;
      }
      public Builder ClearTableID() {
        PrepareBuilder();
        result.hasTableID = false;
        result.tableID_ = 0;
        return this;
      }
      
      public bool HasStage {
        get { return result.hasStage; }
      }
      public int Stage {
        get { return result.Stage; }
        set { SetStage(value); }
      }
      public Builder SetStage(int value) {
        PrepareBuilder();
        result.hasStage = true;
        result.stage_ = value;
        return this;
      }
      public Builder ClearStage() {
        PrepareBuilder();
        result.hasStage = false;
        result.stage_ = 0;
        return this;
      }
      
      public bool HasRank {
       get { return result.hasRank; }
      }
      public global::gt_msg.Rank Rank {
        get { return result.Rank; }
        set { SetRank(value); }
      }
      public Builder SetRank(global::gt_msg.Rank value) {
        PrepareBuilder();
        result.hasRank = true;
        result.rank_ = value;
        return this;
      }
      public Builder ClearRank() {
        PrepareBuilder();
        result.hasRank = false;
        result.rank_ = global::gt_msg.Rank.LV0;
        return this;
      }
      
      public bool HasRule {
       get { return result.hasRule; }
      }
      public global::gt_msg.Rule Rule {
        get { return result.Rule; }
        set { SetRule(value); }
      }
      public Builder SetRule(global::gt_msg.Rule value) {
        PrepareBuilder();
        result.hasRule = true;
        result.rule_ = value;
        return this;
      }
      public Builder ClearRule() {
        PrepareBuilder();
        result.hasRule = false;
        result.rule_ = global::gt_msg.Rule.RuleNormal;
        return this;
      }
      
      public bool HasNextActionTimeOut {
        get { return result.hasNextActionTimeOut; }
      }
      public int NextActionTimeOut {
        get { return result.NextActionTimeOut; }
        set { SetNextActionTimeOut(value); }
      }
      public Builder SetNextActionTimeOut(int value) {
        PrepareBuilder();
        result.hasNextActionTimeOut = true;
        result.nextActionTimeOut_ = value;
        return this;
      }
      public Builder ClearNextActionTimeOut() {
        PrepareBuilder();
        result.hasNextActionTimeOut = false;
        result.nextActionTimeOut_ = 0;
        return this;
      }
      
      public bool HasStep {
        get { return result.hasStep; }
      }
      public int Step {
        get { return result.Step; }
        set { SetStep(value); }
      }
      public Builder SetStep(int value) {
        PrepareBuilder();
        result.hasStep = true;
        result.step_ = value;
        return this;
      }
      public Builder ClearStep() {
        PrepareBuilder();
        result.hasStep = false;
        result.step_ = 0;
        return this;
      }
      
      public bool HasUserSelf {
       get { return result.hasUserSelf; }
      }
      public global::gt_msg.TableUserStatssg100 UserSelf {
        get { return result.UserSelf; }
        set { SetUserSelf(value); }
      }
      public Builder SetUserSelf(global::gt_msg.TableUserStatssg100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserSelf = true;
        result.userSelf_ = value;
        return this;
      }
      public Builder SetUserSelf(global::gt_msg.TableUserStatssg100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserSelf = true;
        result.userSelf_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserSelf(global::gt_msg.TableUserStatssg100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserSelf &&
            result.userSelf_ != global::gt_msg.TableUserStatssg100.DefaultInstance) {
            result.userSelf_ = global::gt_msg.TableUserStatssg100.CreateBuilder(result.userSelf_).MergeFrom(value).BuildPartial();
        } else {
          result.userSelf_ = value;
        }
        result.hasUserSelf = true;
        return this;
      }
      public Builder ClearUserSelf() {
        PrepareBuilder();
        result.hasUserSelf = false;
        result.userSelf_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<int> HistoryLWList {
        get { return PrepareBuilder().historyLW_; }
      }
      public int HistoryLWCount {
        get { return result.HistoryLWCount; }
      }
      public int GetHistoryLW(int index) {
        return result.GetHistoryLW(index);
      }
      public Builder SetHistoryLW(int index, int value) {
        PrepareBuilder();
        result.historyLW_[index] = value;
        return this;
      }
      public Builder AddHistoryLW(int value) {
        PrepareBuilder();
        result.historyLW_.Add(value);
        return this;
      }
      public Builder AddRangeHistoryLW(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.historyLW_.Add(values);
        return this;
      }
      public Builder ClearHistoryLW() {
        PrepareBuilder();
        result.historyLW_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::gt_msg.UserPaysg100> PointOnSeatList {
        get { return PrepareBuilder().pointOnSeat_; }
      }
      public int PointOnSeatCount {
        get { return result.PointOnSeatCount; }
      }
      public global::gt_msg.UserPaysg100 GetPointOnSeat(int index) {
        return result.GetPointOnSeat(index);
      }
      public Builder SetPointOnSeat(int index, global::gt_msg.UserPaysg100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.pointOnSeat_[index] = value;
        return this;
      }
      public Builder SetPointOnSeat(int index, global::gt_msg.UserPaysg100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.pointOnSeat_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPointOnSeat(global::gt_msg.UserPaysg100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.pointOnSeat_.Add(value);
        return this;
      }
      public Builder AddPointOnSeat(global::gt_msg.UserPaysg100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.pointOnSeat_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePointOnSeat(scg::IEnumerable<global::gt_msg.UserPaysg100> values) {
        PrepareBuilder();
        result.pointOnSeat_.Add(values);
        return this;
      }
      public Builder ClearPointOnSeat() {
        PrepareBuilder();
        result.pointOnSeat_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<int> BeginItemList {
        get { return PrepareBuilder().beginItem_; }
      }
      public int BeginItemCount {
        get { return result.BeginItemCount; }
      }
      public int GetBeginItem(int index) {
        return result.GetBeginItem(index);
      }
      public Builder SetBeginItem(int index, int value) {
        PrepareBuilder();
        result.beginItem_[index] = value;
        return this;
      }
      public Builder AddBeginItem(int value) {
        PrepareBuilder();
        result.beginItem_.Add(value);
        return this;
      }
      public Builder AddRangeBeginItem(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.beginItem_.Add(values);
        return this;
      }
      public Builder ClearBeginItem() {
        PrepareBuilder();
        result.beginItem_.Clear();
        return this;
      }
    }
    static TableStatssg100() {
      object.ReferenceEquals(global::gt_msg.GtSg100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableUserResultsg100 : pb::GeneratedMessage<TableUserResultsg100, TableUserResultsg100.Builder> {
    private TableUserResultsg100() { }
    private static readonly TableUserResultsg100 defaultInstance = new TableUserResultsg100().MakeReadOnly();
    private static readonly string[] _tableUserResultsg100FieldNames = new string[] { "ContinueWin", "LWOnSeat", "PointOnSeat", "TAX", "user_info" };
    private static readonly uint[] _tableUserResultsg100FieldTags = new uint[] { 40, 26, 18, 32, 10 };
    public static TableUserResultsg100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableUserResultsg100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableUserResultsg100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_TableUserResultsg100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableUserResultsg100, TableUserResultsg100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_TableUserResultsg100__FieldAccessorTable; }
    }
    
    public const int UserInfoFieldNumber = 1;
    private bool hasUserInfo;
    private global::gt_msg.User userInfo_;
    public bool HasUserInfo {
      get { return hasUserInfo; }
    }
    public global::gt_msg.User UserInfo {
      get { return userInfo_ ?? global::gt_msg.User.DefaultInstance; }
    }
    
    public const int PointOnSeatFieldNumber = 2;
    private pbc::PopsicleList<global::gt_msg.UserPaysg100> pointOnSeat_ = new pbc::PopsicleList<global::gt_msg.UserPaysg100>();
    public scg::IList<global::gt_msg.UserPaysg100> PointOnSeatList {
      get { return pointOnSeat_; }
    }
    public int PointOnSeatCount {
      get { return pointOnSeat_.Count; }
    }
    public global::gt_msg.UserPaysg100 GetPointOnSeat(int index) {
      return pointOnSeat_[index];
    }
    
    public const int LWOnSeatFieldNumber = 3;
    private pbc::PopsicleList<global::gt_msg.UserPaysg100> lWOnSeat_ = new pbc::PopsicleList<global::gt_msg.UserPaysg100>();
    public scg::IList<global::gt_msg.UserPaysg100> LWOnSeatList {
      get { return lWOnSeat_; }
    }
    public int LWOnSeatCount {
      get { return lWOnSeat_.Count; }
    }
    public global::gt_msg.UserPaysg100 GetLWOnSeat(int index) {
      return lWOnSeat_[index];
    }
    
    public const int TAXFieldNumber = 4;
    private bool hasTAX;
    private long tAX_;
    public bool HasTAX {
      get { return hasTAX; }
    }
    public long TAX {
      get { return tAX_; }
    }
    
    public const int ContinueWinFieldNumber = 5;
    private bool hasContinueWin;
    private int continueWin_;
    public bool HasContinueWin {
      get { return hasContinueWin; }
    }
    public int ContinueWin {
      get { return continueWin_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserInfo) return false;
        if (!UserInfo.IsInitialized) return false;
        foreach (global::gt_msg.UserPaysg100 element in PointOnSeatList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::gt_msg.UserPaysg100 element in LWOnSeatList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tableUserResultsg100FieldNames;
      if (hasUserInfo) {
        output.WriteMessage(1, field_names[4], UserInfo);
      }
      if (pointOnSeat_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], pointOnSeat_);
      }
      if (lWOnSeat_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], lWOnSeat_);
      }
      if (hasTAX) {
        output.WriteInt64(4, field_names[3], TAX);
      }
      if (hasContinueWin) {
        output.WriteInt32(5, field_names[0], ContinueWin);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserInfo) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, UserInfo);
      }
      foreach (global::gt_msg.UserPaysg100 element in PointOnSeatList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      foreach (global::gt_msg.UserPaysg100 element in LWOnSeatList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      if (hasTAX) {
        size += pb::CodedOutputStream.ComputeInt64Size(4, TAX);
      }
      if (hasContinueWin) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, ContinueWin);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TableUserResultsg100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableUserResultsg100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableUserResultsg100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableUserResultsg100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableUserResultsg100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableUserResultsg100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableUserResultsg100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableUserResultsg100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableUserResultsg100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableUserResultsg100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableUserResultsg100 MakeReadOnly() {
      pointOnSeat_.MakeReadOnly();
      lWOnSeat_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableUserResultsg100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableUserResultsg100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableUserResultsg100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableUserResultsg100 result;
      
      private TableUserResultsg100 PrepareBuilder() {
        if (resultIsReadOnly) {
          TableUserResultsg100 original = result;
          result = new TableUserResultsg100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableUserResultsg100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.TableUserResultsg100.Descriptor; }
      }
      
      public override TableUserResultsg100 DefaultInstanceForType {
        get { return global::gt_msg.TableUserResultsg100.DefaultInstance; }
      }
      
      public override TableUserResultsg100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableUserResultsg100) {
          return MergeFrom((TableUserResultsg100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableUserResultsg100 other) {
        if (other == global::gt_msg.TableUserResultsg100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserInfo) {
          MergeUserInfo(other.UserInfo);
        }
        if (other.pointOnSeat_.Count != 0) {
          result.pointOnSeat_.Add(other.pointOnSeat_);
        }
        if (other.lWOnSeat_.Count != 0) {
          result.lWOnSeat_.Add(other.lWOnSeat_);
        }
        if (other.HasTAX) {
          TAX = other.TAX;
        }
        if (other.HasContinueWin) {
          ContinueWin = other.ContinueWin;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableUserResultsg100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableUserResultsg100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::gt_msg.User.Builder subBuilder = global::gt_msg.User.CreateBuilder();
              if (result.hasUserInfo) {
                subBuilder.MergeFrom(UserInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserInfo = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.pointOnSeat_, global::gt_msg.UserPaysg100.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.lWOnSeat_, global::gt_msg.UserPaysg100.DefaultInstance, extensionRegistry);
              break;
            }
            case 32: {
              result.hasTAX = input.ReadInt64(ref result.tAX_);
              break;
            }
            case 40: {
              result.hasContinueWin = input.ReadInt32(ref result.continueWin_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserInfo {
       get { return result.hasUserInfo; }
      }
      public global::gt_msg.User UserInfo {
        get { return result.UserInfo; }
        set { SetUserInfo(value); }
      }
      public Builder SetUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = value;
        return this;
      }
      public Builder SetUserInfo(global::gt_msg.User.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserInfo &&
            result.userInfo_ != global::gt_msg.User.DefaultInstance) {
            result.userInfo_ = global::gt_msg.User.CreateBuilder(result.userInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.userInfo_ = value;
        }
        result.hasUserInfo = true;
        return this;
      }
      public Builder ClearUserInfo() {
        PrepareBuilder();
        result.hasUserInfo = false;
        result.userInfo_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::gt_msg.UserPaysg100> PointOnSeatList {
        get { return PrepareBuilder().pointOnSeat_; }
      }
      public int PointOnSeatCount {
        get { return result.PointOnSeatCount; }
      }
      public global::gt_msg.UserPaysg100 GetPointOnSeat(int index) {
        return result.GetPointOnSeat(index);
      }
      public Builder SetPointOnSeat(int index, global::gt_msg.UserPaysg100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.pointOnSeat_[index] = value;
        return this;
      }
      public Builder SetPointOnSeat(int index, global::gt_msg.UserPaysg100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.pointOnSeat_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPointOnSeat(global::gt_msg.UserPaysg100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.pointOnSeat_.Add(value);
        return this;
      }
      public Builder AddPointOnSeat(global::gt_msg.UserPaysg100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.pointOnSeat_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePointOnSeat(scg::IEnumerable<global::gt_msg.UserPaysg100> values) {
        PrepareBuilder();
        result.pointOnSeat_.Add(values);
        return this;
      }
      public Builder ClearPointOnSeat() {
        PrepareBuilder();
        result.pointOnSeat_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::gt_msg.UserPaysg100> LWOnSeatList {
        get { return PrepareBuilder().lWOnSeat_; }
      }
      public int LWOnSeatCount {
        get { return result.LWOnSeatCount; }
      }
      public global::gt_msg.UserPaysg100 GetLWOnSeat(int index) {
        return result.GetLWOnSeat(index);
      }
      public Builder SetLWOnSeat(int index, global::gt_msg.UserPaysg100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.lWOnSeat_[index] = value;
        return this;
      }
      public Builder SetLWOnSeat(int index, global::gt_msg.UserPaysg100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.lWOnSeat_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLWOnSeat(global::gt_msg.UserPaysg100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.lWOnSeat_.Add(value);
        return this;
      }
      public Builder AddLWOnSeat(global::gt_msg.UserPaysg100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.lWOnSeat_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLWOnSeat(scg::IEnumerable<global::gt_msg.UserPaysg100> values) {
        PrepareBuilder();
        result.lWOnSeat_.Add(values);
        return this;
      }
      public Builder ClearLWOnSeat() {
        PrepareBuilder();
        result.lWOnSeat_.Clear();
        return this;
      }
      
      public bool HasTAX {
        get { return result.hasTAX; }
      }
      public long TAX {
        get { return result.TAX; }
        set { SetTAX(value); }
      }
      public Builder SetTAX(long value) {
        PrepareBuilder();
        result.hasTAX = true;
        result.tAX_ = value;
        return this;
      }
      public Builder ClearTAX() {
        PrepareBuilder();
        result.hasTAX = false;
        result.tAX_ = 0L;
        return this;
      }
      
      public bool HasContinueWin {
        get { return result.hasContinueWin; }
      }
      public int ContinueWin {
        get { return result.ContinueWin; }
        set { SetContinueWin(value); }
      }
      public Builder SetContinueWin(int value) {
        PrepareBuilder();
        result.hasContinueWin = true;
        result.continueWin_ = value;
        return this;
      }
      public Builder ClearContinueWin() {
        PrepareBuilder();
        result.hasContinueWin = false;
        result.continueWin_ = 0;
        return this;
      }
    }
    static TableUserResultsg100() {
      object.ReferenceEquals(global::gt_msg.GtSg100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RoundEndedEventsg100 : pb::GeneratedMessage<RoundEndedEventsg100, RoundEndedEventsg100.Builder> {
    private RoundEndedEventsg100() { }
    private static readonly RoundEndedEventsg100 defaultInstance = new RoundEndedEventsg100().MakeReadOnly();
    private static readonly string[] _roundEndedEventsg100FieldNames = new string[] { "BeginItem", "MaxWinNick", "MaxWinNum", "NextStartTimeoutSecs", "OpenSeat", "TableID", "UserSelf", "WinSeat" };
    private static readonly uint[] _roundEndedEventsg100FieldTags = new uint[] { 64, 34, 40, 16, 48, 8, 26, 56 };
    public static RoundEndedEventsg100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RoundEndedEventsg100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RoundEndedEventsg100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_RoundEndedEventsg100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RoundEndedEventsg100, RoundEndedEventsg100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_RoundEndedEventsg100__FieldAccessorTable; }
    }
    
    public const int TableIDFieldNumber = 1;
    private bool hasTableID;
    private int tableID_;
    public bool HasTableID {
      get { return hasTableID; }
    }
    public int TableID {
      get { return tableID_; }
    }
    
    public const int NextStartTimeoutSecsFieldNumber = 2;
    private bool hasNextStartTimeoutSecs;
    private int nextStartTimeoutSecs_;
    public bool HasNextStartTimeoutSecs {
      get { return hasNextStartTimeoutSecs; }
    }
    public int NextStartTimeoutSecs {
      get { return nextStartTimeoutSecs_; }
    }
    
    public const int UserSelfFieldNumber = 3;
    private bool hasUserSelf;
    private global::gt_msg.TableUserResultsg100 userSelf_;
    public bool HasUserSelf {
      get { return hasUserSelf; }
    }
    public global::gt_msg.TableUserResultsg100 UserSelf {
      get { return userSelf_ ?? global::gt_msg.TableUserResultsg100.DefaultInstance; }
    }
    
    public const int MaxWinNickFieldNumber = 4;
    private bool hasMaxWinNick;
    private string maxWinNick_ = "";
    public bool HasMaxWinNick {
      get { return hasMaxWinNick; }
    }
    public string MaxWinNick {
      get { return maxWinNick_; }
    }
    
    public const int MaxWinNumFieldNumber = 5;
    private bool hasMaxWinNum;
    private int maxWinNum_;
    public bool HasMaxWinNum {
      get { return hasMaxWinNum; }
    }
    public int MaxWinNum {
      get { return maxWinNum_; }
    }
    
    public const int OpenSeatFieldNumber = 6;
    private pbc::PopsicleList<int> openSeat_ = new pbc::PopsicleList<int>();
    public scg::IList<int> OpenSeatList {
      get { return pbc::Lists.AsReadOnly(openSeat_); }
    }
    public int OpenSeatCount {
      get { return openSeat_.Count; }
    }
    public int GetOpenSeat(int index) {
      return openSeat_[index];
    }
    
    public const int WinSeatFieldNumber = 7;
    private pbc::PopsicleList<int> winSeat_ = new pbc::PopsicleList<int>();
    public scg::IList<int> WinSeatList {
      get { return pbc::Lists.AsReadOnly(winSeat_); }
    }
    public int WinSeatCount {
      get { return winSeat_.Count; }
    }
    public int GetWinSeat(int index) {
      return winSeat_[index];
    }
    
    public const int BeginItemFieldNumber = 8;
    private pbc::PopsicleList<int> beginItem_ = new pbc::PopsicleList<int>();
    public scg::IList<int> BeginItemList {
      get { return pbc::Lists.AsReadOnly(beginItem_); }
    }
    public int BeginItemCount {
      get { return beginItem_.Count; }
    }
    public int GetBeginItem(int index) {
      return beginItem_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableID) return false;
        if (!hasNextStartTimeoutSecs) return false;
        if (!hasMaxWinNick) return false;
        if (!hasMaxWinNum) return false;
        if (HasUserSelf) {
          if (!UserSelf.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _roundEndedEventsg100FieldNames;
      if (hasTableID) {
        output.WriteInt32(1, field_names[5], TableID);
      }
      if (hasNextStartTimeoutSecs) {
        output.WriteInt32(2, field_names[3], NextStartTimeoutSecs);
      }
      if (hasUserSelf) {
        output.WriteMessage(3, field_names[6], UserSelf);
      }
      if (hasMaxWinNick) {
        output.WriteString(4, field_names[1], MaxWinNick);
      }
      if (hasMaxWinNum) {
        output.WriteInt32(5, field_names[2], MaxWinNum);
      }
      if (openSeat_.Count > 0) {
        output.WriteInt32Array(6, field_names[4], openSeat_);
      }
      if (winSeat_.Count > 0) {
        output.WriteInt32Array(7, field_names[7], winSeat_);
      }
      if (beginItem_.Count > 0) {
        output.WriteInt32Array(8, field_names[0], beginItem_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableID) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, TableID);
      }
      if (hasNextStartTimeoutSecs) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, NextStartTimeoutSecs);
      }
      if (hasUserSelf) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, UserSelf);
      }
      if (hasMaxWinNick) {
        size += pb::CodedOutputStream.ComputeStringSize(4, MaxWinNick);
      }
      if (hasMaxWinNum) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, MaxWinNum);
      }
      {
        int dataSize = 0;
        foreach (int element in OpenSeatList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * openSeat_.Count;
      }
      {
        int dataSize = 0;
        foreach (int element in WinSeatList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * winSeat_.Count;
      }
      {
        int dataSize = 0;
        foreach (int element in BeginItemList) {
          dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * beginItem_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RoundEndedEventsg100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RoundEndedEventsg100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RoundEndedEventsg100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RoundEndedEventsg100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RoundEndedEventsg100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RoundEndedEventsg100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RoundEndedEventsg100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RoundEndedEventsg100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RoundEndedEventsg100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RoundEndedEventsg100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RoundEndedEventsg100 MakeReadOnly() {
      openSeat_.MakeReadOnly();
      winSeat_.MakeReadOnly();
      beginItem_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RoundEndedEventsg100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RoundEndedEventsg100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RoundEndedEventsg100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RoundEndedEventsg100 result;
      
      private RoundEndedEventsg100 PrepareBuilder() {
        if (resultIsReadOnly) {
          RoundEndedEventsg100 original = result;
          result = new RoundEndedEventsg100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RoundEndedEventsg100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.RoundEndedEventsg100.Descriptor; }
      }
      
      public override RoundEndedEventsg100 DefaultInstanceForType {
        get { return global::gt_msg.RoundEndedEventsg100.DefaultInstance; }
      }
      
      public override RoundEndedEventsg100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RoundEndedEventsg100) {
          return MergeFrom((RoundEndedEventsg100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RoundEndedEventsg100 other) {
        if (other == global::gt_msg.RoundEndedEventsg100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableID) {
          TableID = other.TableID;
        }
        if (other.HasNextStartTimeoutSecs) {
          NextStartTimeoutSecs = other.NextStartTimeoutSecs;
        }
        if (other.HasUserSelf) {
          MergeUserSelf(other.UserSelf);
        }
        if (other.HasMaxWinNick) {
          MaxWinNick = other.MaxWinNick;
        }
        if (other.HasMaxWinNum) {
          MaxWinNum = other.MaxWinNum;
        }
        if (other.openSeat_.Count != 0) {
          result.openSeat_.Add(other.openSeat_);
        }
        if (other.winSeat_.Count != 0) {
          result.winSeat_.Add(other.winSeat_);
        }
        if (other.beginItem_.Count != 0) {
          result.beginItem_.Add(other.beginItem_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_roundEndedEventsg100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _roundEndedEventsg100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTableID = input.ReadInt32(ref result.tableID_);
              break;
            }
            case 16: {
              result.hasNextStartTimeoutSecs = input.ReadInt32(ref result.nextStartTimeoutSecs_);
              break;
            }
            case 26: {
              global::gt_msg.TableUserResultsg100.Builder subBuilder = global::gt_msg.TableUserResultsg100.CreateBuilder();
              if (result.hasUserSelf) {
                subBuilder.MergeFrom(UserSelf);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserSelf = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              result.hasMaxWinNick = input.ReadString(ref result.maxWinNick_);
              break;
            }
            case 40: {
              result.hasMaxWinNum = input.ReadInt32(ref result.maxWinNum_);
              break;
            }
            case 50:
            case 48: {
              input.ReadInt32Array(tag, field_name, result.openSeat_);
              break;
            }
            case 58:
            case 56: {
              input.ReadInt32Array(tag, field_name, result.winSeat_);
              break;
            }
            case 66:
            case 64: {
              input.ReadInt32Array(tag, field_name, result.beginItem_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableID {
        get { return result.hasTableID; }
      }
      public int TableID {
        get { return result.TableID; }
        set { SetTableID(value); }
      }
      public Builder SetTableID(int value) {
        PrepareBuilder();
        result.hasTableID = true;
        result.tableID_ = value;
        return this;
      }
      public Builder ClearTableID() {
        PrepareBuilder();
        result.hasTableID = false;
        result.tableID_ = 0;
        return this;
      }
      
      public bool HasNextStartTimeoutSecs {
        get { return result.hasNextStartTimeoutSecs; }
      }
      public int NextStartTimeoutSecs {
        get { return result.NextStartTimeoutSecs; }
        set { SetNextStartTimeoutSecs(value); }
      }
      public Builder SetNextStartTimeoutSecs(int value) {
        PrepareBuilder();
        result.hasNextStartTimeoutSecs = true;
        result.nextStartTimeoutSecs_ = value;
        return this;
      }
      public Builder ClearNextStartTimeoutSecs() {
        PrepareBuilder();
        result.hasNextStartTimeoutSecs = false;
        result.nextStartTimeoutSecs_ = 0;
        return this;
      }
      
      public bool HasUserSelf {
       get { return result.hasUserSelf; }
      }
      public global::gt_msg.TableUserResultsg100 UserSelf {
        get { return result.UserSelf; }
        set { SetUserSelf(value); }
      }
      public Builder SetUserSelf(global::gt_msg.TableUserResultsg100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserSelf = true;
        result.userSelf_ = value;
        return this;
      }
      public Builder SetUserSelf(global::gt_msg.TableUserResultsg100.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserSelf = true;
        result.userSelf_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserSelf(global::gt_msg.TableUserResultsg100 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserSelf &&
            result.userSelf_ != global::gt_msg.TableUserResultsg100.DefaultInstance) {
            result.userSelf_ = global::gt_msg.TableUserResultsg100.CreateBuilder(result.userSelf_).MergeFrom(value).BuildPartial();
        } else {
          result.userSelf_ = value;
        }
        result.hasUserSelf = true;
        return this;
      }
      public Builder ClearUserSelf() {
        PrepareBuilder();
        result.hasUserSelf = false;
        result.userSelf_ = null;
        return this;
      }
      
      public bool HasMaxWinNick {
        get { return result.hasMaxWinNick; }
      }
      public string MaxWinNick {
        get { return result.MaxWinNick; }
        set { SetMaxWinNick(value); }
      }
      public Builder SetMaxWinNick(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMaxWinNick = true;
        result.maxWinNick_ = value;
        return this;
      }
      public Builder ClearMaxWinNick() {
        PrepareBuilder();
        result.hasMaxWinNick = false;
        result.maxWinNick_ = "";
        return this;
      }
      
      public bool HasMaxWinNum {
        get { return result.hasMaxWinNum; }
      }
      public int MaxWinNum {
        get { return result.MaxWinNum; }
        set { SetMaxWinNum(value); }
      }
      public Builder SetMaxWinNum(int value) {
        PrepareBuilder();
        result.hasMaxWinNum = true;
        result.maxWinNum_ = value;
        return this;
      }
      public Builder ClearMaxWinNum() {
        PrepareBuilder();
        result.hasMaxWinNum = false;
        result.maxWinNum_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<int> OpenSeatList {
        get { return PrepareBuilder().openSeat_; }
      }
      public int OpenSeatCount {
        get { return result.OpenSeatCount; }
      }
      public int GetOpenSeat(int index) {
        return result.GetOpenSeat(index);
      }
      public Builder SetOpenSeat(int index, int value) {
        PrepareBuilder();
        result.openSeat_[index] = value;
        return this;
      }
      public Builder AddOpenSeat(int value) {
        PrepareBuilder();
        result.openSeat_.Add(value);
        return this;
      }
      public Builder AddRangeOpenSeat(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.openSeat_.Add(values);
        return this;
      }
      public Builder ClearOpenSeat() {
        PrepareBuilder();
        result.openSeat_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<int> WinSeatList {
        get { return PrepareBuilder().winSeat_; }
      }
      public int WinSeatCount {
        get { return result.WinSeatCount; }
      }
      public int GetWinSeat(int index) {
        return result.GetWinSeat(index);
      }
      public Builder SetWinSeat(int index, int value) {
        PrepareBuilder();
        result.winSeat_[index] = value;
        return this;
      }
      public Builder AddWinSeat(int value) {
        PrepareBuilder();
        result.winSeat_.Add(value);
        return this;
      }
      public Builder AddRangeWinSeat(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.winSeat_.Add(values);
        return this;
      }
      public Builder ClearWinSeat() {
        PrepareBuilder();
        result.winSeat_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<int> BeginItemList {
        get { return PrepareBuilder().beginItem_; }
      }
      public int BeginItemCount {
        get { return result.BeginItemCount; }
      }
      public int GetBeginItem(int index) {
        return result.GetBeginItem(index);
      }
      public Builder SetBeginItem(int index, int value) {
        PrepareBuilder();
        result.beginItem_[index] = value;
        return this;
      }
      public Builder AddBeginItem(int value) {
        PrepareBuilder();
        result.beginItem_.Add(value);
        return this;
      }
      public Builder AddRangeBeginItem(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.beginItem_.Add(values);
        return this;
      }
      public Builder ClearBeginItem() {
        PrepareBuilder();
        result.beginItem_.Clear();
        return this;
      }
    }
    static RoundEndedEventsg100() {
      object.ReferenceEquals(global::gt_msg.GtSg100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ForceExitTableRequestsg100 : pb::GeneratedMessage<ForceExitTableRequestsg100, ForceExitTableRequestsg100.Builder> {
    private ForceExitTableRequestsg100() { }
    private static readonly ForceExitTableRequestsg100 defaultInstance = new ForceExitTableRequestsg100().MakeReadOnly();
    private static readonly string[] _forceExitTableRequestsg100FieldNames = new string[] {  };
    private static readonly uint[] _forceExitTableRequestsg100FieldTags = new uint[] {  };
    public static ForceExitTableRequestsg100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ForceExitTableRequestsg100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ForceExitTableRequestsg100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_ForceExitTableRequestsg100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ForceExitTableRequestsg100, ForceExitTableRequestsg100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_ForceExitTableRequestsg100__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _forceExitTableRequestsg100FieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ForceExitTableRequestsg100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ForceExitTableRequestsg100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableRequestsg100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ForceExitTableRequestsg100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableRequestsg100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ForceExitTableRequestsg100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableRequestsg100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ForceExitTableRequestsg100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ForceExitTableRequestsg100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ForceExitTableRequestsg100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ForceExitTableRequestsg100 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ForceExitTableRequestsg100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ForceExitTableRequestsg100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ForceExitTableRequestsg100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ForceExitTableRequestsg100 result;
      
      private ForceExitTableRequestsg100 PrepareBuilder() {
        if (resultIsReadOnly) {
          ForceExitTableRequestsg100 original = result;
          result = new ForceExitTableRequestsg100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ForceExitTableRequestsg100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.ForceExitTableRequestsg100.Descriptor; }
      }
      
      public override ForceExitTableRequestsg100 DefaultInstanceForType {
        get { return global::gt_msg.ForceExitTableRequestsg100.DefaultInstance; }
      }
      
      public override ForceExitTableRequestsg100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ForceExitTableRequestsg100) {
          return MergeFrom((ForceExitTableRequestsg100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ForceExitTableRequestsg100 other) {
        if (other == global::gt_msg.ForceExitTableRequestsg100.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_forceExitTableRequestsg100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _forceExitTableRequestsg100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static ForceExitTableRequestsg100() {
      object.ReferenceEquals(global::gt_msg.GtSg100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ForceExitTableResponsesg100 : pb::GeneratedMessage<ForceExitTableResponsesg100, ForceExitTableResponsesg100.Builder> {
    private ForceExitTableResponsesg100() { }
    private static readonly ForceExitTableResponsesg100 defaultInstance = new ForceExitTableResponsesg100().MakeReadOnly();
    private static readonly string[] _forceExitTableResponsesg100FieldNames = new string[] { "code" };
    private static readonly uint[] _forceExitTableResponsesg100FieldTags = new uint[] { 8 };
    public static ForceExitTableResponsesg100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ForceExitTableResponsesg100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ForceExitTableResponsesg100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_ForceExitTableResponsesg100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ForceExitTableResponsesg100, ForceExitTableResponsesg100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_ForceExitTableResponsesg100__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Code {
        Normal = 0,
        GiveUp = 1,
        NoEnoughMoney = 2,
        ChangeTable = 3,
        CanNotExitForPlaying = 4,
        CanNotChangeTableForPlaying = 5,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.ForceExitTableResponsesg100.Types.Code code_ = global::gt_msg.ForceExitTableResponsesg100.Types.Code.Normal;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.ForceExitTableResponsesg100.Types.Code Code {
      get { return code_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _forceExitTableResponsesg100FieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[0], (int) Code, Code);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ForceExitTableResponsesg100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ForceExitTableResponsesg100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableResponsesg100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ForceExitTableResponsesg100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableResponsesg100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ForceExitTableResponsesg100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ForceExitTableResponsesg100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ForceExitTableResponsesg100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ForceExitTableResponsesg100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ForceExitTableResponsesg100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ForceExitTableResponsesg100 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ForceExitTableResponsesg100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ForceExitTableResponsesg100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ForceExitTableResponsesg100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ForceExitTableResponsesg100 result;
      
      private ForceExitTableResponsesg100 PrepareBuilder() {
        if (resultIsReadOnly) {
          ForceExitTableResponsesg100 original = result;
          result = new ForceExitTableResponsesg100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ForceExitTableResponsesg100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.ForceExitTableResponsesg100.Descriptor; }
      }
      
      public override ForceExitTableResponsesg100 DefaultInstanceForType {
        get { return global::gt_msg.ForceExitTableResponsesg100.DefaultInstance; }
      }
      
      public override ForceExitTableResponsesg100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ForceExitTableResponsesg100) {
          return MergeFrom((ForceExitTableResponsesg100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ForceExitTableResponsesg100 other) {
        if (other == global::gt_msg.ForceExitTableResponsesg100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_forceExitTableResponsesg100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _forceExitTableResponsesg100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.ForceExitTableResponsesg100.Types.Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.ForceExitTableResponsesg100.Types.Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.ForceExitTableResponsesg100.Types.Code.Normal;
        return this;
      }
    }
    static ForceExitTableResponsesg100() {
      object.ReferenceEquals(global::gt_msg.GtSg100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GameLifeRequestsg100 : pb::GeneratedMessage<GameLifeRequestsg100, GameLifeRequestsg100.Builder> {
    private GameLifeRequestsg100() { }
    private static readonly GameLifeRequestsg100 defaultInstance = new GameLifeRequestsg100().MakeReadOnly();
    private static readonly string[] _gameLifeRequestsg100FieldNames = new string[] { "uid" };
    private static readonly uint[] _gameLifeRequestsg100FieldTags = new uint[] { 10 };
    public static GameLifeRequestsg100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameLifeRequestsg100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameLifeRequestsg100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_GameLifeRequestsg100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameLifeRequestsg100, GameLifeRequestsg100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_GameLifeRequestsg100__FieldAccessorTable; }
    }
    
    public const int UidFieldNumber = 1;
    private bool hasUid;
    private string uid_ = "";
    public bool HasUid {
      get { return hasUid; }
    }
    public string Uid {
      get { return uid_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUid) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _gameLifeRequestsg100FieldNames;
      if (hasUid) {
        output.WriteString(1, field_names[0], Uid);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Uid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GameLifeRequestsg100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameLifeRequestsg100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameLifeRequestsg100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameLifeRequestsg100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameLifeRequestsg100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameLifeRequestsg100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameLifeRequestsg100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameLifeRequestsg100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameLifeRequestsg100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameLifeRequestsg100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameLifeRequestsg100 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameLifeRequestsg100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GameLifeRequestsg100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameLifeRequestsg100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameLifeRequestsg100 result;
      
      private GameLifeRequestsg100 PrepareBuilder() {
        if (resultIsReadOnly) {
          GameLifeRequestsg100 original = result;
          result = new GameLifeRequestsg100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameLifeRequestsg100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.GameLifeRequestsg100.Descriptor; }
      }
      
      public override GameLifeRequestsg100 DefaultInstanceForType {
        get { return global::gt_msg.GameLifeRequestsg100.DefaultInstance; }
      }
      
      public override GameLifeRequestsg100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameLifeRequestsg100) {
          return MergeFrom((GameLifeRequestsg100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameLifeRequestsg100 other) {
        if (other == global::gt_msg.GameLifeRequestsg100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUid) {
          Uid = other.Uid;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameLifeRequestsg100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameLifeRequestsg100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUid = input.ReadString(ref result.uid_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUid {
        get { return result.hasUid; }
      }
      public string Uid {
        get { return result.Uid; }
        set { SetUid(value); }
      }
      public Builder SetUid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder ClearUid() {
        PrepareBuilder();
        result.hasUid = false;
        result.uid_ = "";
        return this;
      }
    }
    static GameLifeRequestsg100() {
      object.ReferenceEquals(global::gt_msg.GtSg100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GameLifeResponsesg100 : pb::GeneratedMessage<GameLifeResponsesg100, GameLifeResponsesg100.Builder> {
    private GameLifeResponsesg100() { }
    private static readonly GameLifeResponsesg100 defaultInstance = new GameLifeResponsesg100().MakeReadOnly();
    private static readonly string[] _gameLifeResponsesg100FieldNames = new string[] { "code", "continueWin", "gameAllUserNum", "level1WinChips", "level1WinChipsRank", "level2WinChips", "level2WinChipsRank", "level3WinChips", "level3WinChipsRank", "level4WinChips", "level4WinChipsRank", "level5WinChips", "level5WinChipsRank", "lostTimes", "user_info", "winTimes" };
    private static readonly uint[] _gameLifeResponsesg100FieldTags = new uint[] { 8, 40, 128, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 32, 18, 24 };
    public static GameLifeResponsesg100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameLifeResponsesg100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameLifeResponsesg100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_GameLifeResponsesg100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameLifeResponsesg100, GameLifeResponsesg100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_GameLifeResponsesg100__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Code {
        Ok = 0,
        Failed = 1,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.GameLifeResponsesg100.Types.Code code_ = global::gt_msg.GameLifeResponsesg100.Types.Code.Ok;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.GameLifeResponsesg100.Types.Code Code {
      get { return code_; }
    }
    
    public const int UserInfoFieldNumber = 2;
    private bool hasUserInfo;
    private global::gt_msg.User userInfo_;
    public bool HasUserInfo {
      get { return hasUserInfo; }
    }
    public global::gt_msg.User UserInfo {
      get { return userInfo_ ?? global::gt_msg.User.DefaultInstance; }
    }
    
    public const int WinTimesFieldNumber = 3;
    private bool hasWinTimes;
    private int winTimes_;
    public bool HasWinTimes {
      get { return hasWinTimes; }
    }
    public int WinTimes {
      get { return winTimes_; }
    }
    
    public const int LostTimesFieldNumber = 4;
    private bool hasLostTimes;
    private int lostTimes_;
    public bool HasLostTimes {
      get { return hasLostTimes; }
    }
    public int LostTimes {
      get { return lostTimes_; }
    }
    
    public const int ContinueWinFieldNumber = 5;
    private bool hasContinueWin;
    private int continueWin_;
    public bool HasContinueWin {
      get { return hasContinueWin; }
    }
    public int ContinueWin {
      get { return continueWin_; }
    }
    
    public const int Level1WinChipsFieldNumber = 6;
    private bool hasLevel1WinChips;
    private long level1WinChips_;
    public bool HasLevel1WinChips {
      get { return hasLevel1WinChips; }
    }
    public long Level1WinChips {
      get { return level1WinChips_; }
    }
    
    public const int Level1WinChipsRankFieldNumber = 7;
    private bool hasLevel1WinChipsRank;
    private int level1WinChipsRank_;
    public bool HasLevel1WinChipsRank {
      get { return hasLevel1WinChipsRank; }
    }
    public int Level1WinChipsRank {
      get { return level1WinChipsRank_; }
    }
    
    public const int Level2WinChipsFieldNumber = 8;
    private bool hasLevel2WinChips;
    private long level2WinChips_;
    public bool HasLevel2WinChips {
      get { return hasLevel2WinChips; }
    }
    public long Level2WinChips {
      get { return level2WinChips_; }
    }
    
    public const int Level2WinChipsRankFieldNumber = 9;
    private bool hasLevel2WinChipsRank;
    private int level2WinChipsRank_;
    public bool HasLevel2WinChipsRank {
      get { return hasLevel2WinChipsRank; }
    }
    public int Level2WinChipsRank {
      get { return level2WinChipsRank_; }
    }
    
    public const int Level3WinChipsFieldNumber = 10;
    private bool hasLevel3WinChips;
    private long level3WinChips_;
    public bool HasLevel3WinChips {
      get { return hasLevel3WinChips; }
    }
    public long Level3WinChips {
      get { return level3WinChips_; }
    }
    
    public const int Level3WinChipsRankFieldNumber = 11;
    private bool hasLevel3WinChipsRank;
    private int level3WinChipsRank_;
    public bool HasLevel3WinChipsRank {
      get { return hasLevel3WinChipsRank; }
    }
    public int Level3WinChipsRank {
      get { return level3WinChipsRank_; }
    }
    
    public const int Level4WinChipsFieldNumber = 12;
    private bool hasLevel4WinChips;
    private long level4WinChips_;
    public bool HasLevel4WinChips {
      get { return hasLevel4WinChips; }
    }
    public long Level4WinChips {
      get { return level4WinChips_; }
    }
    
    public const int Level4WinChipsRankFieldNumber = 13;
    private bool hasLevel4WinChipsRank;
    private int level4WinChipsRank_;
    public bool HasLevel4WinChipsRank {
      get { return hasLevel4WinChipsRank; }
    }
    public int Level4WinChipsRank {
      get { return level4WinChipsRank_; }
    }
    
    public const int Level5WinChipsFieldNumber = 14;
    private bool hasLevel5WinChips;
    private long level5WinChips_;
    public bool HasLevel5WinChips {
      get { return hasLevel5WinChips; }
    }
    public long Level5WinChips {
      get { return level5WinChips_; }
    }
    
    public const int Level5WinChipsRankFieldNumber = 15;
    private bool hasLevel5WinChipsRank;
    private int level5WinChipsRank_;
    public bool HasLevel5WinChipsRank {
      get { return hasLevel5WinChipsRank; }
    }
    public int Level5WinChipsRank {
      get { return level5WinChipsRank_; }
    }
    
    public const int GameAllUserNumFieldNumber = 16;
    private bool hasGameAllUserNum;
    private int gameAllUserNum_;
    public bool HasGameAllUserNum {
      get { return hasGameAllUserNum; }
    }
    public int GameAllUserNum {
      get { return gameAllUserNum_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        if (!hasUserInfo) return false;
        if (!UserInfo.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _gameLifeResponsesg100FieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[0], (int) Code, Code);
      }
      if (hasUserInfo) {
        output.WriteMessage(2, field_names[14], UserInfo);
      }
      if (hasWinTimes) {
        output.WriteInt32(3, field_names[15], WinTimes);
      }
      if (hasLostTimes) {
        output.WriteInt32(4, field_names[13], LostTimes);
      }
      if (hasContinueWin) {
        output.WriteInt32(5, field_names[1], ContinueWin);
      }
      if (hasLevel1WinChips) {
        output.WriteInt64(6, field_names[3], Level1WinChips);
      }
      if (hasLevel1WinChipsRank) {
        output.WriteInt32(7, field_names[4], Level1WinChipsRank);
      }
      if (hasLevel2WinChips) {
        output.WriteInt64(8, field_names[5], Level2WinChips);
      }
      if (hasLevel2WinChipsRank) {
        output.WriteInt32(9, field_names[6], Level2WinChipsRank);
      }
      if (hasLevel3WinChips) {
        output.WriteInt64(10, field_names[7], Level3WinChips);
      }
      if (hasLevel3WinChipsRank) {
        output.WriteInt32(11, field_names[8], Level3WinChipsRank);
      }
      if (hasLevel4WinChips) {
        output.WriteInt64(12, field_names[9], Level4WinChips);
      }
      if (hasLevel4WinChipsRank) {
        output.WriteInt32(13, field_names[10], Level4WinChipsRank);
      }
      if (hasLevel5WinChips) {
        output.WriteInt64(14, field_names[11], Level5WinChips);
      }
      if (hasLevel5WinChipsRank) {
        output.WriteInt32(15, field_names[12], Level5WinChipsRank);
      }
      if (hasGameAllUserNum) {
        output.WriteInt32(16, field_names[2], GameAllUserNum);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasUserInfo) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, UserInfo);
      }
      if (hasWinTimes) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, WinTimes);
      }
      if (hasLostTimes) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, LostTimes);
      }
      if (hasContinueWin) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, ContinueWin);
      }
      if (hasLevel1WinChips) {
        size += pb::CodedOutputStream.ComputeInt64Size(6, Level1WinChips);
      }
      if (hasLevel1WinChipsRank) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, Level1WinChipsRank);
      }
      if (hasLevel2WinChips) {
        size += pb::CodedOutputStream.ComputeInt64Size(8, Level2WinChips);
      }
      if (hasLevel2WinChipsRank) {
        size += pb::CodedOutputStream.ComputeInt32Size(9, Level2WinChipsRank);
      }
      if (hasLevel3WinChips) {
        size += pb::CodedOutputStream.ComputeInt64Size(10, Level3WinChips);
      }
      if (hasLevel3WinChipsRank) {
        size += pb::CodedOutputStream.ComputeInt32Size(11, Level3WinChipsRank);
      }
      if (hasLevel4WinChips) {
        size += pb::CodedOutputStream.ComputeInt64Size(12, Level4WinChips);
      }
      if (hasLevel4WinChipsRank) {
        size += pb::CodedOutputStream.ComputeInt32Size(13, Level4WinChipsRank);
      }
      if (hasLevel5WinChips) {
        size += pb::CodedOutputStream.ComputeInt64Size(14, Level5WinChips);
      }
      if (hasLevel5WinChipsRank) {
        size += pb::CodedOutputStream.ComputeInt32Size(15, Level5WinChipsRank);
      }
      if (hasGameAllUserNum) {
        size += pb::CodedOutputStream.ComputeInt32Size(16, GameAllUserNum);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GameLifeResponsesg100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameLifeResponsesg100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameLifeResponsesg100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameLifeResponsesg100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameLifeResponsesg100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameLifeResponsesg100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameLifeResponsesg100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameLifeResponsesg100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameLifeResponsesg100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameLifeResponsesg100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameLifeResponsesg100 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameLifeResponsesg100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GameLifeResponsesg100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameLifeResponsesg100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameLifeResponsesg100 result;
      
      private GameLifeResponsesg100 PrepareBuilder() {
        if (resultIsReadOnly) {
          GameLifeResponsesg100 original = result;
          result = new GameLifeResponsesg100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameLifeResponsesg100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.GameLifeResponsesg100.Descriptor; }
      }
      
      public override GameLifeResponsesg100 DefaultInstanceForType {
        get { return global::gt_msg.GameLifeResponsesg100.DefaultInstance; }
      }
      
      public override GameLifeResponsesg100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameLifeResponsesg100) {
          return MergeFrom((GameLifeResponsesg100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameLifeResponsesg100 other) {
        if (other == global::gt_msg.GameLifeResponsesg100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasUserInfo) {
          MergeUserInfo(other.UserInfo);
        }
        if (other.HasWinTimes) {
          WinTimes = other.WinTimes;
        }
        if (other.HasLostTimes) {
          LostTimes = other.LostTimes;
        }
        if (other.HasContinueWin) {
          ContinueWin = other.ContinueWin;
        }
        if (other.HasLevel1WinChips) {
          Level1WinChips = other.Level1WinChips;
        }
        if (other.HasLevel1WinChipsRank) {
          Level1WinChipsRank = other.Level1WinChipsRank;
        }
        if (other.HasLevel2WinChips) {
          Level2WinChips = other.Level2WinChips;
        }
        if (other.HasLevel2WinChipsRank) {
          Level2WinChipsRank = other.Level2WinChipsRank;
        }
        if (other.HasLevel3WinChips) {
          Level3WinChips = other.Level3WinChips;
        }
        if (other.HasLevel3WinChipsRank) {
          Level3WinChipsRank = other.Level3WinChipsRank;
        }
        if (other.HasLevel4WinChips) {
          Level4WinChips = other.Level4WinChips;
        }
        if (other.HasLevel4WinChipsRank) {
          Level4WinChipsRank = other.Level4WinChipsRank;
        }
        if (other.HasLevel5WinChips) {
          Level5WinChips = other.Level5WinChips;
        }
        if (other.HasLevel5WinChipsRank) {
          Level5WinChipsRank = other.Level5WinChipsRank;
        }
        if (other.HasGameAllUserNum) {
          GameAllUserNum = other.GameAllUserNum;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameLifeResponsesg100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameLifeResponsesg100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              global::gt_msg.User.Builder subBuilder = global::gt_msg.User.CreateBuilder();
              if (result.hasUserInfo) {
                subBuilder.MergeFrom(UserInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserInfo = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasWinTimes = input.ReadInt32(ref result.winTimes_);
              break;
            }
            case 32: {
              result.hasLostTimes = input.ReadInt32(ref result.lostTimes_);
              break;
            }
            case 40: {
              result.hasContinueWin = input.ReadInt32(ref result.continueWin_);
              break;
            }
            case 48: {
              result.hasLevel1WinChips = input.ReadInt64(ref result.level1WinChips_);
              break;
            }
            case 56: {
              result.hasLevel1WinChipsRank = input.ReadInt32(ref result.level1WinChipsRank_);
              break;
            }
            case 64: {
              result.hasLevel2WinChips = input.ReadInt64(ref result.level2WinChips_);
              break;
            }
            case 72: {
              result.hasLevel2WinChipsRank = input.ReadInt32(ref result.level2WinChipsRank_);
              break;
            }
            case 80: {
              result.hasLevel3WinChips = input.ReadInt64(ref result.level3WinChips_);
              break;
            }
            case 88: {
              result.hasLevel3WinChipsRank = input.ReadInt32(ref result.level3WinChipsRank_);
              break;
            }
            case 96: {
              result.hasLevel4WinChips = input.ReadInt64(ref result.level4WinChips_);
              break;
            }
            case 104: {
              result.hasLevel4WinChipsRank = input.ReadInt32(ref result.level4WinChipsRank_);
              break;
            }
            case 112: {
              result.hasLevel5WinChips = input.ReadInt64(ref result.level5WinChips_);
              break;
            }
            case 120: {
              result.hasLevel5WinChipsRank = input.ReadInt32(ref result.level5WinChipsRank_);
              break;
            }
            case 128: {
              result.hasGameAllUserNum = input.ReadInt32(ref result.gameAllUserNum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.GameLifeResponsesg100.Types.Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.GameLifeResponsesg100.Types.Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.GameLifeResponsesg100.Types.Code.Ok;
        return this;
      }
      
      public bool HasUserInfo {
       get { return result.hasUserInfo; }
      }
      public global::gt_msg.User UserInfo {
        get { return result.UserInfo; }
        set { SetUserInfo(value); }
      }
      public Builder SetUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = value;
        return this;
      }
      public Builder SetUserInfo(global::gt_msg.User.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserInfo(global::gt_msg.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserInfo &&
            result.userInfo_ != global::gt_msg.User.DefaultInstance) {
            result.userInfo_ = global::gt_msg.User.CreateBuilder(result.userInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.userInfo_ = value;
        }
        result.hasUserInfo = true;
        return this;
      }
      public Builder ClearUserInfo() {
        PrepareBuilder();
        result.hasUserInfo = false;
        result.userInfo_ = null;
        return this;
      }
      
      public bool HasWinTimes {
        get { return result.hasWinTimes; }
      }
      public int WinTimes {
        get { return result.WinTimes; }
        set { SetWinTimes(value); }
      }
      public Builder SetWinTimes(int value) {
        PrepareBuilder();
        result.hasWinTimes = true;
        result.winTimes_ = value;
        return this;
      }
      public Builder ClearWinTimes() {
        PrepareBuilder();
        result.hasWinTimes = false;
        result.winTimes_ = 0;
        return this;
      }
      
      public bool HasLostTimes {
        get { return result.hasLostTimes; }
      }
      public int LostTimes {
        get { return result.LostTimes; }
        set { SetLostTimes(value); }
      }
      public Builder SetLostTimes(int value) {
        PrepareBuilder();
        result.hasLostTimes = true;
        result.lostTimes_ = value;
        return this;
      }
      public Builder ClearLostTimes() {
        PrepareBuilder();
        result.hasLostTimes = false;
        result.lostTimes_ = 0;
        return this;
      }
      
      public bool HasContinueWin {
        get { return result.hasContinueWin; }
      }
      public int ContinueWin {
        get { return result.ContinueWin; }
        set { SetContinueWin(value); }
      }
      public Builder SetContinueWin(int value) {
        PrepareBuilder();
        result.hasContinueWin = true;
        result.continueWin_ = value;
        return this;
      }
      public Builder ClearContinueWin() {
        PrepareBuilder();
        result.hasContinueWin = false;
        result.continueWin_ = 0;
        return this;
      }
      
      public bool HasLevel1WinChips {
        get { return result.hasLevel1WinChips; }
      }
      public long Level1WinChips {
        get { return result.Level1WinChips; }
        set { SetLevel1WinChips(value); }
      }
      public Builder SetLevel1WinChips(long value) {
        PrepareBuilder();
        result.hasLevel1WinChips = true;
        result.level1WinChips_ = value;
        return this;
      }
      public Builder ClearLevel1WinChips() {
        PrepareBuilder();
        result.hasLevel1WinChips = false;
        result.level1WinChips_ = 0L;
        return this;
      }
      
      public bool HasLevel1WinChipsRank {
        get { return result.hasLevel1WinChipsRank; }
      }
      public int Level1WinChipsRank {
        get { return result.Level1WinChipsRank; }
        set { SetLevel1WinChipsRank(value); }
      }
      public Builder SetLevel1WinChipsRank(int value) {
        PrepareBuilder();
        result.hasLevel1WinChipsRank = true;
        result.level1WinChipsRank_ = value;
        return this;
      }
      public Builder ClearLevel1WinChipsRank() {
        PrepareBuilder();
        result.hasLevel1WinChipsRank = false;
        result.level1WinChipsRank_ = 0;
        return this;
      }
      
      public bool HasLevel2WinChips {
        get { return result.hasLevel2WinChips; }
      }
      public long Level2WinChips {
        get { return result.Level2WinChips; }
        set { SetLevel2WinChips(value); }
      }
      public Builder SetLevel2WinChips(long value) {
        PrepareBuilder();
        result.hasLevel2WinChips = true;
        result.level2WinChips_ = value;
        return this;
      }
      public Builder ClearLevel2WinChips() {
        PrepareBuilder();
        result.hasLevel2WinChips = false;
        result.level2WinChips_ = 0L;
        return this;
      }
      
      public bool HasLevel2WinChipsRank {
        get { return result.hasLevel2WinChipsRank; }
      }
      public int Level2WinChipsRank {
        get { return result.Level2WinChipsRank; }
        set { SetLevel2WinChipsRank(value); }
      }
      public Builder SetLevel2WinChipsRank(int value) {
        PrepareBuilder();
        result.hasLevel2WinChipsRank = true;
        result.level2WinChipsRank_ = value;
        return this;
      }
      public Builder ClearLevel2WinChipsRank() {
        PrepareBuilder();
        result.hasLevel2WinChipsRank = false;
        result.level2WinChipsRank_ = 0;
        return this;
      }
      
      public bool HasLevel3WinChips {
        get { return result.hasLevel3WinChips; }
      }
      public long Level3WinChips {
        get { return result.Level3WinChips; }
        set { SetLevel3WinChips(value); }
      }
      public Builder SetLevel3WinChips(long value) {
        PrepareBuilder();
        result.hasLevel3WinChips = true;
        result.level3WinChips_ = value;
        return this;
      }
      public Builder ClearLevel3WinChips() {
        PrepareBuilder();
        result.hasLevel3WinChips = false;
        result.level3WinChips_ = 0L;
        return this;
      }
      
      public bool HasLevel3WinChipsRank {
        get { return result.hasLevel3WinChipsRank; }
      }
      public int Level3WinChipsRank {
        get { return result.Level3WinChipsRank; }
        set { SetLevel3WinChipsRank(value); }
      }
      public Builder SetLevel3WinChipsRank(int value) {
        PrepareBuilder();
        result.hasLevel3WinChipsRank = true;
        result.level3WinChipsRank_ = value;
        return this;
      }
      public Builder ClearLevel3WinChipsRank() {
        PrepareBuilder();
        result.hasLevel3WinChipsRank = false;
        result.level3WinChipsRank_ = 0;
        return this;
      }
      
      public bool HasLevel4WinChips {
        get { return result.hasLevel4WinChips; }
      }
      public long Level4WinChips {
        get { return result.Level4WinChips; }
        set { SetLevel4WinChips(value); }
      }
      public Builder SetLevel4WinChips(long value) {
        PrepareBuilder();
        result.hasLevel4WinChips = true;
        result.level4WinChips_ = value;
        return this;
      }
      public Builder ClearLevel4WinChips() {
        PrepareBuilder();
        result.hasLevel4WinChips = false;
        result.level4WinChips_ = 0L;
        return this;
      }
      
      public bool HasLevel4WinChipsRank {
        get { return result.hasLevel4WinChipsRank; }
      }
      public int Level4WinChipsRank {
        get { return result.Level4WinChipsRank; }
        set { SetLevel4WinChipsRank(value); }
      }
      public Builder SetLevel4WinChipsRank(int value) {
        PrepareBuilder();
        result.hasLevel4WinChipsRank = true;
        result.level4WinChipsRank_ = value;
        return this;
      }
      public Builder ClearLevel4WinChipsRank() {
        PrepareBuilder();
        result.hasLevel4WinChipsRank = false;
        result.level4WinChipsRank_ = 0;
        return this;
      }
      
      public bool HasLevel5WinChips {
        get { return result.hasLevel5WinChips; }
      }
      public long Level5WinChips {
        get { return result.Level5WinChips; }
        set { SetLevel5WinChips(value); }
      }
      public Builder SetLevel5WinChips(long value) {
        PrepareBuilder();
        result.hasLevel5WinChips = true;
        result.level5WinChips_ = value;
        return this;
      }
      public Builder ClearLevel5WinChips() {
        PrepareBuilder();
        result.hasLevel5WinChips = false;
        result.level5WinChips_ = 0L;
        return this;
      }
      
      public bool HasLevel5WinChipsRank {
        get { return result.hasLevel5WinChipsRank; }
      }
      public int Level5WinChipsRank {
        get { return result.Level5WinChipsRank; }
        set { SetLevel5WinChipsRank(value); }
      }
      public Builder SetLevel5WinChipsRank(int value) {
        PrepareBuilder();
        result.hasLevel5WinChipsRank = true;
        result.level5WinChipsRank_ = value;
        return this;
      }
      public Builder ClearLevel5WinChipsRank() {
        PrepareBuilder();
        result.hasLevel5WinChipsRank = false;
        result.level5WinChipsRank_ = 0;
        return this;
      }
      
      public bool HasGameAllUserNum {
        get { return result.hasGameAllUserNum; }
      }
      public int GameAllUserNum {
        get { return result.GameAllUserNum; }
        set { SetGameAllUserNum(value); }
      }
      public Builder SetGameAllUserNum(int value) {
        PrepareBuilder();
        result.hasGameAllUserNum = true;
        result.gameAllUserNum_ = value;
        return this;
      }
      public Builder ClearGameAllUserNum() {
        PrepareBuilder();
        result.hasGameAllUserNum = false;
        result.gameAllUserNum_ = 0;
        return this;
      }
    }
    static GameLifeResponsesg100() {
      object.ReferenceEquals(global::gt_msg.GtSg100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GameRankListRequestsg100 : pb::GeneratedMessage<GameRankListRequestsg100, GameRankListRequestsg100.Builder> {
    private GameRankListRequestsg100() { }
    private static readonly GameRankListRequestsg100 defaultInstance = new GameRankListRequestsg100().MakeReadOnly();
    private static readonly string[] _gameRankListRequestsg100FieldNames = new string[] {  };
    private static readonly uint[] _gameRankListRequestsg100FieldTags = new uint[] {  };
    public static GameRankListRequestsg100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameRankListRequestsg100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameRankListRequestsg100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_GameRankListRequestsg100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameRankListRequestsg100, GameRankListRequestsg100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_GameRankListRequestsg100__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _gameRankListRequestsg100FieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GameRankListRequestsg100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameRankListRequestsg100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameRankListRequestsg100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameRankListRequestsg100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameRankListRequestsg100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameRankListRequestsg100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameRankListRequestsg100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameRankListRequestsg100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameRankListRequestsg100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameRankListRequestsg100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameRankListRequestsg100 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameRankListRequestsg100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GameRankListRequestsg100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameRankListRequestsg100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameRankListRequestsg100 result;
      
      private GameRankListRequestsg100 PrepareBuilder() {
        if (resultIsReadOnly) {
          GameRankListRequestsg100 original = result;
          result = new GameRankListRequestsg100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameRankListRequestsg100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.GameRankListRequestsg100.Descriptor; }
      }
      
      public override GameRankListRequestsg100 DefaultInstanceForType {
        get { return global::gt_msg.GameRankListRequestsg100.DefaultInstance; }
      }
      
      public override GameRankListRequestsg100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameRankListRequestsg100) {
          return MergeFrom((GameRankListRequestsg100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameRankListRequestsg100 other) {
        if (other == global::gt_msg.GameRankListRequestsg100.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameRankListRequestsg100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameRankListRequestsg100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static GameRankListRequestsg100() {
      object.ReferenceEquals(global::gt_msg.GtSg100.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GameRankListResponsesg100 : pb::GeneratedMessage<GameRankListResponsesg100, GameRankListResponsesg100.Builder> {
    private GameRankListResponsesg100() { }
    private static readonly GameRankListResponsesg100 defaultInstance = new GameRankListResponsesg100().MakeReadOnly();
    private static readonly string[] _gameRankListResponsesg100FieldNames = new string[] { "all_chips", "all_times", "code", "day_win_chips", "uid" };
    private static readonly uint[] _gameRankListResponsesg100FieldTags = new uint[] { 42, 34, 8, 26, 18 };
    public static GameRankListResponsesg100 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GameRankListResponsesg100 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GameRankListResponsesg100 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_GameRankListResponsesg100__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GameRankListResponsesg100, GameRankListResponsesg100.Builder> InternalFieldAccessors {
      get { return global::gt_msg.GtSg100.internal__static_gt_msg_GameRankListResponsesg100__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Code {
        Ok = 0,
        Failed = 1,
      }
      
    }
    #endregion
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private global::gt_msg.GameRankListResponsesg100.Types.Code code_ = global::gt_msg.GameRankListResponsesg100.Types.Code.Ok;
    public bool HasCode {
      get { return hasCode; }
    }
    public global::gt_msg.GameRankListResponsesg100.Types.Code Code {
      get { return code_; }
    }
    
    public const int UidFieldNumber = 2;
    private bool hasUid;
    private string uid_ = "";
    public bool HasUid {
      get { return hasUid; }
    }
    public string Uid {
      get { return uid_; }
    }
    
    public const int DayWinChipsFieldNumber = 3;
    private pbc::PopsicleList<string> dayWinChips_ = new pbc::PopsicleList<string>();
    public scg::IList<string> DayWinChipsList {
      get { return pbc::Lists.AsReadOnly(dayWinChips_); }
    }
    public int DayWinChipsCount {
      get { return dayWinChips_.Count; }
    }
    public string GetDayWinChips(int index) {
      return dayWinChips_[index];
    }
    
    public const int AllTimesFieldNumber = 4;
    private pbc::PopsicleList<string> allTimes_ = new pbc::PopsicleList<string>();
    public scg::IList<string> AllTimesList {
      get { return pbc::Lists.AsReadOnly(allTimes_); }
    }
    public int AllTimesCount {
      get { return allTimes_.Count; }
    }
    public string GetAllTimes(int index) {
      return allTimes_[index];
    }
    
    public const int AllChipsFieldNumber = 5;
    private pbc::PopsicleList<string> allChips_ = new pbc::PopsicleList<string>();
    public scg::IList<string> AllChipsList {
      get { return pbc::Lists.AsReadOnly(allChips_); }
    }
    public int AllChipsCount {
      get { return allChips_.Count; }
    }
    public string GetAllChips(int index) {
      return allChips_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        if (!hasUid) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _gameRankListResponsesg100FieldNames;
      if (hasCode) {
        output.WriteEnum(1, field_names[2], (int) Code, Code);
      }
      if (hasUid) {
        output.WriteString(2, field_names[4], Uid);
      }
      if (dayWinChips_.Count > 0) {
        output.WriteStringArray(3, field_names[3], dayWinChips_);
      }
      if (allTimes_.Count > 0) {
        output.WriteStringArray(4, field_names[1], allTimes_);
      }
      if (allChips_.Count > 0) {
        output.WriteStringArray(5, field_names[0], allChips_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
      }
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Uid);
      }
      {
        int dataSize = 0;
        foreach (string element in DayWinChipsList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * dayWinChips_.Count;
      }
      {
        int dataSize = 0;
        foreach (string element in AllTimesList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * allTimes_.Count;
      }
      {
        int dataSize = 0;
        foreach (string element in AllChipsList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * allChips_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GameRankListResponsesg100 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameRankListResponsesg100 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameRankListResponsesg100 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GameRankListResponsesg100 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GameRankListResponsesg100 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameRankListResponsesg100 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GameRankListResponsesg100 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GameRankListResponsesg100 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GameRankListResponsesg100 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GameRankListResponsesg100 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GameRankListResponsesg100 MakeReadOnly() {
      dayWinChips_.MakeReadOnly();
      allTimes_.MakeReadOnly();
      allChips_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GameRankListResponsesg100 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GameRankListResponsesg100, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GameRankListResponsesg100 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GameRankListResponsesg100 result;
      
      private GameRankListResponsesg100 PrepareBuilder() {
        if (resultIsReadOnly) {
          GameRankListResponsesg100 original = result;
          result = new GameRankListResponsesg100();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GameRankListResponsesg100 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::gt_msg.GameRankListResponsesg100.Descriptor; }
      }
      
      public override GameRankListResponsesg100 DefaultInstanceForType {
        get { return global::gt_msg.GameRankListResponsesg100.DefaultInstance; }
      }
      
      public override GameRankListResponsesg100 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GameRankListResponsesg100) {
          return MergeFrom((GameRankListResponsesg100) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GameRankListResponsesg100 other) {
        if (other == global::gt_msg.GameRankListResponsesg100.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasUid) {
          Uid = other.Uid;
        }
        if (other.dayWinChips_.Count != 0) {
          result.dayWinChips_.Add(other.dayWinChips_);
        }
        if (other.allTimes_.Count != 0) {
          result.allTimes_.Add(other.allTimes_);
        }
        if (other.allChips_.Count != 0) {
          result.allChips_.Add(other.allChips_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gameRankListResponsesg100FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gameRankListResponsesg100FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.code_, out unknown)) {
                result.hasCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasUid = input.ReadString(ref result.uid_);
              break;
            }
            case 26: {
              input.ReadStringArray(tag, field_name, result.dayWinChips_);
              break;
            }
            case 34: {
              input.ReadStringArray(tag, field_name, result.allTimes_);
              break;
            }
            case 42: {
              input.ReadStringArray(tag, field_name, result.allChips_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
       get { return result.hasCode; }
      }
      public global::gt_msg.GameRankListResponsesg100.Types.Code Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(global::gt_msg.GameRankListResponsesg100.Types.Code value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = global::gt_msg.GameRankListResponsesg100.Types.Code.Ok;
        return this;
      }
      
      public bool HasUid {
        get { return result.hasUid; }
      }
      public string Uid {
        get { return result.Uid; }
        set { SetUid(value); }
      }
      public Builder SetUid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder ClearUid() {
        PrepareBuilder();
        result.hasUid = false;
        result.uid_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<string> DayWinChipsList {
        get { return PrepareBuilder().dayWinChips_; }
      }
      public int DayWinChipsCount {
        get { return result.DayWinChipsCount; }
      }
      public string GetDayWinChips(int index) {
        return result.GetDayWinChips(index);
      }
      public Builder SetDayWinChips(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.dayWinChips_[index] = value;
        return this;
      }
      public Builder AddDayWinChips(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.dayWinChips_.Add(value);
        return this;
      }
      public Builder AddRangeDayWinChips(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.dayWinChips_.Add(values);
        return this;
      }
      public Builder ClearDayWinChips() {
        PrepareBuilder();
        result.dayWinChips_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> AllTimesList {
        get { return PrepareBuilder().allTimes_; }
      }
      public int AllTimesCount {
        get { return result.AllTimesCount; }
      }
      public string GetAllTimes(int index) {
        return result.GetAllTimes(index);
      }
      public Builder SetAllTimes(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.allTimes_[index] = value;
        return this;
      }
      public Builder AddAllTimes(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.allTimes_.Add(value);
        return this;
      }
      public Builder AddRangeAllTimes(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.allTimes_.Add(values);
        return this;
      }
      public Builder ClearAllTimes() {
        PrepareBuilder();
        result.allTimes_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> AllChipsList {
        get { return PrepareBuilder().allChips_; }
      }
      public int AllChipsCount {
        get { return result.AllChipsCount; }
      }
      public string GetAllChips(int index) {
        return result.GetAllChips(index);
      }
      public Builder SetAllChips(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.allChips_[index] = value;
        return this;
      }
      public Builder AddAllChips(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.allChips_.Add(value);
        return this;
      }
      public Builder AddRangeAllChips(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.allChips_.Add(values);
        return this;
      }
      public Builder ClearAllChips() {
        PrepareBuilder();
        result.allChips_.Clear();
        return this;
      }
    }
    static GameRankListResponsesg100() {
      object.ReferenceEquals(global::gt_msg.GtSg100.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
